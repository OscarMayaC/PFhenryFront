{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\nclass CameraNode extends Object3DNode {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    super(scope);\n  }\n  getNodeType(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      return 'mat4';\n    }\n    return super.getNodeType(builder);\n  }\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n  generate(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    }\n    return super.generate(builder);\n  }\n}\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\nexport default CameraNode;","map":{"version":3,"names":["_defineProperty","Object3DNode","CameraNode","constructor","scope","arguments","length","undefined","POSITION","getNodeType","builder","PROJECTION_MATRIX","update","frame","camera","uniformNode","_uniformNode","value","projectionMatrix","VIEW_MATRIX","matrixWorldInverse","object3d","generate","nodeType"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/accessors/CameraNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Object3DNode from './Object3DNode.js';\n\nclass CameraNode extends Object3DNode {\n  constructor(scope = CameraNode.POSITION) {\n    super(scope);\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      return 'mat4';\n    }\n\n    return super.getNodeType(builder);\n  }\n\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    }\n\n    return super.generate(builder);\n  }\n\n}\n\n_defineProperty(CameraNode, \"PROJECTION_MATRIX\", 'projectionMatrix');\n\nexport default CameraNode;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,UAAU,SAASD,YAAY,CAAC;EACpCE,WAAWA,CAAA,EAA8B;IAAA,IAA7BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,UAAU,CAACM,QAAQ;IACrC,KAAK,CAACJ,KAAK,CAAC;EACd;EAEAK,WAAWA,CAACC,OAAO,EAAE;IACnB,MAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIA,KAAK,KAAKF,UAAU,CAACS,iBAAiB,EAAE;MAC1C,OAAO,MAAM;IACf;IAEA,OAAO,KAAK,CAACF,WAAW,CAACC,OAAO,CAAC;EACnC;EAEAE,MAAMA,CAACC,KAAK,EAAE;IACZ,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,MAAMC,WAAW,GAAG,IAAI,CAACC,YAAY;IACrC,MAAMZ,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIA,KAAK,KAAKF,UAAU,CAACS,iBAAiB,EAAE;MAC1CI,WAAW,CAACE,KAAK,GAAGH,MAAM,CAACI,gBAAgB;IAC7C,CAAC,MAAM,IAAId,KAAK,KAAKF,UAAU,CAACiB,WAAW,EAAE;MAC3CJ,WAAW,CAACE,KAAK,GAAGH,MAAM,CAACM,kBAAkB;IAC/C,CAAC,MAAM;MACL,IAAI,CAACC,QAAQ,GAAGP,MAAM;MACtB,KAAK,CAACF,MAAM,CAACC,KAAK,CAAC;IACrB;EACF;EAEAS,QAAQA,CAACZ,OAAO,EAAE;IAChB,MAAMN,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIA,KAAK,KAAKF,UAAU,CAACS,iBAAiB,EAAE;MAC1C,IAAI,CAACK,YAAY,CAACO,QAAQ,GAAG,MAAM;IACrC;IAEA,OAAO,KAAK,CAACD,QAAQ,CAACZ,OAAO,CAAC;EAChC;AAEF;AAEAV,eAAe,CAACE,UAAU,EAAE,mBAAmB,EAAE,kBAAkB,CAAC;AAEpE,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}