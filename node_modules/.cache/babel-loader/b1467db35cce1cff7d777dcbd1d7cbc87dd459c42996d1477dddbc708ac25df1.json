{"ast":null,"code":"import { StereoCamera, Vector2 } from 'three';\nconst StereoEffect = function (renderer) {\n  const _stereo = new StereoCamera();\n  _stereo.aspect = 0.5;\n  const size = new Vector2();\n  this.setEyeSeparation = eyeSep => {\n    _stereo.eyeSep = eyeSep;\n  };\n  this.setSize = (width, height) => {\n    renderer.setSize(width, height);\n  };\n  this.render = (scene, camera) => {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n    _stereo.update(camera);\n    renderer.getSize(size);\n    if (renderer.autoClear) renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(0, 0, size.width / 2, size.height);\n    renderer.setViewport(0, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraL);\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraR);\n    renderer.setScissorTest(false);\n  };\n};\nexport { StereoEffect };","map":{"version":3,"names":["StereoCamera","Vector2","StereoEffect","renderer","_stereo","aspect","size","setEyeSeparation","eyeSep","setSize","width","height","render","scene","camera","updateMatrixWorld","parent","update","getSize","autoClear","clear","setScissorTest","setScissor","setViewport","cameraL","cameraR"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/effects/StereoEffect.js"],"sourcesContent":["import { StereoCamera, Vector2 } from 'three';\n\nconst StereoEffect = function (renderer) {\n  const _stereo = new StereoCamera();\n\n  _stereo.aspect = 0.5;\n  const size = new Vector2();\n\n  this.setEyeSeparation = eyeSep => {\n    _stereo.eyeSep = eyeSep;\n  };\n\n  this.setSize = (width, height) => {\n    renderer.setSize(width, height);\n  };\n\n  this.render = (scene, camera) => {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    _stereo.update(camera);\n\n    renderer.getSize(size);\n    if (renderer.autoClear) renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(0, 0, size.width / 2, size.height);\n    renderer.setViewport(0, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraL);\n    renderer.setScissor(size.width / 2, 0, size.width / 2, size.height);\n    renderer.setViewport(size.width / 2, 0, size.width / 2, size.height);\n    renderer.render(scene, _stereo.cameraR);\n    renderer.setScissorTest(false);\n  };\n};\n\nexport { StereoEffect };\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,OAAO,QAAQ,OAAO;AAE7C,MAAMC,YAAY,GAAG,SAAAA,CAAUC,QAAQ,EAAE;EACvC,MAAMC,OAAO,GAAG,IAAIJ,YAAY,EAAE;EAElCI,OAAO,CAACC,MAAM,GAAG,GAAG;EACpB,MAAMC,IAAI,GAAG,IAAIL,OAAO,EAAE;EAE1B,IAAI,CAACM,gBAAgB,GAAGC,MAAM,IAAI;IAChCJ,OAAO,CAACI,MAAM,GAAGA,MAAM;EACzB,CAAC;EAED,IAAI,CAACC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;IAChCR,QAAQ,CAACM,OAAO,CAACC,KAAK,EAAEC,MAAM,CAAC;EACjC,CAAC;EAED,IAAI,CAACC,MAAM,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;IAC/BD,KAAK,CAACE,iBAAiB,EAAE;IACzB,IAAID,MAAM,CAACE,MAAM,KAAK,IAAI,EAAEF,MAAM,CAACC,iBAAiB,EAAE;IAEtDX,OAAO,CAACa,MAAM,CAACH,MAAM,CAAC;IAEtBX,QAAQ,CAACe,OAAO,CAACZ,IAAI,CAAC;IACtB,IAAIH,QAAQ,CAACgB,SAAS,EAAEhB,QAAQ,CAACiB,KAAK,EAAE;IACxCjB,QAAQ,CAACkB,cAAc,CAAC,IAAI,CAAC;IAC7BlB,QAAQ,CAACmB,UAAU,CAAC,CAAC,EAAE,CAAC,EAAEhB,IAAI,CAACI,KAAK,GAAG,CAAC,EAAEJ,IAAI,CAACK,MAAM,CAAC;IACtDR,QAAQ,CAACoB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAEjB,IAAI,CAACI,KAAK,GAAG,CAAC,EAAEJ,IAAI,CAACK,MAAM,CAAC;IACvDR,QAAQ,CAACS,MAAM,CAACC,KAAK,EAAET,OAAO,CAACoB,OAAO,CAAC;IACvCrB,QAAQ,CAACmB,UAAU,CAAChB,IAAI,CAACI,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEJ,IAAI,CAACI,KAAK,GAAG,CAAC,EAAEJ,IAAI,CAACK,MAAM,CAAC;IACnER,QAAQ,CAACoB,WAAW,CAACjB,IAAI,CAACI,KAAK,GAAG,CAAC,EAAE,CAAC,EAAEJ,IAAI,CAACI,KAAK,GAAG,CAAC,EAAEJ,IAAI,CAACK,MAAM,CAAC;IACpER,QAAQ,CAACS,MAAM,CAACC,KAAK,EAAET,OAAO,CAACqB,OAAO,CAAC;IACvCtB,QAAQ,CAACkB,cAAc,CAAC,KAAK,CAAC;EAChC,CAAC;AACH,CAAC;AAED,SAASnB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}