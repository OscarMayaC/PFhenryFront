{"ast":null,"code":"import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\nclass XYZLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  parse(text) {\n    const lines = text.split('\\n');\n    const vertices = [];\n    const colors = [];\n    for (let line of lines) {\n      line = line.trim();\n      if (line.charAt(0) === '#') continue; // skip comments\n\n      const lineValues = line.split(/\\s+/);\n      if (lineValues.length === 3) {\n        // XYZ\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n      }\n      if (lineValues.length === 6) {\n        // XYZRGB\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n        colors.push(parseFloat(lineValues[3]) / 255);\n        colors.push(parseFloat(lineValues[4]) / 255);\n        colors.push(parseFloat(lineValues[5]) / 255);\n      }\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    if (colors.length > 0) {\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    }\n    return geometry;\n  }\n}\nexport { XYZLoader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Float32BufferAttribute","XYZLoader","load","url","onLoad","onProgress","onError","scope","loader","manager","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","lines","split","vertices","colors","line","trim","charAt","lineValues","length","push","parseFloat","geometry","setAttribute"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/loaders/XYZLoader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Float32BufferAttribute } from 'three';\n\nclass XYZLoader extends Loader {\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  parse(text) {\n    const lines = text.split('\\n');\n    const vertices = [];\n    const colors = [];\n\n    for (let line of lines) {\n      line = line.trim();\n      if (line.charAt(0) === '#') continue; // skip comments\n\n      const lineValues = line.split(/\\s+/);\n\n      if (lineValues.length === 3) {\n        // XYZ\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n      }\n\n      if (lineValues.length === 6) {\n        // XYZRGB\n        vertices.push(parseFloat(lineValues[0]));\n        vertices.push(parseFloat(lineValues[1]));\n        vertices.push(parseFloat(lineValues[2]));\n        colors.push(parseFloat(lineValues[3]) / 255);\n        colors.push(parseFloat(lineValues[4]) / 255);\n        colors.push(parseFloat(lineValues[5]) / 255);\n      }\n    }\n\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\n    if (colors.length > 0) {\n      geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    }\n\n    return geometry;\n  }\n\n}\n\nexport { XYZLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}