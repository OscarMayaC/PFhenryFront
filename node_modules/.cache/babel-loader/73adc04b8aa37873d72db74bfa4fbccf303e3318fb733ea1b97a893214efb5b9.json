{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from 'three';\n\n/**\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n    _defineProperty(this, \"object\", void 0);\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n    _defineProperty(this, \"EPS\", 0.000001);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"deviceOrientation\", {\n      alpha: 0,\n      beta: 0,\n      gamma: 0\n    });\n    _defineProperty(this, \"screenOrientation\", 0);\n    _defineProperty(this, \"alphaOffset\", 0);\n    _defineProperty(this, \"onDeviceOrientationChangeEvent\", event => {\n      this.deviceOrientation = event;\n    });\n    _defineProperty(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    });\n    _defineProperty(this, \"zee\", new Vector3(0, 0, 1));\n    _defineProperty(this, \"euler\", new Euler());\n    _defineProperty(this, \"q0\", new Quaternion());\n    _defineProperty(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n    _defineProperty(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, 'YXZ'); // 'ZXY' for the device, but 'YXZ' for us\n\n      quaternion.setFromEuler(this.euler); // orient the device\n\n      quaternion.multiply(this.q1); // camera looks out the back of the device, not the top\n\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient)); // adjust for screen orientation\n    });\n\n    _defineProperty(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent(); // run once on load\n      // iOS 13+\n\n      if (window.DeviceOrientationEvent !== undefined && typeof window.DeviceOrientationEvent.requestPermission === 'function') {\n        window.DeviceOrientationEvent.requestPermission().then(response => {\n          if (response == 'granted') {\n            window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n            window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n          }\n        }).catch(error => {\n          console.error('THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error);\n        });\n      } else {\n        window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n        window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n      }\n      this.enabled = true;\n    });\n    _defineProperty(this, \"disconnect\", () => {\n      window.removeEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n      window.removeEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n    _defineProperty(this, \"lastQuaternion\", new Quaternion());\n    _defineProperty(this, \"update\", () => {\n      if (this.enabled === false) return;\n      const device = this.deviceOrientation;\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0; // Z\n\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0; // X'\n\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0; // Y''\n\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0; // O\n\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n    _defineProperty(this, \"dispose\", () => this.disconnect());\n    this.object = object;\n    this.object.rotation.reorder('YXZ');\n    this.connect();\n  }\n}\nexport { DeviceOrientationControls };","map":{"version":3,"names":["_defineProperty","EventDispatcher","Vector3","Euler","Quaternion","MathUtils","DeviceOrientationControls","constructor","object","type","alpha","beta","gamma","event","deviceOrientation","screenOrientation","window","orientation","Math","sqrt","quaternion","orient","euler","set","setFromEuler","multiply","q1","q0","setFromAxisAngle","zee","onScreenOrientationChangeEvent","DeviceOrientationEvent","undefined","requestPermission","then","response","addEventListener","onDeviceOrientationChangeEvent","catch","error","console","enabled","removeEventListener","device","degToRad","alphaOffset","setObjectQuaternion","lastQuaternion","dot","EPS","copy","dispatchEvent","changeEvent","disconnect","rotation","reorder","connect"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/controls/DeviceOrientationControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, Euler, Quaternion, MathUtils } from 'three';\n\n/**\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nclass DeviceOrientationControls extends EventDispatcher {\n  // radians\n  constructor(object) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n\n    _defineProperty(this, \"EPS\", 0.000001);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"deviceOrientation\", {\n      alpha: 0,\n      beta: 0,\n      gamma: 0\n    });\n\n    _defineProperty(this, \"screenOrientation\", 0);\n\n    _defineProperty(this, \"alphaOffset\", 0);\n\n    _defineProperty(this, \"onDeviceOrientationChangeEvent\", event => {\n      this.deviceOrientation = event;\n    });\n\n    _defineProperty(this, \"onScreenOrientationChangeEvent\", () => {\n      this.screenOrientation = window.orientation || 0;\n    });\n\n    _defineProperty(this, \"zee\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"euler\", new Euler());\n\n    _defineProperty(this, \"q0\", new Quaternion());\n\n    _defineProperty(this, \"q1\", new Quaternion(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5)));\n\n    _defineProperty(this, \"setObjectQuaternion\", (quaternion, alpha, beta, gamma, orient) => {\n      this.euler.set(beta, alpha, -gamma, 'YXZ'); // 'ZXY' for the device, but 'YXZ' for us\n\n      quaternion.setFromEuler(this.euler); // orient the device\n\n      quaternion.multiply(this.q1); // camera looks out the back of the device, not the top\n\n      quaternion.multiply(this.q0.setFromAxisAngle(this.zee, -orient)); // adjust for screen orientation\n    });\n\n    _defineProperty(this, \"connect\", () => {\n      this.onScreenOrientationChangeEvent(); // run once on load\n      // iOS 13+\n\n      if (window.DeviceOrientationEvent !== undefined && typeof window.DeviceOrientationEvent.requestPermission === 'function') {\n        window.DeviceOrientationEvent.requestPermission().then(response => {\n          if (response == 'granted') {\n            window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n            window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n          }\n        }).catch(error => {\n          console.error('THREE.DeviceOrientationControls: Unable to use DeviceOrientation API:', error);\n        });\n      } else {\n        window.addEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n        window.addEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n      }\n\n      this.enabled = true;\n    });\n\n    _defineProperty(this, \"disconnect\", () => {\n      window.removeEventListener('orientationchange', this.onScreenOrientationChangeEvent);\n      window.removeEventListener('deviceorientation', this.onDeviceOrientationChangeEvent);\n      this.enabled = false;\n    });\n\n    _defineProperty(this, \"lastQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"update\", () => {\n      if (this.enabled === false) return;\n      const device = this.deviceOrientation;\n\n      if (device) {\n        const alpha = device.alpha ? MathUtils.degToRad(device.alpha) + this.alphaOffset : 0; // Z\n\n        const beta = device.beta ? MathUtils.degToRad(device.beta) : 0; // X'\n\n        const gamma = device.gamma ? MathUtils.degToRad(device.gamma) : 0; // Y''\n\n        const orient = this.screenOrientation ? MathUtils.degToRad(this.screenOrientation) : 0; // O\n\n        this.setObjectQuaternion(this.object.quaternion, alpha, beta, gamma, orient);\n\n        if (8 * (1 - this.lastQuaternion.dot(this.object.quaternion)) > this.EPS) {\n          this.lastQuaternion.copy(this.object.quaternion);\n          this.dispatchEvent(this.changeEvent);\n        }\n      }\n    });\n\n    _defineProperty(this, \"dispose\", () => this.disconnect());\n\n    this.object = object;\n    this.object.rotation.reorder('YXZ');\n    this.connect();\n  }\n\n}\n\nexport { DeviceOrientationControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}