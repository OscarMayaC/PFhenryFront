import defaultDayjs, { Dayjs } from 'dayjs';
import BaseAdapterDayjs from '@date-io/dayjs';
import { DateIOFormats } from '@date-io/core/IUtils';
import { FieldFormatTokenMap, MuiPickersAdapter } from '../internals/models';
interface Opts {
    locale?: string;
    /** Make sure that your dayjs instance extends customParseFormat and advancedFormat */
    instance?: typeof defaultDayjs;
    formats?: Partial<DateIOFormats>;
}
export declare class AdapterDayjs extends BaseAdapterDayjs implements MuiPickersAdapter<Dayjs> {
    isMUIAdapter: boolean;
    constructor(options: Opts);
    formatTokenMap: FieldFormatTokenMap;
    escapedCharacters: {
        start: string;
        end: string;
    };
    private getLocaleFormats;
    is12HourCycleInCurrentLocale: () => boolean;
    /**
     * The current getFormatHelperText method uses an outdated format parsing logic.
     * We should use this one in the future to support all localized formats.
     */
    expandFormat: (format: string) => string;
    getFormatHelperText: (format: string) => string;
    getWeekNumber: (date: Dayjs) => number;
}
export {};
