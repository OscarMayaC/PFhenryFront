{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\nfunction createSpread(child, _ref) {\n  let {\n    keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  } = _ref;\n  let spread = pick(child, keys);\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = {\n      ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = {\n      ...spread,\n      children: inject\n    };else spread = {\n      ...spread,\n      ...inject\n    };\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /*#__PURE__*/React.forwardRef((_ref2, forwardRef) => {\n  let {\n    isChild = false,\n    object,\n    children,\n    deep,\n    castShadow,\n    receiveShadow,\n    inject,\n    keys,\n    ...props\n  } = _ref2;\n  var _object;\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\nexport { Clone };","map":{"version":3,"names":["_extends","THREE","React","pick","SkeletonUtils","createSpread","child","_ref","keys","deep","inject","castShadow","receiveShadow","spread","geometry","clone","material","children","isValidElement","Mesh","Clone","forwardRef","_ref2","isChild","object","props","_object","config","useMemo","Array","isArray","isSkinned","traverse","isSkinnedMesh","createElement","ref","map","o","key","uuid","injectChildren","Element","type","toLowerCase","slice"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/@react-three/drei/core/Clone.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport pick from 'lodash.pick';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = pick(child, keys);\n\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n\n  if (inject) {\n    if (typeof inject === 'function') spread = { ...spread,\n      children: inject(child)\n    };else if ( /*#__PURE__*/React.isValidElement(inject)) spread = { ...spread,\n      children: inject\n    };else spread = { ...spread,\n      ...inject\n    };\n  }\n\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n\n  return spread;\n}\n\nconst Clone = /*#__PURE__*/React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  var _object;\n\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n\n    return object;\n  }, [object, isChild]); // Deal with arrayed clones\n\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  } // Singleton clones\n\n\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), ((_object = object) == null ? void 0 : _object.children).map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}