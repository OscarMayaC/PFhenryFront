{"ast":null,"code":"import { NodeUpdateType } from './constants.js';\nclass NodeFrame {\n  constructor() {\n    this.time = 0;\n    this.deltaTime = 0;\n    this.frameId = 0;\n    this.startTime = null;\n    this.updateMap = new WeakMap();\n    this.renderer = null;\n    this.material = null;\n    this.camera = null;\n    this.object = null;\n  }\n  updateNode(node) {\n    if (node.updateType === NodeUpdateType.Frame) {\n      if (this.updateMap.get(node) !== this.frameId) {\n        this.updateMap.set(node, this.frameId);\n        node.update(this);\n      }\n    } else if (node.updateType === NodeUpdateType.Object) {\n      node.update(this);\n    }\n  }\n  update() {\n    this.frameId++;\n    if (this.lastTime === undefined) this.lastTime = performance.now();\n    this.deltaTime = (performance.now() - this.lastTime) / 1000;\n    this.lastTime = performance.now();\n    this.time += this.deltaTime;\n  }\n}\nexport default NodeFrame;","map":{"version":3,"names":["NodeUpdateType","NodeFrame","constructor","time","deltaTime","frameId","startTime","updateMap","WeakMap","renderer","material","camera","object","updateNode","node","updateType","Frame","get","set","update","Object","lastTime","undefined","performance","now"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/core/NodeFrame.js"],"sourcesContent":["import { NodeUpdateType } from './constants.js';\n\nclass NodeFrame {\n  constructor() {\n    this.time = 0;\n    this.deltaTime = 0;\n    this.frameId = 0;\n    this.startTime = null;\n    this.updateMap = new WeakMap();\n    this.renderer = null;\n    this.material = null;\n    this.camera = null;\n    this.object = null;\n  }\n\n  updateNode(node) {\n    if (node.updateType === NodeUpdateType.Frame) {\n      if (this.updateMap.get(node) !== this.frameId) {\n        this.updateMap.set(node, this.frameId);\n        node.update(this);\n      }\n    } else if (node.updateType === NodeUpdateType.Object) {\n      node.update(this);\n    }\n  }\n\n  update() {\n    this.frameId++;\n    if (this.lastTime === undefined) this.lastTime = performance.now();\n    this.deltaTime = (performance.now() - this.lastTime) / 1000;\n    this.lastTime = performance.now();\n    this.time += this.deltaTime;\n  }\n\n}\n\nexport default NodeFrame;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,gBAAgB;AAE/C,MAAMC,SAAS,CAAC;EACdC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,IAAI,GAAG,CAAC;IACb,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,IAAIC,OAAO,EAAE;IAC9B,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,UAAUA,CAACC,IAAI,EAAE;IACf,IAAIA,IAAI,CAACC,UAAU,KAAKf,cAAc,CAACgB,KAAK,EAAE;MAC5C,IAAI,IAAI,CAACT,SAAS,CAACU,GAAG,CAACH,IAAI,CAAC,KAAK,IAAI,CAACT,OAAO,EAAE;QAC7C,IAAI,CAACE,SAAS,CAACW,GAAG,CAACJ,IAAI,EAAE,IAAI,CAACT,OAAO,CAAC;QACtCS,IAAI,CAACK,MAAM,CAAC,IAAI,CAAC;MACnB;IACF,CAAC,MAAM,IAAIL,IAAI,CAACC,UAAU,KAAKf,cAAc,CAACoB,MAAM,EAAE;MACpDN,IAAI,CAACK,MAAM,CAAC,IAAI,CAAC;IACnB;EACF;EAEAA,MAAMA,CAAA,EAAG;IACP,IAAI,CAACd,OAAO,EAAE;IACd,IAAI,IAAI,CAACgB,QAAQ,KAAKC,SAAS,EAAE,IAAI,CAACD,QAAQ,GAAGE,WAAW,CAACC,GAAG,EAAE;IAClE,IAAI,CAACpB,SAAS,GAAG,CAACmB,WAAW,CAACC,GAAG,EAAE,GAAG,IAAI,CAACH,QAAQ,IAAI,IAAI;IAC3D,IAAI,CAACA,QAAQ,GAAGE,WAAW,CAACC,GAAG,EAAE;IACjC,IAAI,CAACrB,IAAI,IAAI,IAAI,CAACC,SAAS;EAC7B;AAEF;AAEA,eAAeH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}