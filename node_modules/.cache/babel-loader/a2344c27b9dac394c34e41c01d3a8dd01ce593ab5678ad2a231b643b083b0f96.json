{"ast":null,"code":"import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nfunction CubeCamera(_ref) {\n  let {\n    children,\n    fog,\n    frames = Infinity,\n    resolution = 256,\n    near = 0.1,\n    far = 1000,\n    envMap,\n    ...props\n  } = _ref;\n  const ref = React.useRef();\n  const [camera, setCamera] = React.useState(null);\n  const scene = useThree(_ref2 => {\n    let {\n      scene\n    } = _ref2;\n    return scene;\n  });\n  const gl = useThree(_ref3 => {\n    let {\n      gl\n    } = _ref3;\n    return gl;\n  });\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.encoding = gl.outputEncoding;\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  let count = 0;\n  let originalFog;\n  let originalBackground;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.visible = false;\n      originalFog = scene.fog;\n      originalBackground = scene.background;\n      scene.background = envMap || originalBackground;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      scene.background = originalBackground;\n      ref.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\nexport { CubeCamera };","map":{"version":3,"names":["WebGLCubeRenderTarget","HalfFloatType","React","useThree","useFrame","CubeCamera","_ref","children","fog","frames","Infinity","resolution","near","far","envMap","props","ref","useRef","camera","setCamera","useState","scene","_ref2","gl","_ref3","fbo","useMemo","texture","encoding","outputEncoding","type","count","originalFog","originalBackground","current","visible","background","update","createElement","args"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/@react-three/drei/core/CubeCamera.js"],"sourcesContent":["import { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction CubeCamera({\n  children,\n  fog,\n  frames = Infinity,\n  resolution = 256,\n  near = 0.1,\n  far = 1000,\n  envMap,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [camera, setCamera] = React.useState(null);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.encoding = gl.outputEncoding;\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  let count = 0;\n  let originalFog;\n  let originalBackground;\n  useFrame(() => {\n    if (camera && ref.current && (frames === Infinity || count < frames)) {\n      ref.current.visible = false;\n      originalFog = scene.fog;\n      originalBackground = scene.background;\n      scene.background = envMap || originalBackground;\n      scene.fog = fog || originalFog;\n      camera.update(gl, scene);\n      scene.fog = originalFog;\n      scene.background = originalBackground;\n      ref.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: setCamera,\n    args: [near, far, fbo]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children(fbo.texture)));\n}\n\nexport { CubeCamera };\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,aAAa,QAAQ,OAAO;AAC5D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,oBAAoB;AAEvD,SAASC,UAAUA,CAAAC,IAAA,EAShB;EAAA,IATiB;IAClBC,QAAQ;IACRC,GAAG;IACHC,MAAM,GAAGC,QAAQ;IACjBC,UAAU,GAAG,GAAG;IAChBC,IAAI,GAAG,GAAG;IACVC,GAAG,GAAG,IAAI;IACVC,MAAM;IACN,GAAGC;EACL,CAAC,GAAAT,IAAA;EACC,MAAMU,GAAG,GAAGd,KAAK,CAACe,MAAM,EAAE;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,KAAK,CAACkB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMC,KAAK,GAAGlB,QAAQ,CAACmB,KAAA;IAAA,IAAC;MACtBD;IACF,CAAC,GAAAC,KAAA;IAAA,OAAKD,KAAK;EAAA,EAAC;EACZ,MAAME,EAAE,GAAGpB,QAAQ,CAACqB,KAAA;IAAA,IAAC;MACnBD;IACF,CAAC,GAAAC,KAAA;IAAA,OAAKD,EAAE;EAAA,EAAC;EACT,MAAME,GAAG,GAAGvB,KAAK,CAACwB,OAAO,CAAC,MAAM;IAC9B,MAAMD,GAAG,GAAG,IAAIzB,qBAAqB,CAACW,UAAU,CAAC;IACjDc,GAAG,CAACE,OAAO,CAACC,QAAQ,GAAGL,EAAE,CAACM,cAAc;IACxCJ,GAAG,CAACE,OAAO,CAACG,IAAI,GAAG7B,aAAa;IAChC,OAAOwB,GAAG;EACZ,CAAC,EAAE,CAACd,UAAU,CAAC,CAAC;EAChB,IAAIoB,KAAK,GAAG,CAAC;EACb,IAAIC,WAAW;EACf,IAAIC,kBAAkB;EACtB7B,QAAQ,CAAC,MAAM;IACb,IAAIc,MAAM,IAAIF,GAAG,CAACkB,OAAO,KAAKzB,MAAM,KAAKC,QAAQ,IAAIqB,KAAK,GAAGtB,MAAM,CAAC,EAAE;MACpEO,GAAG,CAACkB,OAAO,CAACC,OAAO,GAAG,KAAK;MAC3BH,WAAW,GAAGX,KAAK,CAACb,GAAG;MACvByB,kBAAkB,GAAGZ,KAAK,CAACe,UAAU;MACrCf,KAAK,CAACe,UAAU,GAAGtB,MAAM,IAAImB,kBAAkB;MAC/CZ,KAAK,CAACb,GAAG,GAAGA,GAAG,IAAIwB,WAAW;MAC9Bd,MAAM,CAACmB,MAAM,CAACd,EAAE,EAAEF,KAAK,CAAC;MACxBA,KAAK,CAACb,GAAG,GAAGwB,WAAW;MACvBX,KAAK,CAACe,UAAU,GAAGH,kBAAkB;MACrCjB,GAAG,CAACkB,OAAO,CAACC,OAAO,GAAG,IAAI;MAC1BJ,KAAK,EAAE;IACT;EACF,CAAC,CAAC;EACF,OAAO,aAAa7B,KAAK,CAACoC,aAAa,CAAC,OAAO,EAAEvB,KAAK,EAAE,aAAab,KAAK,CAACoC,aAAa,CAAC,YAAY,EAAE;IACrGtB,GAAG,EAAEG,SAAS;IACdoB,IAAI,EAAE,CAAC3B,IAAI,EAAEC,GAAG,EAAEY,GAAG;EACvB,CAAC,CAAC,EAAE,aAAavB,KAAK,CAACoC,aAAa,CAAC,OAAO,EAAE;IAC5CtB,GAAG,EAAEA;EACP,CAAC,EAAET,QAAQ,CAACkB,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;AAC5B;AAEA,SAAStB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}