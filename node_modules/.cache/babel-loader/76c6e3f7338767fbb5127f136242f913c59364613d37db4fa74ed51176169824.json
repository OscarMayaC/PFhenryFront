{"ast":null,"code":"/**\n * Depth-of-field shader using mipmaps\n * - from Matt Handley @applmak\n * - requires power-of-2 sized render target with enabled mipmaps\n */\nconst DOFMipMapShader = {\n  uniforms: {\n    tColor: {\n      value: null\n    },\n    tDepth: {\n      value: null\n    },\n    focus: {\n      value: 1.0\n    },\n    maxblur: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float focus;', 'uniform float maxblur;', 'uniform sampler2D tColor;', 'uniform sampler2D tDepth;', 'varying vec2 vUv;', 'void main() {', '\tvec4 depth = texture2D( tDepth, vUv );', '\tfloat factor = depth.x - focus;', '\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );', '\tgl_FragColor = col;', '\tgl_FragColor.a = 1.0;', '}'].join('\\n')\n};\nexport { DOFMipMapShader };","map":{"version":3,"names":["DOFMipMapShader","uniforms","tColor","value","tDepth","focus","maxblur","vertexShader","join","fragmentShader"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/shaders/DOFMipMapShader.js"],"sourcesContent":["/**\n * Depth-of-field shader using mipmaps\n * - from Matt Handley @applmak\n * - requires power-of-2 sized render target with enabled mipmaps\n */\nconst DOFMipMapShader = {\n  uniforms: {\n    tColor: {\n      value: null\n    },\n    tDepth: {\n      value: null\n    },\n    focus: {\n      value: 1.0\n    },\n    maxblur: {\n      value: 1.0\n    }\n  },\n  vertexShader: ['varying vec2 vUv;', 'void main() {', '\tvUv = uv;', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n  fragmentShader: ['uniform float focus;', 'uniform float maxblur;', 'uniform sampler2D tColor;', 'uniform sampler2D tDepth;', 'varying vec2 vUv;', 'void main() {', '\tvec4 depth = texture2D( tDepth, vUv );', '\tfloat factor = depth.x - focus;', '\tvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );', '\tgl_FragColor = col;', '\tgl_FragColor.a = 1.0;', '}'].join('\\n')\n};\n\nexport { DOFMipMapShader };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAG;EACtBC,QAAQ,EAAE;IACRC,MAAM,EAAE;MACNC,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;MACND,KAAK,EAAE;IACT,CAAC;IACDE,KAAK,EAAE;MACLF,KAAK,EAAE;IACT,CAAC;IACDG,OAAO,EAAE;MACPH,KAAK,EAAE;IACT;EACF,CAAC;EACDI,YAAY,EAAE,CAAC,mBAAmB,EAAE,eAAe,EAAE,YAAY,EAAE,4EAA4E,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAChKC,cAAc,EAAE,CAAC,sBAAsB,EAAE,wBAAwB,EAAE,2BAA2B,EAAE,2BAA2B,EAAE,mBAAmB,EAAE,eAAe,EAAE,yCAAyC,EAAE,kCAAkC,EAAE,+EAA+E,EAAE,sBAAsB,EAAE,wBAAwB,EAAE,GAAG,CAAC,CAACD,IAAI,CAAC,IAAI;AACrY,CAAC;AAED,SAASR,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}