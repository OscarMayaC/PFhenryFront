{"ast":null,"code":"/**\n * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n *\n * 16 April 2012 - @blurspline\n */\nconst AsciiEffect = function (renderer, charSet, options) {\n  // its fun to create one your own!\n  charSet = charSet === undefined ? ' .:-=+*#%@' : charSet; // ' .,:;=|iI+hHOE#`$';\n  // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n  // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n  if (!options) options = {}; // Some ASCII settings\n\n  const bResolution = !options['resolution'] ? 0.15 : options['resolution']; // Higher for more details\n\n  const iScale = !options['scale'] ? 1 : options['scale'];\n  const bColor = !options['color'] ? false : options['color']; // nice but slows down rendering!\n\n  const bAlpha = !options['alpha'] ? false : options['alpha']; // Transparency\n\n  const bBlock = !options['block'] ? false : options['block']; // blocked characters. like good O dos\n\n  const bInvert = !options['invert'] ? false : options['invert']; // black is white, white is black\n\n  const strResolution = 'low';\n  let width, height;\n  const domElement = document.createElement('div');\n  domElement.style.cursor = 'default';\n  const oAscii = document.createElement('table');\n  domElement.appendChild(oAscii);\n  let iWidth, iHeight;\n  let oImg;\n  this.setSize = (w, h) => {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n  this.render = (scene, camera) => {\n    renderer.render(scene, camera);\n    asciifyImage(renderer, oAscii);\n  };\n  this.domElement = domElement; // Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n  /*\n   * jsAscii 0.1\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n   */\n\n  function initAsciiSize() {\n    iWidth = Math.round(width * fResolution);\n    iHeight = Math.round(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight; // oCanvas.style.display = \"none\";\n    // oCanvas.style.width = iWidth;\n    // oCanvas.style.height = iHeight;\n\n    oImg = renderer.domElement;\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    const oStyle = oAscii.style;\n    oStyle.display = 'inline';\n    oStyle.width = `${Math.round(iWidth / fResolution * iScale)}px`;\n    oStyle.height = `${Math.round(iHeight / fResolution * iScale)}px`;\n    oStyle.whiteSpace = 'pre';\n    oStyle.margin = '0px';\n    oStyle.padding = '0px';\n    oStyle.letterSpacing = `${fLetterSpacing}px`;\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = `${fFontSize}px`;\n    oStyle.lineHeight = `${fLineHeight}px`;\n    oStyle.textAlign = 'left';\n    oStyle.textDecoration = 'none';\n  }\n  const aDefaultCharList = ' .,:;i1tfLCG08@'.split('');\n  const aDefaultColorCharList = ' CGO08@'.split('');\n  var strFont = 'courier new, monospace';\n  const oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement('canvas');\n  if (!oCanvas.getContext) {\n    return;\n  }\n  const oCtx = oCanvas.getContext('2d');\n  if (!oCtx.getImageData) {\n    return;\n  }\n  let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fResolution = 0.5;\n  switch (strResolution) {\n    case 'low':\n      fResolution = 0.25;\n      break;\n    case 'medium':\n      fResolution = 0.5;\n      break;\n    case 'high':\n      fResolution = 1;\n      break;\n  }\n  if (bResolution) fResolution = bResolution; // Setup dom\n\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale; // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n  var fLetterSpacing = 0;\n  {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  }\n  // convert img element to ascii\n\n  function asciifyImage(canvasRenderer, oAscii) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data; // Coloring loop starts now\n\n    let strChars = ''; // console.time('rendering');\n\n    for (let y = 0; y < iHeight; y += 2) {\n      for (let x = 0; x < iWidth; x++) {\n        const iOffset = (y * iWidth + x) * 4;\n        const iRed = oImgData[iOffset];\n        const iGreen = oImgData[iOffset + 1];\n        const iBlue = oImgData[iOffset + 2];\n        const iAlpha = oImgData[iOffset + 3];\n        let iCharIdx;\n        let fBrightness;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255; // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n        if (iAlpha == 0) {\n          // should calculate alpha instead, but quick hack :)\n          //fBrightness *= (iAlpha / 255);\n          fBrightness = 1;\n        }\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        } // good for debugging\n        //fBrightness = Math.floor(fBrightness * 10);\n        //strThisChar = fBrightness;\n\n        let strThisChar = aCharList[iCharIdx];\n        if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;';\n        if (bColor) {\n          strChars += `<span style='color:rgb(${iRed},${iGreen},${iBlue});${bBlock ? `background-color:rgb(${iRed},${iGreen},${iBlue});` : ''}${bAlpha ? `opacity:${iAlpha / 255};` : ''}'>${strThisChar}</span>`;\n        } else {\n          strChars += strThisChar;\n        }\n      }\n      strChars += '<br/>';\n    }\n    oAscii.innerHTML = `<tr><td>${strChars}</td></tr>`; // console.timeEnd('rendering');\n    // return oAscii;\n  } // end modified asciifyImage block\n};\n\nexport { AsciiEffect };","map":{"version":3,"names":["AsciiEffect","renderer","charSet","options","undefined","bResolution","iScale","bColor","bAlpha","bBlock","bInvert","strResolution","width","height","domElement","document","createElement","style","cursor","oAscii","appendChild","iWidth","iHeight","oImg","setSize","w","h","initAsciiSize","render","scene","camera","asciifyImage","Math","round","fResolution","oCanvas","backgroundColor","rows","cells","color","cellSpacing","cellPadding","oStyle","display","whiteSpace","margin","padding","letterSpacing","fLetterSpacing","fontFamily","strFont","fontSize","fFontSize","lineHeight","fLineHeight","textAlign","textDecoration","aDefaultCharList","split","aDefaultColorCharList","oCanvasImg","getContext","oCtx","getImageData","aCharList","canvasRenderer","clearRect","drawImage","oImgData","data","strChars","y","x","iOffset","iRed","iGreen","iBlue","iAlpha","iCharIdx","fBrightness","floor","length","strThisChar","innerHTML"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/effects/AsciiEffect.js"],"sourcesContent":["/**\n * Ascii generation is based on http://www.nihilogic.dk/labs/jsascii/\n * Maybe more about this later with a blog post at http://lab4games.net/zz85/blog\n *\n * 16 April 2012 - @blurspline\n */\nconst AsciiEffect = function (renderer, charSet, options) {\n  // its fun to create one your own!\n  charSet = charSet === undefined ? ' .:-=+*#%@' : charSet; // ' .,:;=|iI+hHOE#`$';\n  // darker bolder character set from https://github.com/saw/Canvas-ASCII-Art/\n  // ' .\\'`^\",:;Il!i~+_-?][}{1)(|/tfjrxnuvczXYUJCLQ0OZmwqpdbkhao*#MW&8%B@$'.split('');\n\n  if (!options) options = {}; // Some ASCII settings\n\n  const bResolution = !options['resolution'] ? 0.15 : options['resolution']; // Higher for more details\n\n  const iScale = !options['scale'] ? 1 : options['scale'];\n  const bColor = !options['color'] ? false : options['color']; // nice but slows down rendering!\n\n  const bAlpha = !options['alpha'] ? false : options['alpha']; // Transparency\n\n  const bBlock = !options['block'] ? false : options['block']; // blocked characters. like good O dos\n\n  const bInvert = !options['invert'] ? false : options['invert']; // black is white, white is black\n\n  const strResolution = 'low';\n  let width, height;\n  const domElement = document.createElement('div');\n  domElement.style.cursor = 'default';\n  const oAscii = document.createElement('table');\n  domElement.appendChild(oAscii);\n  let iWidth, iHeight;\n  let oImg;\n\n  this.setSize = (w, h) => {\n    width = w;\n    height = h;\n    renderer.setSize(w, h);\n    initAsciiSize();\n  };\n\n  this.render = (scene, camera) => {\n    renderer.render(scene, camera);\n    asciifyImage(renderer, oAscii);\n  };\n\n  this.domElement = domElement; // Throw in ascii library from http://www.nihilogic.dk/labs/jsascii/jsascii.js\n\n  /*\n   * jsAscii 0.1\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * MIT License [http://www.nihilogic.dk/licenses/mit-license.txt]\n   */\n\n  function initAsciiSize() {\n    iWidth = Math.round(width * fResolution);\n    iHeight = Math.round(height * fResolution);\n    oCanvas.width = iWidth;\n    oCanvas.height = iHeight; // oCanvas.style.display = \"none\";\n    // oCanvas.style.width = iWidth;\n    // oCanvas.style.height = iHeight;\n\n    oImg = renderer.domElement;\n\n    if (oImg.style.backgroundColor) {\n      oAscii.rows[0].cells[0].style.backgroundColor = oImg.style.backgroundColor;\n      oAscii.rows[0].cells[0].style.color = oImg.style.color;\n    }\n\n    oAscii.cellSpacing = 0;\n    oAscii.cellPadding = 0;\n    const oStyle = oAscii.style;\n    oStyle.display = 'inline';\n    oStyle.width = `${Math.round(iWidth / fResolution * iScale)}px`;\n    oStyle.height = `${Math.round(iHeight / fResolution * iScale)}px`;\n    oStyle.whiteSpace = 'pre';\n    oStyle.margin = '0px';\n    oStyle.padding = '0px';\n    oStyle.letterSpacing = `${fLetterSpacing}px`;\n    oStyle.fontFamily = strFont;\n    oStyle.fontSize = `${fFontSize}px`;\n    oStyle.lineHeight = `${fLineHeight}px`;\n    oStyle.textAlign = 'left';\n    oStyle.textDecoration = 'none';\n  }\n\n  const aDefaultCharList = ' .,:;i1tfLCG08@'.split('');\n  const aDefaultColorCharList = ' CGO08@'.split('');\n  var strFont = 'courier new, monospace';\n  const oCanvasImg = renderer.domElement;\n  var oCanvas = document.createElement('canvas');\n\n  if (!oCanvas.getContext) {\n    return;\n  }\n\n  const oCtx = oCanvas.getContext('2d');\n\n  if (!oCtx.getImageData) {\n    return;\n  }\n\n  let aCharList = bColor ? aDefaultColorCharList : aDefaultCharList;\n  if (charSet) aCharList = charSet;\n  var fResolution = 0.5;\n\n  switch (strResolution) {\n    case 'low':\n      fResolution = 0.25;\n      break;\n\n    case 'medium':\n      fResolution = 0.5;\n      break;\n\n    case 'high':\n      fResolution = 1;\n      break;\n  }\n\n  if (bResolution) fResolution = bResolution; // Setup dom\n\n  var fFontSize = 2 / fResolution * iScale;\n  var fLineHeight = 2 / fResolution * iScale; // adjust letter-spacing for all combinations of scale and resolution to get it to fit the image width.\n\n  var fLetterSpacing = 0;\n\n  {\n    switch (iScale) {\n      case 1:\n        fLetterSpacing = -1;\n        break;\n\n      case 2:\n      case 3:\n        fLetterSpacing = -2.1;\n        break;\n\n      case 4:\n        fLetterSpacing = -3.1;\n        break;\n\n      case 5:\n        fLetterSpacing = -4.15;\n        break;\n    }\n  }\n  // convert img element to ascii\n\n\n  function asciifyImage(canvasRenderer, oAscii) {\n    oCtx.clearRect(0, 0, iWidth, iHeight);\n    oCtx.drawImage(oCanvasImg, 0, 0, iWidth, iHeight);\n    const oImgData = oCtx.getImageData(0, 0, iWidth, iHeight).data; // Coloring loop starts now\n\n    let strChars = ''; // console.time('rendering');\n\n    for (let y = 0; y < iHeight; y += 2) {\n      for (let x = 0; x < iWidth; x++) {\n        const iOffset = (y * iWidth + x) * 4;\n        const iRed = oImgData[iOffset];\n        const iGreen = oImgData[iOffset + 1];\n        const iBlue = oImgData[iOffset + 2];\n        const iAlpha = oImgData[iOffset + 3];\n        let iCharIdx;\n        let fBrightness;\n        fBrightness = (0.3 * iRed + 0.59 * iGreen + 0.11 * iBlue) / 255; // fBrightness = (0.3*iRed + 0.5*iGreen + 0.3*iBlue) / 255;\n\n        if (iAlpha == 0) {\n          // should calculate alpha instead, but quick hack :)\n          //fBrightness *= (iAlpha / 255);\n          fBrightness = 1;\n        }\n\n        iCharIdx = Math.floor((1 - fBrightness) * (aCharList.length - 1));\n\n        if (bInvert) {\n          iCharIdx = aCharList.length - iCharIdx - 1;\n        } // good for debugging\n        //fBrightness = Math.floor(fBrightness * 10);\n        //strThisChar = fBrightness;\n\n\n        let strThisChar = aCharList[iCharIdx];\n        if (strThisChar === undefined || strThisChar == ' ') strThisChar = '&nbsp;';\n\n        if (bColor) {\n          strChars += `<span style='color:rgb(${iRed},${iGreen},${iBlue});${bBlock ? `background-color:rgb(${iRed},${iGreen},${iBlue});` : ''}${bAlpha ? `opacity:${iAlpha / 255};` : ''}'>${strThisChar}</span>`;\n        } else {\n          strChars += strThisChar;\n        }\n      }\n\n      strChars += '<br/>';\n    }\n\n    oAscii.innerHTML = `<tr><td>${strChars}</td></tr>`; // console.timeEnd('rendering');\n    // return oAscii;\n  } // end modified asciifyImage block\n\n};\n\nexport { AsciiEffect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}