import * as React from 'react';
import { useLocalizationContext } from '../useUtils';
import { applyDefaultDate } from '../../utils/date-utils';
export var validateDate = function validateDate(_ref) {
  var props = _ref.props,
    value = _ref.value,
    adapter = _ref.adapter;
  if (value === null) {
    return null;
  }
  var now = adapter.utils.date();
  var minDate = applyDefaultDate(adapter.utils, props.minDate, adapter.defaultDates.minDate);
  var maxDate = applyDefaultDate(adapter.utils, props.maxDate, adapter.defaultDates.maxDate);
  switch (true) {
    case !adapter.utils.isValid(value):
      return 'invalidDate';
    case Boolean(props.shouldDisableDate && props.shouldDisableDate(value)):
      return 'shouldDisableDate';
    case Boolean(props.shouldDisableMonth && props.shouldDisableMonth(value)):
      return 'shouldDisableMonth';
    case Boolean(props.shouldDisableYear && props.shouldDisableYear(value)):
      return 'shouldDisableYear';
    case Boolean(props.disableFuture && adapter.utils.isAfterDay(value, now)):
      return 'disableFuture';
    case Boolean(props.disablePast && adapter.utils.isBeforeDay(value, now)):
      return 'disablePast';
    case Boolean(minDate && adapter.utils.isBeforeDay(value, minDate)):
      return 'minDate';
    case Boolean(maxDate && adapter.utils.isAfterDay(value, maxDate)):
      return 'maxDate';
    default:
      return null;
  }
};
export var useIsDateDisabled = function useIsDateDisabled(_ref2) {
  var shouldDisableDate = _ref2.shouldDisableDate,
    shouldDisableMonth = _ref2.shouldDisableMonth,
    shouldDisableYear = _ref2.shouldDisableYear,
    minDate = _ref2.minDate,
    maxDate = _ref2.maxDate,
    disableFuture = _ref2.disableFuture,
    disablePast = _ref2.disablePast;
  var adapter = useLocalizationContext();
  return React.useCallback(function (day) {
    return validateDate({
      adapter: adapter,
      value: day,
      props: {
        shouldDisableDate: shouldDisableDate,
        shouldDisableMonth: shouldDisableMonth,
        shouldDisableYear: shouldDisableYear,
        minDate: minDate,
        maxDate: maxDate,
        disableFuture: disableFuture,
        disablePast: disablePast
      }
    }) !== null;
  }, [adapter, shouldDisableDate, shouldDisableMonth, shouldDisableYear, minDate, maxDate, disableFuture, disablePast]);
};