{"ast":null,"code":"import { Object3D, Box3, AnimationMixer, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial, Mesh } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\nvar MD2Character = function () {\n  var scope = this;\n  this.scale = 1;\n  this.animationFPS = 6;\n  this.root = new Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.activeAnimation = null;\n  this.mixer = null;\n  this.onLoadComplete = function () {};\n  this.loadCounter = 0;\n  this.loadParts = function (config) {\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n    for (let i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1]; // SKINS\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function (index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  };\n  this.setPlaybackRate = function (rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  };\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  };\n  this.setWeapon = function (index) {\n    for (let i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\n    var activeWeapon = this.weapons[index];\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      scope.syncWeaponAnimation();\n    }\n  };\n  this.setAnimation = function (clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n      var action = this.mixer.clipAction(clipName, this.meshBody);\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n    scope.activeClipName = clipName;\n    scope.syncWeaponAnimation();\n  };\n  this.syncWeaponAnimation = function () {\n    var clipName = scope.activeClipName;\n    if (scope.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  };\n  this.update = function (delta) {\n    if (this.mixer) this.mixer.update(delta);\n  };\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new TextureLoader();\n    var textures = [];\n    for (let i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = sRGBEncoding;\n    }\n    return textures;\n  }\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new Mesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    return mesh;\n  }\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n};\nexport { MD2Character };","map":{"version":3,"names":["Object3D","Box3","AnimationMixer","TextureLoader","UVMapping","sRGBEncoding","MeshLambertMaterial","Mesh","MD2Loader","MD2Character","scope","scale","animationFPS","root","meshBody","meshWeapon","skinsBody","skinsWeapon","weapons","activeAnimation","mixer","onLoadComplete","loadCounter","loadParts","config","length","skins","weaponsTextures","i","loadTextures","baseUrl","loader","load","body","geo","boundingBox","setFromBufferAttribute","attributes","position","y","min","mesh","createPart","set","add","clipOffset","activeAnimationClipName","geometry","animations","name","checkLoadingComplete","generateCallback","index","visible","setPlaybackRate","rate","timeScale","setWireframe","wireframeEnabled","material","materialWireframe","materialTexture","setSkin","wireframe","map","setWeapon","activeWeapon","syncWeaponAnimation","setAnimation","clipName","activeAction","stop","action","clipAction","play","activeClipName","syncWith","update","delta","textureUrls","textureLoader","textures","mapping","encoding","skinMap","color","morphTargets","morphNormals","rotation","Math","PI","castShadow","receiveShadow"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/misc/MD2Character.js"],"sourcesContent":["import { Object3D, Box3, AnimationMixer, TextureLoader, UVMapping, sRGBEncoding, MeshLambertMaterial, Mesh } from 'three';\nimport { MD2Loader } from '../loaders/MD2Loader.js';\n\nvar MD2Character = function () {\n  var scope = this;\n  this.scale = 1;\n  this.animationFPS = 6;\n  this.root = new Object3D();\n  this.meshBody = null;\n  this.meshWeapon = null;\n  this.skinsBody = [];\n  this.skinsWeapon = [];\n  this.weapons = [];\n  this.activeAnimation = null;\n  this.mixer = null;\n\n  this.onLoadComplete = function () {};\n\n  this.loadCounter = 0;\n\n  this.loadParts = function (config) {\n    this.loadCounter = config.weapons.length * 2 + config.skins.length + 1;\n    var weaponsTextures = [];\n\n    for (let i = 0; i < config.weapons.length; i++) weaponsTextures[i] = config.weapons[i][1]; // SKINS\n\n\n    this.skinsBody = loadTextures(config.baseUrl + 'skins/', config.skins);\n    this.skinsWeapon = loadTextures(config.baseUrl + 'skins/', weaponsTextures); // BODY\n\n    var loader = new MD2Loader();\n    loader.load(config.baseUrl + config.body, function (geo) {\n      var boundingBox = new Box3();\n      boundingBox.setFromBufferAttribute(geo.attributes.position);\n      scope.root.position.y = -scope.scale * boundingBox.min.y;\n      var mesh = createPart(geo, scope.skinsBody[0]);\n      mesh.scale.set(scope.scale, scope.scale, scope.scale);\n      scope.root.add(mesh);\n      scope.meshBody = mesh;\n      scope.meshBody.clipOffset = 0;\n      scope.activeAnimationClipName = mesh.geometry.animations[0].name;\n      scope.mixer = new AnimationMixer(mesh);\n      checkLoadingComplete();\n    }); // WEAPONS\n\n    var generateCallback = function (index, name) {\n      return function (geo) {\n        var mesh = createPart(geo, scope.skinsWeapon[index]);\n        mesh.scale.set(scope.scale, scope.scale, scope.scale);\n        mesh.visible = false;\n        mesh.name = name;\n        scope.root.add(mesh);\n        scope.weapons[index] = mesh;\n        scope.meshWeapon = mesh;\n        checkLoadingComplete();\n      };\n    };\n\n    for (let i = 0; i < config.weapons.length; i++) {\n      loader.load(config.baseUrl + config.weapons[i][0], generateCallback(i, config.weapons[i][0]));\n    }\n  };\n\n  this.setPlaybackRate = function (rate) {\n    if (rate !== 0) {\n      this.mixer.timeScale = 1 / rate;\n    } else {\n      this.mixer.timeScale = 0;\n    }\n  };\n\n  this.setWireframe = function (wireframeEnabled) {\n    if (wireframeEnabled) {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialWireframe;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialWireframe;\n    } else {\n      if (this.meshBody) this.meshBody.material = this.meshBody.materialTexture;\n      if (this.meshWeapon) this.meshWeapon.material = this.meshWeapon.materialTexture;\n    }\n  };\n\n  this.setSkin = function (index) {\n    if (this.meshBody && this.meshBody.material.wireframe === false) {\n      this.meshBody.material.map = this.skinsBody[index];\n    }\n  };\n\n  this.setWeapon = function (index) {\n    for (let i = 0; i < this.weapons.length; i++) this.weapons[i].visible = false;\n\n    var activeWeapon = this.weapons[index];\n\n    if (activeWeapon) {\n      activeWeapon.visible = true;\n      this.meshWeapon = activeWeapon;\n      scope.syncWeaponAnimation();\n    }\n  };\n\n  this.setAnimation = function (clipName) {\n    if (this.meshBody) {\n      if (this.meshBody.activeAction) {\n        this.meshBody.activeAction.stop();\n        this.meshBody.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshBody);\n\n      if (action) {\n        this.meshBody.activeAction = action.play();\n      }\n    }\n\n    scope.activeClipName = clipName;\n    scope.syncWeaponAnimation();\n  };\n\n  this.syncWeaponAnimation = function () {\n    var clipName = scope.activeClipName;\n\n    if (scope.meshWeapon) {\n      if (this.meshWeapon.activeAction) {\n        this.meshWeapon.activeAction.stop();\n        this.meshWeapon.activeAction = null;\n      }\n\n      var action = this.mixer.clipAction(clipName, this.meshWeapon);\n\n      if (action) {\n        this.meshWeapon.activeAction = action.syncWith(this.meshBody.activeAction).play();\n      }\n    }\n  };\n\n  this.update = function (delta) {\n    if (this.mixer) this.mixer.update(delta);\n  };\n\n  function loadTextures(baseUrl, textureUrls) {\n    var textureLoader = new TextureLoader();\n    var textures = [];\n\n    for (let i = 0; i < textureUrls.length; i++) {\n      textures[i] = textureLoader.load(baseUrl + textureUrls[i], checkLoadingComplete);\n      textures[i].mapping = UVMapping;\n      textures[i].name = textureUrls[i];\n      textures[i].encoding = sRGBEncoding;\n    }\n\n    return textures;\n  }\n\n  function createPart(geometry, skinMap) {\n    var materialWireframe = new MeshLambertMaterial({\n      color: 0xffaa00,\n      wireframe: true,\n      morphTargets: true,\n      morphNormals: true\n    });\n    var materialTexture = new MeshLambertMaterial({\n      color: 0xffffff,\n      wireframe: false,\n      map: skinMap,\n      morphTargets: true,\n      morphNormals: true\n    }); //\n\n    var mesh = new Mesh(geometry, materialTexture);\n    mesh.rotation.y = -Math.PI / 2;\n    mesh.castShadow = true;\n    mesh.receiveShadow = true; //\n\n    mesh.materialTexture = materialTexture;\n    mesh.materialWireframe = materialWireframe;\n    return mesh;\n  }\n\n  function checkLoadingComplete() {\n    scope.loadCounter -= 1;\n    if (scope.loadCounter === 0) scope.onLoadComplete();\n  }\n};\n\nexport { MD2Character };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}