{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor() {\n    let parameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get factor() {\n    return this._factor.value;\n  }\n  set factor(v) {\n    this._factor.value = v;\n  }\n}\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    speed = 1,\n    ...props\n  } = _ref;\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshWobbleMaterial };","map":{"version":3,"names":["_extends","React","MeshStandardMaterial","useFrame","WobbleMaterialImpl","constructor","parameters","arguments","length","undefined","setValues","_time","value","_factor","onBeforeCompile","shader","uniforms","time","factor","vertexShader","replace","v","MeshWobbleMaterial","forwardRef","_ref","ref","speed","props","material","useState","state","clock","getElapsedTime","createElement","object","attach"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/@react-three/drei/core/MeshWobbleMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get factor() {\n    return this._factor.value;\n  }\n\n  set factor(v) {\n    this._factor.value = v;\n  }\n\n}\n\nconst MeshWobbleMaterial = /*#__PURE__*/React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshWobbleMaterial };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,OAAO;AAC5C,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,MAAMC,kBAAkB,SAASF,oBAAoB,CAAC;EACpDG,WAAWA,CAAA,EAAkB;IAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzB,KAAK,CAACD,UAAU,CAAC;IACjB,IAAI,CAACI,SAAS,CAACJ,UAAU,CAAC;IAC1B,IAAI,CAACK,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;IACD,IAAI,CAACC,OAAO,GAAG;MACbD,KAAK,EAAE;IACT,CAAC;EACH;EAEAE,eAAeA,CAACC,MAAM,EAAE;IACtBA,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAI,CAACN,KAAK;IACjCI,MAAM,CAACC,QAAQ,CAACE,MAAM,GAAG,IAAI,CAACL,OAAO;IACrCE,MAAM,CAACI,YAAY,GAAI;AAC3B;AACA;AACA,QAAQJ,MAAM,CAACI,YAAa;AAC5B,KAAK;IACDJ,MAAM,CAACI,YAAY,GAAGJ,MAAM,CAACI,YAAY,CAACC,OAAO,CAAC,yBAAyB,EAAG;AAClF;AACA;AACA;AACA;AACA,+BAA+B,CAAC;EAC9B;EAEA,IAAIH,IAAIA,CAAA,EAAG;IACT,OAAO,IAAI,CAACN,KAAK,CAACC,KAAK;EACzB;EAEA,IAAIK,IAAIA,CAACI,CAAC,EAAE;IACV,IAAI,CAACV,KAAK,CAACC,KAAK,GAAGS,CAAC;EACtB;EAEA,IAAIH,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACL,OAAO,CAACD,KAAK;EAC3B;EAEA,IAAIM,MAAMA,CAACG,CAAC,EAAE;IACZ,IAAI,CAACR,OAAO,CAACD,KAAK,GAAGS,CAAC;EACxB;AAEF;AAEA,MAAMC,kBAAkB,GAAG,aAAarB,KAAK,CAACsB,UAAU,CAAC,CAAAC,IAAA,EAGtDC,GAAG,KAAK;EAAA,IAH+C;IACxDC,KAAK,GAAG,CAAC;IACT,GAAGC;EACL,CAAC,GAAAH,IAAA;EACC,MAAM,CAACI,QAAQ,CAAC,GAAG3B,KAAK,CAAC4B,QAAQ,CAAC,MAAM,IAAIzB,kBAAkB,EAAE,CAAC;EACjED,QAAQ,CAAC2B,KAAK,IAAIF,QAAQ,KAAKA,QAAQ,CAACX,IAAI,GAAGa,KAAK,CAACC,KAAK,CAACC,cAAc,EAAE,GAAGN,KAAK,CAAC,CAAC;EACrF,OAAO,aAAazB,KAAK,CAACgC,aAAa,CAAC,WAAW,EAAEjC,QAAQ,CAAC;IAC5DkC,MAAM,EAAEN,QAAQ;IAChBH,GAAG,EAAEA,GAAG;IACRU,MAAM,EAAE;EACV,CAAC,EAAER,KAAK,CAAC,CAAC;AACZ,CAAC,CAAC;AAEF,SAASL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}