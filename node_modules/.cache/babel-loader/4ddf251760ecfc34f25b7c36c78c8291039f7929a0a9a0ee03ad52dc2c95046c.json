{"ast":null,"code":"import NodeMaterial from './NodeMaterial.js';\nimport { PointsMaterial } from 'three';\nconst defaultValues = new PointsMaterial();\nclass PointsNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.transparent = true;\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.sizeNode = null;\n    this.positionNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.sizeNode = source.sizeNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n}\nPointsNodeMaterial.prototype.isPointsNodeMaterial = true;\nexport default PointsNodeMaterial;","map":{"version":3,"names":["NodeMaterial","PointsMaterial","defaultValues","PointsNodeMaterial","constructor","parameters","transparent","colorNode","opacityNode","alphaTestNode","lightNode","sizeNode","positionNode","setDefaultValues","setValues","copy","source","prototype","isPointsNodeMaterial"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/nodes/materials/PointsNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport { PointsMaterial } from 'three';\n\nconst defaultValues = new PointsMaterial();\n\nclass PointsNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.transparent = true;\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.sizeNode = null;\n    this.positionNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.sizeNode = source.sizeNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n\n}\n\nPointsNodeMaterial.prototype.isPointsNodeMaterial = true;\n\nexport default PointsNodeMaterial;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,SAASC,cAAc,QAAQ,OAAO;AAEtC,MAAMC,aAAa,GAAG,IAAID,cAAc,EAAE;AAE1C,MAAME,kBAAkB,SAASH,YAAY,CAAC;EAC5CI,WAAWA,CAACC,UAAU,EAAE;IACtB,KAAK,EAAE;IACP,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,gBAAgB,CAACX,aAAa,CAAC;IACpC,IAAI,CAACY,SAAS,CAACT,UAAU,CAAC;EAC5B;EAEAU,IAAIA,CAACC,MAAM,EAAE;IACX,IAAI,CAACT,SAAS,GAAGS,MAAM,CAACT,SAAS;IACjC,IAAI,CAACC,WAAW,GAAGQ,MAAM,CAACR,WAAW;IACrC,IAAI,CAACC,aAAa,GAAGO,MAAM,CAACP,aAAa;IACzC,IAAI,CAACC,SAAS,GAAGM,MAAM,CAACN,SAAS;IACjC,IAAI,CAACC,QAAQ,GAAGK,MAAM,CAACL,QAAQ;IAC/B,IAAI,CAACC,YAAY,GAAGI,MAAM,CAACJ,YAAY;IACvC,OAAO,KAAK,CAACG,IAAI,CAACC,MAAM,CAAC;EAC3B;AAEF;AAEAb,kBAAkB,CAACc,SAAS,CAACC,oBAAoB,GAAG,IAAI;AAExD,eAAef,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}