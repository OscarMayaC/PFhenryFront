{"ast":null,"code":"import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-b1cc53c2.esm.js';\nimport './maths-0ab39ae9.esm.js';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n    return undefined;\n  },\n  enabled() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return value;\n  },\n  window() {\n    let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SUPPORT.isBrowser ? window : undefined;\n    return value;\n  },\n  eventOptions() {\n    let {\n      passive = true,\n      capture = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      passive,\n      capture\n    };\n  },\n  transform(value) {\n    return value;\n  }\n};\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let resolvers = arguments.length > 1 ? arguments[1] : undefined;\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\nfunction parse(newConfig, gestureKey) {\n  let _config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const _ref = newConfig,\n    {\n      target,\n      eventOptions,\n      window,\n      enabled,\n      transform\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n  return _config;\n}\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear();\n  }\n}\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n  add(key, callback) {\n    let ms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 140;\n    this.remove(key);\n    for (var _len = arguments.length, args = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      args[_key - 3] = arguments[_key];\n    }\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n    _defineProperty(this, \"gestureEventStores\", {});\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n    _defineProperty(this, \"handlers\", {});\n    _defineProperty(this, \"config\", {});\n    _defineProperty(this, \"pointerIds\", new Set());\n    _defineProperty(this, \"touchIds\", new Set());\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n    resolveGestures(this, handlers);\n  }\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n  bind() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n    if (!target) return props;\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n}\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\nconst bindToProps = (props, eventOptions, withPassiveOption) => function (device, action, handler) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  let isNative = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n  var _options$capture, _options$passive;\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n  return [handlers, native, actions];\n}\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n    return;\n  }\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\nexport { Controller, parseMergedHandlers };","map":{"version":3,"names":["S","SUPPORT","C","ConfigResolverMap","_","_objectSpread2","a","_defineProperty","t","toDomEventType","i","isTouch","b","touchIds","E","EngineMap","c","chain","p","parseProp","d","toHandlerProp","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","key","length","indexOf","_objectWithoutProperties","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","sharedConfigResolver","value","current","undefined","enabled","arguments","window","isBrowser","eventOptions","passive","capture","transform","_excluded","resolveWith","config","resolvers","result","resolver","entries","process","env","NODE_ENV","r","Number","isNaN","parse","newConfig","gestureKey","_config","_ref","rest","shared","get","includes","Error","console","warn","EventStore","constructor","ctrl","Set","_ctrl","_gestureKey","add","element","device","action","handler","options","listeners","_listeners","type","_options","addEventListener","remove","removeEventListener","delete","clean","forEach","clear","TimeoutStore","Map","callback","ms","_len","args","Array","_key","_timeouts","set","setTimeout","timeout","clearTimeout","Controller","handlers","shiftKey","metaKey","ctrlKey","altKey","resolveGestures","setEventIds","event","pointerIds","pointerId","applyHandlers","nativeHandlers","applyConfig","_targetEventStore","gestures","gestureEventStores","gestureTimeoutStores","effect","bind","_len2","_key2","sharedConfig","props","gestureConfig","bindFunction","bindToProps","Engine","nativeBindFunction","eventKey","state","handlerProp","setupGesture","internalHandlers","drag","wheel","scroll","move","pinch","hover","withPassiveOption","isNative","_options$capture","_options$passive","push","RE_NOT_NATIVE","sortHandlers","_handlers","native","actions","test","RegExp","lastMatch","registerGesture","handlerKey","has","startKey","endKey","fn","memo","first","last","parseMergedHandlers","mergedHandlers","mergedConfig"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/@use-gesture/core/dist/use-gesture-core.esm.js"],"sourcesContent":["import { S as SUPPORT, C as ConfigResolverMap, _ as _objectSpread2, a as _defineProperty, t as toDomEventType, i as isTouch, b as touchIds, E as EngineMap, c as chain, p as parseProp, d as toHandlerProp } from './actions-b1cc53c2.esm.js';\nimport './maths-0ab39ae9.esm.js';\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nconst sharedConfigResolver = {\n  target(value) {\n    if (value) {\n      return () => 'current' in value ? value.current : value;\n    }\n    return undefined;\n  },\n  enabled(value = true) {\n    return value;\n  },\n  window(value = SUPPORT.isBrowser ? window : undefined) {\n    return value;\n  },\n  eventOptions({\n    passive = true,\n    capture = false\n  } = {}) {\n    return {\n      passive,\n      capture\n    };\n  },\n  transform(value) {\n    return value;\n  }\n};\n\nconst _excluded = [\"target\", \"eventOptions\", \"window\", \"enabled\", \"transform\"];\nfunction resolveWith(config = {}, resolvers) {\n  const result = {};\n  for (const [key, resolver] of Object.entries(resolvers)) {\n    switch (typeof resolver) {\n      case 'function':\n        if (process.env.NODE_ENV === 'development') {\n          const r = resolver.call(result, config[key], key, config);\n          if (!Number.isNaN(r)) result[key] = r;\n        } else {\n          result[key] = resolver.call(result, config[key], key, config);\n        }\n        break;\n      case 'object':\n        result[key] = resolveWith(config[key], resolver);\n        break;\n      case 'boolean':\n        if (resolver) result[key] = config[key];\n        break;\n    }\n  }\n  return result;\n}\nfunction parse(newConfig, gestureKey, _config = {}) {\n  const _ref = newConfig,\n    {\n      target,\n      eventOptions,\n      window,\n      enabled,\n      transform\n    } = _ref,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  _config.shared = resolveWith({\n    target,\n    eventOptions,\n    window,\n    enabled,\n    transform\n  }, sharedConfigResolver);\n  if (gestureKey) {\n    const resolver = ConfigResolverMap.get(gestureKey);\n    _config[gestureKey] = resolveWith(_objectSpread2({\n      shared: _config.shared\n    }, rest), resolver);\n  } else {\n    for (const key in rest) {\n      const resolver = ConfigResolverMap.get(key);\n      if (resolver) {\n        _config[key] = resolveWith(_objectSpread2({\n          shared: _config.shared\n        }, rest[key]), resolver);\n      } else if (process.env.NODE_ENV === 'development') {\n        if (!['drag', 'pinch', 'scroll', 'wheel', 'move', 'hover'].includes(key)) {\n          if (key === 'domTarget') {\n            throw Error(`[@use-gesture]: \\`domTarget\\` option has been renamed to \\`target\\`.`);\n          }\n          console.warn(`[@use-gesture]: Unknown config key \\`${key}\\` was used. Please read the documentation for further information.`);\n        }\n      }\n    }\n  }\n  return _config;\n}\n\nclass EventStore {\n  constructor(ctrl, gestureKey) {\n    _defineProperty(this, \"_listeners\", new Set());\n    this._ctrl = ctrl;\n    this._gestureKey = gestureKey;\n  }\n  add(element, device, action, handler, options) {\n    const listeners = this._listeners;\n    const type = toDomEventType(device, action);\n    const _options = this._gestureKey ? this._ctrl.config[this._gestureKey].eventOptions : {};\n    const eventOptions = _objectSpread2(_objectSpread2({}, _options), options);\n    element.addEventListener(type, handler, eventOptions);\n    const remove = () => {\n      element.removeEventListener(type, handler, eventOptions);\n      listeners.delete(remove);\n    };\n    listeners.add(remove);\n    return remove;\n  }\n  clean() {\n    this._listeners.forEach(remove => remove());\n    this._listeners.clear();\n  }\n}\n\nclass TimeoutStore {\n  constructor() {\n    _defineProperty(this, \"_timeouts\", new Map());\n  }\n  add(key, callback, ms = 140, ...args) {\n    this.remove(key);\n    this._timeouts.set(key, window.setTimeout(callback, ms, ...args));\n  }\n  remove(key) {\n    const timeout = this._timeouts.get(key);\n    if (timeout) window.clearTimeout(timeout);\n  }\n  clean() {\n    this._timeouts.forEach(timeout => void window.clearTimeout(timeout));\n    this._timeouts.clear();\n  }\n}\n\nclass Controller {\n  constructor(handlers) {\n    _defineProperty(this, \"gestures\", new Set());\n    _defineProperty(this, \"_targetEventStore\", new EventStore(this));\n    _defineProperty(this, \"gestureEventStores\", {});\n    _defineProperty(this, \"gestureTimeoutStores\", {});\n    _defineProperty(this, \"handlers\", {});\n    _defineProperty(this, \"config\", {});\n    _defineProperty(this, \"pointerIds\", new Set());\n    _defineProperty(this, \"touchIds\", new Set());\n    _defineProperty(this, \"state\", {\n      shared: {\n        shiftKey: false,\n        metaKey: false,\n        ctrlKey: false,\n        altKey: false\n      }\n    });\n    resolveGestures(this, handlers);\n  }\n  setEventIds(event) {\n    if (isTouch(event)) {\n      this.touchIds = new Set(touchIds(event));\n      return this.touchIds;\n    } else if ('pointerId' in event) {\n      if (event.type === 'pointerup' || event.type === 'pointercancel') this.pointerIds.delete(event.pointerId);else if (event.type === 'pointerdown') this.pointerIds.add(event.pointerId);\n      return this.pointerIds;\n    }\n  }\n  applyHandlers(handlers, nativeHandlers) {\n    this.handlers = handlers;\n    this.nativeHandlers = nativeHandlers;\n  }\n  applyConfig(config, gestureKey) {\n    this.config = parse(config, gestureKey, this.config);\n  }\n  clean() {\n    this._targetEventStore.clean();\n    for (const key of this.gestures) {\n      this.gestureEventStores[key].clean();\n      this.gestureTimeoutStores[key].clean();\n    }\n  }\n  effect() {\n    if (this.config.shared.target) this.bind();\n    return () => this._targetEventStore.clean();\n  }\n  bind(...args) {\n    const sharedConfig = this.config.shared;\n    const props = {};\n    let target;\n    if (sharedConfig.target) {\n      target = sharedConfig.target();\n      if (!target) return;\n    }\n    if (sharedConfig.enabled) {\n      for (const gestureKey of this.gestures) {\n        const gestureConfig = this.config[gestureKey];\n        const bindFunction = bindToProps(props, gestureConfig.eventOptions, !!target);\n        if (gestureConfig.enabled) {\n          const Engine = EngineMap.get(gestureKey);\n          new Engine(this, args, gestureKey).bind(bindFunction);\n        }\n      }\n      const nativeBindFunction = bindToProps(props, sharedConfig.eventOptions, !!target);\n      for (const eventKey in this.nativeHandlers) {\n        nativeBindFunction(eventKey, '', event => this.nativeHandlers[eventKey](_objectSpread2(_objectSpread2({}, this.state.shared), {}, {\n          event,\n          args\n        })), undefined, true);\n      }\n    }\n    for (const handlerProp in props) {\n      props[handlerProp] = chain(...props[handlerProp]);\n    }\n    if (!target) return props;\n    for (const handlerProp in props) {\n      const {\n        device,\n        capture,\n        passive\n      } = parseProp(handlerProp);\n      this._targetEventStore.add(target, device, '', props[handlerProp], {\n        capture,\n        passive\n      });\n    }\n  }\n}\nfunction setupGesture(ctrl, gestureKey) {\n  ctrl.gestures.add(gestureKey);\n  ctrl.gestureEventStores[gestureKey] = new EventStore(ctrl, gestureKey);\n  ctrl.gestureTimeoutStores[gestureKey] = new TimeoutStore();\n}\nfunction resolveGestures(ctrl, internalHandlers) {\n  if (internalHandlers.drag) setupGesture(ctrl, 'drag');\n  if (internalHandlers.wheel) setupGesture(ctrl, 'wheel');\n  if (internalHandlers.scroll) setupGesture(ctrl, 'scroll');\n  if (internalHandlers.move) setupGesture(ctrl, 'move');\n  if (internalHandlers.pinch) setupGesture(ctrl, 'pinch');\n  if (internalHandlers.hover) setupGesture(ctrl, 'hover');\n}\nconst bindToProps = (props, eventOptions, withPassiveOption) => (device, action, handler, options = {}, isNative = false) => {\n  var _options$capture, _options$passive;\n  const capture = (_options$capture = options.capture) !== null && _options$capture !== void 0 ? _options$capture : eventOptions.capture;\n  const passive = (_options$passive = options.passive) !== null && _options$passive !== void 0 ? _options$passive : eventOptions.passive;\n  let handlerProp = isNative ? device : toHandlerProp(device, action, capture);\n  if (withPassiveOption && passive) handlerProp += 'Passive';\n  props[handlerProp] = props[handlerProp] || [];\n  props[handlerProp].push(handler);\n};\n\nconst RE_NOT_NATIVE = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;\nfunction sortHandlers(_handlers) {\n  const native = {};\n  const handlers = {};\n  const actions = new Set();\n  for (let key in _handlers) {\n    if (RE_NOT_NATIVE.test(key)) {\n      actions.add(RegExp.lastMatch);\n      handlers[key] = _handlers[key];\n    } else {\n      native[key] = _handlers[key];\n    }\n  }\n  return [handlers, native, actions];\n}\nfunction registerGesture(actions, handlers, handlerKey, key, internalHandlers, config) {\n  if (!actions.has(handlerKey)) return;\n  if (!EngineMap.has(key)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.warn(`[@use-gesture]: You've created a custom handler that that uses the \\`${key}\\` gesture but isn't properly configured.\\n\\nPlease add \\`${key}Action\\` when creating your handler.`);\n    }\n    return;\n  }\n  const startKey = handlerKey + 'Start';\n  const endKey = handlerKey + 'End';\n  const fn = state => {\n    let memo = undefined;\n    if (state.first && startKey in handlers) handlers[startKey](state);\n    if (handlerKey in handlers) memo = handlers[handlerKey](state);\n    if (state.last && endKey in handlers) handlers[endKey](state);\n    return memo;\n  };\n  internalHandlers[key] = fn;\n  config[key] = config[key] || {};\n}\nfunction parseMergedHandlers(mergedHandlers, mergedConfig) {\n  const [handlers, nativeHandlers, actions] = sortHandlers(mergedHandlers);\n  const internalHandlers = {};\n  registerGesture(actions, handlers, 'onDrag', 'drag', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onWheel', 'wheel', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onScroll', 'scroll', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onPinch', 'pinch', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onMove', 'move', internalHandlers, mergedConfig);\n  registerGesture(actions, handlers, 'onHover', 'hover', internalHandlers, mergedConfig);\n  return {\n    handlers: internalHandlers,\n    config: mergedConfig,\n    nativeHandlers\n  };\n}\n\nexport { Controller, parseMergedHandlers };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}