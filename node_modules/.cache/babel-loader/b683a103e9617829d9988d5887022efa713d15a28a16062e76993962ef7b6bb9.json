{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n    _defineProperty(this, \"object\", void 0);\n    _defineProperty(this, \"domElement\", void 0);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"target\", new Vector3());\n    _defineProperty(this, \"minDistance\", 0);\n    _defineProperty(this, \"maxDistance\", Infinity);\n    _defineProperty(this, \"minZoom\", 0);\n    _defineProperty(this, \"maxZoom\", Infinity);\n    _defineProperty(this, \"minPolarAngle\", 0);\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n    _defineProperty(this, \"enableDamping\", false);\n    _defineProperty(this, \"dampingFactor\", 0.05);\n    _defineProperty(this, \"enableZoom\", true);\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n    _defineProperty(this, \"enableRotate\", true);\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n    _defineProperty(this, \"enablePan\", true);\n    _defineProperty(this, \"panSpeed\", 1.0);\n    _defineProperty(this, \"screenSpacePanning\", true);\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n    _defineProperty(this, \"autoRotate\", false);\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n    _defineProperty(this, \"reverseOrbit\", false);\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n    _defineProperty(this, \"target0\", void 0);\n    _defineProperty(this, \"position0\", void 0);\n    _defineProperty(this, \"zoom0\", void 0);\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n    _defineProperty(this, \"getPolarAngle\", void 0);\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n    _defineProperty(this, \"setPolarAngle\", void 0);\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n    _defineProperty(this, \"getDistance\", void 0);\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n    _defineProperty(this, \"saveState\", void 0);\n    _defineProperty(this, \"reset\", void 0);\n    _defineProperty(this, \"update\", void 0);\n    _defineProperty(this, \"connect\", void 0);\n    _defineProperty(this, \"dispose\", void 0);\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }; //\n    // internals\n    //\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      removePointer(event);\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10, _scope$domElement11;\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.releasePointerCapture(event.pointerId);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","moduloWrapAround","offset","capacity","OrbitControls","constructor","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","value","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","_scope$domElement7","_scope$domElement8","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","_scope$domElement9","_scope$domElement10","_scope$domElement11","releasePointerCapture","pointerId","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","i","splice","undefined","pointer","MapControls"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"reverseOrbit\", false);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"setPolarAngle\", void 0);\n\n    _defineProperty(this, \"setAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"getDistance\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.setPolarAngle = value => {\n      // use modulo wrapping to safeguard value\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi; // convert to the equivalent shortest angle\n\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n\n    this.setAzimuthalAngle = value => {\n      // use modulo wrapping to safeguard value\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta; // convert to the equivalent shortest angle\n\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement; // disables touch scroll\n      // touch-action needs to be defined for pointer events to work on mobile\n      // https://stackoverflow.com/a/48254578\n\n      scope.domElement.style.touchAction = 'none';\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('pointercancel', onPointerCancel);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('pointercancel', onPointerCancel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n\n    function rotateUp(angle) {\n      if (scope.reverseOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        var _scope$domElement7, _scope$domElement8;\n\n        (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.addEventListener('pointerup', onPointerUp);\n      }\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      removePointer(event);\n\n      if (pointers.length === 0) {\n        var _scope$domElement9, _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement9 = scope.domElement) === null || _scope$domElement9 === void 0 ? void 0 : _scope$domElement9.releasePointerCapture(event.pointerId);\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.removeEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      }\n\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}