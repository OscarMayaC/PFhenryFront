{"ast":null,"code":"import Node from './Node.js';\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n      return builder.format(nodeData.propertyName, type, output);\n    }\n    return super.build(builder, output);\n  }\n}\nexport default TempNode;","map":{"version":3,"names":["Node","TempNode","constructor","type","build","builder","output","getVectorType","getNodeType","nodeData","getDataFromNode","context","temp","dependenciesCount","snippet","undefined","nodeVar","getVarFromNode","propertyName","getPropertyName","addFlowCode","format"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/nodes/core/TempNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass TempNode extends Node {\n  constructor(type) {\n    super(type);\n  }\n\n  build(builder, output) {\n    const type = builder.getVectorType(this.getNodeType(builder, output));\n    const nodeData = builder.getDataFromNode(this);\n\n    if (builder.context.temp !== false && type !== 'void ' && output !== 'void' && nodeData.dependenciesCount > 1) {\n      if (nodeData.snippet === undefined) {\n        const snippet = super.build(builder, type);\n        const nodeVar = builder.getVarFromNode(this, type);\n        const propertyName = builder.getPropertyName(nodeVar);\n        builder.addFlowCode(`${propertyName} = ${snippet}`);\n        nodeData.snippet = snippet;\n        nodeData.propertyName = propertyName;\n      }\n\n      return builder.format(nodeData.propertyName, type, output);\n    }\n\n    return super.build(builder, output);\n  }\n\n}\n\nexport default TempNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAE5B,MAAMC,QAAQ,SAASD,IAAI,CAAC;EAC1BE,WAAWA,CAACC,IAAI,EAAE;IAChB,KAAK,CAACA,IAAI,CAAC;EACb;EAEAC,KAAKA,CAACC,OAAO,EAAEC,MAAM,EAAE;IACrB,MAAMH,IAAI,GAAGE,OAAO,CAACE,aAAa,CAAC,IAAI,CAACC,WAAW,CAACH,OAAO,EAAEC,MAAM,CAAC,CAAC;IACrE,MAAMG,QAAQ,GAAGJ,OAAO,CAACK,eAAe,CAAC,IAAI,CAAC;IAE9C,IAAIL,OAAO,CAACM,OAAO,CAACC,IAAI,KAAK,KAAK,IAAIT,IAAI,KAAK,OAAO,IAAIG,MAAM,KAAK,MAAM,IAAIG,QAAQ,CAACI,iBAAiB,GAAG,CAAC,EAAE;MAC7G,IAAIJ,QAAQ,CAACK,OAAO,KAAKC,SAAS,EAAE;QAClC,MAAMD,OAAO,GAAG,KAAK,CAACV,KAAK,CAACC,OAAO,EAAEF,IAAI,CAAC;QAC1C,MAAMa,OAAO,GAAGX,OAAO,CAACY,cAAc,CAAC,IAAI,EAAEd,IAAI,CAAC;QAClD,MAAMe,YAAY,GAAGb,OAAO,CAACc,eAAe,CAACH,OAAO,CAAC;QACrDX,OAAO,CAACe,WAAW,CAAE,GAAEF,YAAa,MAAKJ,OAAQ,EAAC,CAAC;QACnDL,QAAQ,CAACK,OAAO,GAAGA,OAAO;QAC1BL,QAAQ,CAACS,YAAY,GAAGA,YAAY;MACtC;MAEA,OAAOb,OAAO,CAACgB,MAAM,CAACZ,QAAQ,CAACS,YAAY,EAAEf,IAAI,EAAEG,MAAM,CAAC;IAC5D;IAEA,OAAO,KAAK,CAACF,KAAK,CAACC,OAAO,EAAEC,MAAM,CAAC;EACrC;AAEF;AAEA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}