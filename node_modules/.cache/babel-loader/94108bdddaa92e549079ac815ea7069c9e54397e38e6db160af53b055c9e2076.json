{"ast":null,"code":"import { eachProp, is, toArray, getFluidValue, isAnimatedString, Globals, useIsomorphicLayoutEffect, each, easings, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, useConstant, onScroll, onResize, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator, easings, useIsomorphicLayoutEffect, useReducedMotion } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction callProp(value) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\nconst noopTransform = value => value;\nconst getDefaultProps = function (props) {\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noopTransform;\n  let keys = DEFAULT_PROPS;\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n  const defaults = {};\n  for (const key of keys) {\n    const value = transform(props[key], key);\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n  if (count) {\n    return forward;\n  }\n}\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\nfunction useChain(refs, timeSteps) {\n  let timeFrame = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1000;\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n  return config;\n}\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n}\nfunction scheduleProps(callId, _ref2) {\n  let {\n    key,\n    props,\n    defaultProps,\n    state,\n    actions\n  } = _ref2;\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n      delay = callProp(props.delay || 0, key);\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = function (value, finished) {\n  let cancelled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    value,\n    finished,\n    cancelled\n  };\n};\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAnimationSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n        return result;\n      })();\n    };\n    let result;\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n    try {\n      let animating;\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n}\nclass SkipAnimationSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n}\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor() {\n    super(...arguments);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n  get priority() {\n    return this._priority;\n  }\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n      this._onPriorityChange(priority);\n    }\n  }\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n  to() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return Globals.to(this, args);\n  }\n  interpolate() {\n    deprecateInterpolate();\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return Globals.to(this, args);\n  }\n  toJSON() {\n    return this.get();\n  }\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n  _attach() {}\n  _detach() {}\n  _onChange(value) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n}\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n      this.start(props);\n    }\n  }\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n  get isAnimating() {\n    return isAnimating(this);\n  }\n  get isPaused() {\n    return isPaused(this);\n  }\n  get isDelayed() {\n    return this._state.delayed;\n  }\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n      if (!finished) {\n        position = node.lastPosition;\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n        if (!is.und(config.duration)) {\n          let p = 1;\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) <= precision;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n              if (finished) {\n                break;\n              }\n            }\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n        node.lastVelocity = velocity;\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n      this._focus(value);\n      this._set(value);\n    });\n    return this;\n  }\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n        if (!config.decay) {\n          this._set(to, false);\n        }\n        this._stop();\n      });\n    }\n    return this;\n  }\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n  start(to, arg2) {\n    let queue;\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n    this._focus(this.get());\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n    from = is.obj(from) ? from[key] : from;\n    if (from == null) {\n      from = undefined;\n    }\n    const range = {\n      to,\n      from\n    };\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n    return range;\n  }\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n    const range = this._prepareNode(props);\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n            if (isAnimating(this)) {\n              this._resume();\n            }\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n      return result;\n    });\n  }\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n    if (hasToChanged) {\n      this._focus(to);\n    }\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n    let node = getAnimated(this);\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n        this._pendingCalls.add(resolve);\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n    if (reset) {\n      this._set(value);\n    }\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n  _focus(value) {\n    const anim = this.animation;\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n      anim.to = value;\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n    this.priority = priority;\n  }\n  _detach() {\n    const {\n      to\n    } = this.animation;\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n  _set(arg) {\n    let idle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const value = getFluidValue(arg);\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n    return getAnimated(this);\n  }\n  _onStart() {\n    const anim = this.animation;\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n      callProp(this.animation.onChange, value, this);\n    }\n    callProp(this.defaultProps.onChange, value, this);\n    super._onChange(value, idle);\n  }\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n}\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\nfunction createLoopUpdate(props) {\n  let loop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.loop;\n  let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : props.to;\n  let loopRet = callProp(loop);\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n  return update;\n}\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\nfunction sendEvent(target, type) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n  for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    args[_key4 - 2] = arguments[_key4];\n  }\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n    if (flush) {\n      this._flush = flush;\n    }\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n  get item() {\n    return this._item;\n  }\n  set item(item) {\n    this._item = item;\n  }\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n    return this;\n  }\n  start(props) {\n    let {\n      queue\n    } = this;\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n    return this;\n  }\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n    return this;\n  }\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n    return this;\n  }\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, _ref3 => {\n        let [onStart, result] = _ref3;\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n    if (changed && onChange.size) {\n      flush(onChange, _ref4 => {\n        let [onChange, result] = _ref4;\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n    if (idle) {\n      this._started = false;\n      flush(onRest, _ref5 => {\n        let [onRest, result] = _ref5;\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n    raf.onFrame(this._onFrame);\n  }\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n  if (loop) {\n    props.loop = false;\n  }\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n        props[key] = _ref6 => {\n          let {\n            finished,\n            cancelled\n          } = _ref6;\n          const result = queue.get(handler);\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n  const state = ctrl['_state'];\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n      }\n    }));\n  }\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n  return spring;\n}\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nconst _excluded$6 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n    immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\nconst SpringRef = () => {\n  const current = [];\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n  SpringRef.current = current;\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n      const update = updates[i];\n      if (update) {\n        replaceRef(ctrl, update.ref);\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\nconst initSpringRef = () => SpringRef();\nconst useSpringRef = () => useState(initSpringRef)[0];\nconst useSpringValue = (initial, props) => {\n  const springValue = useConstant(() => new SpringValue(initial, props));\n  useOnce(() => () => {\n    springValue.stop();\n  });\n  return springValue;\n};\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  useIsomorphicLayoutEffect(() => {\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\n      replaceRef(ctrl, passedRef);\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({\n            to: parent.springs\n          });\n        }\n        return;\n      }\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n  if (propsFn || arguments.length == 3) {\n    var _passedRef;\n    const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n    return result;\n  }\n  return result[0];\n}\nlet TransitionPhase;\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => {\n    each(transitions, t => {\n      ref == null ? void 0 : ref.add(t.ctrl);\n      t.ctrl.ref = ref;\n    });\n    return () => {\n      each(usedTransitions.current, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId);\n        }\n        detachRefs(t.ctrl, ref);\n        t.ctrl.stop(true);\n      });\n    };\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useIsomorphicLayoutEffect(() => each(expired, _ref7 => {\n    let {\n      ctrl,\n      item,\n      key\n    } = _ref7;\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n    delay += trail;\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n    const {\n      onResolve\n    } = payload;\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n          forceUpdate();\n        }\n      }\n    };\n    const springs = getSprings(t.ctrl, payload);\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, (_ref8, t) => {\n      let {\n        phase,\n        payload\n      } = _ref8;\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n        if ((ctrl.ref || ref) && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\nfunction getKeys(items, _ref9, prevTransitions) {\n  let {\n    key,\n    keys = key\n  } = _ref9;\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n      return nextKey++;\n    });\n  }\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\nconst _excluded$5 = [\"container\"];\nconst useScroll = function () {\n  let _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n      container\n    } = _ref,\n    springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n  const [scrollValues, api] = useSpring(() => _extends({\n    scrollX: 0,\n    scrollY: 0,\n    scrollXProgress: 0,\n    scrollYProgress: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(_ref10 => {\n      let {\n        x,\n        y\n      } = _ref10;\n      api.start({\n        scrollX: x.current,\n        scrollXProgress: x.progress,\n        scrollY: y.current,\n        scrollYProgress: y.progress\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(scrollValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return scrollValues;\n};\nconst _excluded$4 = [\"container\"];\nconst useResize = _ref => {\n  let {\n      container\n    } = _ref,\n    springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n  const [sizeValues, api] = useSpring(() => _extends({\n    width: 0,\n    height: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(_ref11 => {\n      let {\n        width,\n        height\n      } = _ref11;\n      api.start({\n        width,\n        height,\n        immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(sizeValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return sizeValues;\n};\nconst _excluded$3 = [\"to\", \"from\"],\n  _excluded2 = [\"root\", \"once\", \"amount\"];\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1\n};\nfunction useInView(props, args) {\n  const [isInView, setIsInView] = useState(false);\n  const ref = useRef();\n  const propsFn = is.fun(props) && props;\n  const springsProps = propsFn ? propsFn() : {};\n  const {\n      to = {},\n      from = {}\n    } = springsProps,\n    restSpringProps = _objectWithoutPropertiesLoose(springsProps, _excluded$3);\n  const intersectionArguments = propsFn ? args : props;\n  const [springs, api] = useSpring(() => _extends({\n    from\n  }, restSpringProps), []);\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current;\n    const _ref = intersectionArguments != null ? intersectionArguments : {},\n      {\n        root,\n        once,\n        amount = 'any'\n      } = _ref,\n      restArgs = _objectWithoutPropertiesLoose(_ref, _excluded2);\n    if (!element || once && isInView || typeof IntersectionObserver === 'undefined') return;\n    const activeIntersections = new WeakMap();\n    const onEnter = () => {\n      if (to) {\n        api.start(to);\n      }\n      setIsInView(true);\n      const cleanup = () => {\n        if (from) {\n          api.start(from);\n        }\n        setIsInView(false);\n      };\n      return once ? undefined : cleanup;\n    };\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target);\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return;\n        }\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter();\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onLeave) {\n          onLeave();\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n    const observer = new IntersectionObserver(handleIntersection, _extends({\n      root: root && root.current || undefined,\n      threshold: typeof amount === 'number' || Array.isArray(amount) ? amount : defaultThresholdOptions[amount]\n    }, restArgs));\n    observer.observe(element);\n    return () => observer.unobserve(element);\n  }, [intersectionArguments]);\n  if (propsFn) {\n    return [ref, springs];\n  }\n  return [ref, isInView];\n}\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  return children(useSpring(props));\n}\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n      items,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n      items,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return useTransition(items, props)(children);\n}\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n    const value = this._get();\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n  advance(_dt) {\n    const value = this._get();\n    const oldValue = this.get();\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n      this._onChange(value, this.idle);\n    }\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n    this._start();\n  }\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n    this._active.clear();\n    becomeIdle(this);\n  }\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n}\nfunction isIdle(source) {\n  return source.idle !== false;\n}\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\nconst to = function (source) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return new Interpolation(source, args);\n};\nconst interpolate = function (source) {\n  for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n    args[_key6 - 1] = arguments[_key6];\n  }\n  return deprecateInterpolate(), new Interpolation(source, args);\n};\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useInView, useResize, useScroll, useSpring, useSpringRef, useSpringValue, useSprings, useTrail, useTransition };","map":{"version":3,"names":["eachProp","is","toArray","getFluidValue","isAnimatedString","Globals","useIsomorphicLayoutEffect","each","easings","raf","flush","FluidValue","deprecateInterpolate","callFluidObservers","frameLoop","hasFluidValue","flushCalls","isEqual","getFluidObservers","addFluidObserver","removeFluidObserver","noop","useMemoOne","deprecateDirectCall","useForceUpdate","usePrev","useOnce","useConstant","onScroll","onResize","createInterpolator","createStringInterpolator","useReducedMotion","React","useContext","useMemo","useRef","useState","getAnimated","AnimatedValue","getPayload","AnimatedString","getAnimatedType","setAnimated","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","callProp","value","_len","args","Array","_key","fun","matchProp","includes","resolveProp","prop","obj","getDefaultProp","props","default","undefined","noopTransform","getDefaultProps","transform","keys","DEFAULT_PROPS","defaults","und","RESERVED_PROPS","config","from","to","ref","loop","reset","pause","cancel","reverse","immediate","delay","onProps","onStart","onChange","onPause","onResume","onRest","onResolve","items","trail","sort","expires","initial","enter","update","leave","children","onDestroyed","callId","parentId","getForwardProps","forward","count","inferTo","out","val","computeGoal","arr","map","range","output","hasProps","_","isAsyncTo","detachRefs","ctrl","_ctrl$ref","delete","replaceRef","_ctrl$ref2","add","useChain","refs","timeSteps","timeFrame","prevDelay","controllers","current","isNaN","queue","memoizedDelayProp","start","p","Promise","resolve","queues","q","then","push","all","tension","friction","gentle","wobbly","stiff","slow","molasses","mass","damping","easing","linear","clamp","AnimationConfig","constructor","frequency","velocity","restVelocity","precision","progress","duration","bounce","decay","round","mergeConfig","newConfig","defaultConfig","sanitizeConfig","Math","pow","PI","isTensionConfig","emptyArray","Animation","changed","values","toValues","fromValues","scheduleProps","_ref2","defaultProps","state","actions","reject","_props$cancel","timeout","paused","resumeQueue","resume","timeouts","time","now","skipAnimation","delayed","setTimeout","pauseQueue","cancelId","err","getCombinedResult","results","some","result","cancelled","getCancelledResult","get","every","getNoopResult","getFinishedResult","finished","runAsync","asyncTo","prevTo","promise","prevPromise","asyncId","preventBail","bail","bailPromise","bailIfEnded","bailSignal","bailResult","animate","arg1","arg2","BailSignal","skipAnimationSignal","SkipAnimationSignal","stopAsync","animating","stop","batchedUpdates","item","t","clear","Error","isFrameValue","FrameValue","nextId$1","id","_priority","priority","_onPriorityChange","node","getValue","_len2","_key2","interpolate","_len3","_key3","toJSON","observerAdded","_attach","observerRemoved","_detach","_onChange","idle","type","parent","$P","Symbol","for","HAS_ANIMATED","IS_ANIMATING","IS_PAUSED","hasAnimated","isAnimating","isPaused","setActiveBit","active","setPausedBit","SpringValue","animation","_state","Set","_pendingCalls","_lastCallId","_lastToId","_memoizedDuration","goal","lastVelocity","isDelayed","advance","dt","anim","payload","forEach","done","lastPosition","position","elapsed","elapsedTime","v0","min","abs","durationProgress","e","exp","bounceFactor","canBounce","isGrowing","isMoving","isBouncing","step","numSteps","ceil","n","springForce","dampingForce","acceleration","Number","console","warn","setValue","currVal","finalVal","_stop","set","_focus","_set","_update","finish","_onStart","up","eventObserved","event","_start","_prepareNode","_ref","isLoop","test","mergeActiveFn","sendEvent","isFrozen","checkFinished","_resume","_merge","nextProps","createLoopUpdate","hasToProp","hasFromProp","prevFrom","hasFromChanged","hasToChanged","hasAsyncTo","isAnimatable","num","nodeType","name","goalType","started","hasValueChanged","ACTIVE_EVENTS","arg","oldNode","create","loopRet","overrides","createUpdate","findDefined","size","declareUpdate","_target$animation$typ","_target$animation","_target$defaultProps$","_target$defaultProps","_len4","_key4","BATCHED_EVENTS","nextId","Controller","springs","_flush","_initialProps","_lastAsyncId","_active","_changed","_started","_item","_events","Map","_onFrame","spring","prepareKeys","flushUpdateQueue","iterator","_ref3","_ref4","_ref5","onFrame","flushUpdate","handler","_ref6","promises","getSprings","prepareSprings","createSpring","setSprings","observer","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_excluded$6","SpringContext","inherited","ctx","Provider","createElement","makeContext","Consumer","init","createContext","_context","SpringRef","_getProps","splice","index","useSprings","deps","propsFn","layoutId","forceUpdate","ctrls","updates","canFlushSync","prevLength","slice","declareUpdates","startIndex","endIndex","context","prevContext","hasContext","cb","x","useSpring","isFn","initSpringRef","useSpringRef","useSpringValue","springValue","useTrail","propsArg","passedRef","_passedRef","TransitionPhase","useTransition","data","exitBeforeEnter","propsRef","propsConfig","transitions","usedTransitions","prevTransitions","expired","clearTimeout","expirationId","getKeys","_ref7","reused","phase","MOUNT","keyIndex","prevIndex","a","b","changes","exitingTransitions","forceChange","prevPhase","propsDelay","ENTER","isLeave","LEAVE","UPDATE","_p","find","expiry","expiryMs","ind","findIndex","_ref8","renderTransitions","render","Fragment","elem","str","nextKey","_ref9","has","_excluded$5","useScroll","container","springOptions","scrollValues","api","scrollX","scrollY","scrollXProgress","scrollYProgress","cleanupScroll","_ref10","y","_excluded$4","useResize","sizeValues","width","height","_ref11","_excluded$3","_excluded2","defaultThresholdOptions","any","useInView","isInView","setIsInView","springsProps","restSpringProps","intersectionArguments","element","root","once","amount","restArgs","IntersectionObserver","activeIntersections","WeakMap","onEnter","cleanup","handleIntersection","entries","entry","onLeave","isIntersecting","Boolean","newOnLeave","unobserve","threshold","isArray","observe","_excluded$2","Spring","_excluded$1","Trail","trails","_excluded","Transition","Interpolation","calc","_get","_dt","oldValue","checkIdle","becomeIdle","inputs","max","reduce","highest","isIdle","self","_len5","_key5","_len6","_key6"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/@react-spring/core/dist/react-spring-core.esm.js"],"sourcesContent":["import { eachProp, is, toArray, getFluidValue, isAnimatedString, Globals, useIsomorphicLayoutEffect, each, easings, raf, flush, FluidValue, deprecateInterpolate, callFluidObservers, frameLoop, hasFluidValue, flushCalls, isEqual, getFluidObservers, addFluidObserver, removeFluidObserver, noop, useMemoOne, deprecateDirectCall, useForceUpdate, usePrev, useOnce, useConstant, onScroll, onResize, createInterpolator, createStringInterpolator } from '@react-spring/shared';\nexport { Globals, createInterpolator, easings, useIsomorphicLayoutEffect, useReducedMotion } from '@react-spring/shared';\nimport * as React from 'react';\nimport { useContext, useMemo, useRef, useState } from 'react';\nimport { getAnimated, AnimatedValue, getPayload, AnimatedString, getAnimatedType, setAnimated } from '@react-spring/animated';\nexport * from '@react-spring/types/animated';\nexport * from '@react-spring/types/interpolation';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction callProp(value, ...args) {\n  return is.fun(value) ? value(...args) : value;\n}\nconst matchProp = (value, key) => value === true || !!(key && value && (is.fun(value) ? value(key) : toArray(value).includes(key)));\nconst resolveProp = (prop, key) => is.obj(prop) ? key && prop[key] : prop;\nconst getDefaultProp = (props, key) => props.default === true ? props[key] : props.default ? props.default[key] : undefined;\n\nconst noopTransform = value => value;\n\nconst getDefaultProps = (props, transform = noopTransform) => {\n  let keys = DEFAULT_PROPS;\n\n  if (props.default && props.default !== true) {\n    props = props.default;\n    keys = Object.keys(props);\n  }\n\n  const defaults = {};\n\n  for (const key of keys) {\n    const value = transform(props[key], key);\n\n    if (!is.und(value)) {\n      defaults[key] = value;\n    }\n  }\n\n  return defaults;\n};\nconst DEFAULT_PROPS = ['config', 'onProps', 'onStart', 'onChange', 'onPause', 'onResume', 'onRest'];\nconst RESERVED_PROPS = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n  keys: 1,\n  callId: 1,\n  parentId: 1\n};\n\nfunction getForwardProps(props) {\n  const forward = {};\n  let count = 0;\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value;\n      count++;\n    }\n  });\n\n  if (count) {\n    return forward;\n  }\n}\n\nfunction inferTo(props) {\n  const to = getForwardProps(props);\n\n  if (to) {\n    const out = {\n      to\n    };\n    eachProp(props, (val, key) => key in to || (out[key] = val));\n    return out;\n  }\n\n  return _extends({}, props);\n}\nfunction computeGoal(value) {\n  value = getFluidValue(value);\n  return is.arr(value) ? value.map(computeGoal) : isAnimatedString(value) ? Globals.createStringInterpolator({\n    range: [0, 1],\n    output: [value, value]\n  })(1) : value;\n}\nfunction hasProps(props) {\n  for (const _ in props) return true;\n\n  return false;\n}\nfunction isAsyncTo(to) {\n  return is.fun(to) || is.arr(to) && is.obj(to[0]);\n}\nfunction detachRefs(ctrl, ref) {\n  var _ctrl$ref;\n\n  (_ctrl$ref = ctrl.ref) == null ? void 0 : _ctrl$ref.delete(ctrl);\n  ref == null ? void 0 : ref.delete(ctrl);\n}\nfunction replaceRef(ctrl, ref) {\n  if (ref && ctrl.ref !== ref) {\n    var _ctrl$ref2;\n\n    (_ctrl$ref2 = ctrl.ref) == null ? void 0 : _ctrl$ref2.delete(ctrl);\n    ref.add(ctrl);\n    ctrl.ref = ref;\n  }\n}\n\nfunction useChain(refs, timeSteps, timeFrame = 1000) {\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0;\n      each(refs, (ref, i) => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i];\n          if (isNaN(delay)) delay = prevDelay;else prevDelay = delay;\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              const memoizedDelayProp = props.delay;\n\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key);\n            });\n          });\n          ref.start();\n        }\n      });\n    } else {\n      let p = Promise.resolve();\n      each(refs, ref => {\n        const controllers = ref.current;\n\n        if (controllers.length) {\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue;\n            ctrl.queue = [];\n            return q;\n          });\n          p = p.then(() => {\n            each(controllers, (ctrl, i) => each(queues[i] || [], update => ctrl.queue.push(update)));\n            return Promise.all(ref.start());\n          });\n        }\n      });\n    }\n  });\n}\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\nconst defaults = _extends({}, config.default, {\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false\n});\n\nclass AnimationConfig {\n  constructor() {\n    this.tension = void 0;\n    this.friction = void 0;\n    this.frequency = void 0;\n    this.damping = void 0;\n    this.mass = void 0;\n    this.velocity = 0;\n    this.restVelocity = void 0;\n    this.precision = void 0;\n    this.progress = void 0;\n    this.duration = void 0;\n    this.easing = void 0;\n    this.clamp = void 0;\n    this.bounce = void 0;\n    this.decay = void 0;\n    this.round = void 0;\n    Object.assign(this, defaults);\n  }\n\n}\nfunction mergeConfig(config, newConfig, defaultConfig) {\n  if (defaultConfig) {\n    defaultConfig = _extends({}, defaultConfig);\n    sanitizeConfig(defaultConfig, newConfig);\n    newConfig = _extends({}, defaultConfig, newConfig);\n  }\n\n  sanitizeConfig(config, newConfig);\n  Object.assign(config, newConfig);\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key];\n    }\n  }\n\n  let {\n    mass,\n    frequency,\n    damping\n  } = config;\n\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01;\n    if (damping < 0) damping = 0;\n    config.tension = Math.pow(2 * Math.PI / frequency, 2) * mass;\n    config.friction = 4 * Math.PI * damping * mass / frequency;\n  }\n\n  return config;\n}\n\nfunction sanitizeConfig(config, props) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined;\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction);\n\n    if (isTensionConfig || !is.und(props.frequency) || !is.und(props.damping) || !is.und(props.mass)) {\n      config.duration = undefined;\n      config.decay = undefined;\n    }\n\n    if (isTensionConfig) {\n      config.frequency = undefined;\n    }\n  }\n}\n\nconst emptyArray = [];\nclass Animation {\n  constructor() {\n    this.changed = false;\n    this.values = emptyArray;\n    this.toValues = null;\n    this.fromValues = emptyArray;\n    this.to = void 0;\n    this.from = void 0;\n    this.config = new AnimationConfig();\n    this.immediate = false;\n  }\n\n}\n\nfunction scheduleProps(callId, {\n  key,\n  props,\n  defaultProps,\n  state,\n  actions\n}) {\n  return new Promise((resolve, reject) => {\n    var _props$cancel;\n\n    let delay;\n    let timeout;\n    let cancel = matchProp((_props$cancel = props.cancel) != null ? _props$cancel : defaultProps == null ? void 0 : defaultProps.cancel, key);\n\n    if (cancel) {\n      onStart();\n    } else {\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key);\n      }\n\n      let pause = defaultProps == null ? void 0 : defaultProps.pause;\n\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key);\n      }\n\n      delay = callProp(props.delay || 0, key);\n\n      if (pause) {\n        state.resumeQueue.add(onResume);\n        actions.pause();\n      } else {\n        actions.resume();\n        onResume();\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume);\n      state.timeouts.delete(timeout);\n      timeout.cancel();\n      delay = timeout.time - raf.now();\n    }\n\n    function onResume() {\n      if (delay > 0 && !Globals.skipAnimation) {\n        state.delayed = true;\n        timeout = raf.setTimeout(onStart, delay);\n        state.pauseQueue.add(onPause);\n        state.timeouts.add(timeout);\n      } else {\n        onStart();\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false;\n      }\n\n      state.pauseQueue.delete(onPause);\n      state.timeouts.delete(timeout);\n\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true;\n      }\n\n      try {\n        actions.start(_extends({}, props, {\n          callId,\n          cancel\n        }), resolve);\n      } catch (err) {\n        reject(err);\n      }\n    }\n  });\n}\n\nconst getCombinedResult = (target, results) => results.length == 1 ? results[0] : results.some(result => result.cancelled) ? getCancelledResult(target.get()) : results.every(result => result.noop) ? getNoopResult(target.get()) : getFinishedResult(target.get(), results.every(result => result.finished));\nconst getNoopResult = value => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false\n});\nconst getFinishedResult = (value, finished, cancelled = false) => ({\n  value,\n  finished,\n  cancelled\n});\nconst getCancelledResult = value => ({\n  value,\n  cancelled: true,\n  finished: false\n});\n\nfunction runAsync(to, props, state, target) {\n  const {\n    callId,\n    parentId,\n    onRest\n  } = props;\n  const {\n    asyncTo: prevTo,\n    promise: prevPromise\n  } = state;\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise;\n  }\n\n  return state.promise = (async () => {\n    state.asyncId = callId;\n    state.asyncTo = to;\n    const defaultProps = getDefaultProps(props, (value, key) => key === 'onRest' ? undefined : value);\n    let preventBail;\n    let bail;\n    const bailPromise = new Promise((resolve, reject) => (preventBail = resolve, bail = reject));\n\n    const bailIfEnded = bailSignal => {\n      const bailResult = callId <= (state.cancelId || 0) && getCancelledResult(target) || callId !== state.asyncId && getFinishedResult(target, false);\n\n      if (bailResult) {\n        bailSignal.result = bailResult;\n        bail(bailSignal);\n        throw bailSignal;\n      }\n    };\n\n    const animate = (arg1, arg2) => {\n      const bailSignal = new BailSignal();\n      const skipAnimationSignal = new SkipAnimationSignal();\n      return (async () => {\n        if (Globals.skipAnimation) {\n          stopAsync(state);\n          skipAnimationSignal.result = getFinishedResult(target, false);\n          bail(skipAnimationSignal);\n          throw skipAnimationSignal;\n        }\n\n        bailIfEnded(bailSignal);\n        const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n          to: arg1\n        });\n        props.parentId = callId;\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value;\n          }\n        });\n        const result = await target.start(props);\n        bailIfEnded(bailSignal);\n\n        if (state.paused) {\n          await new Promise(resume => {\n            state.resumeQueue.add(resume);\n          });\n        }\n\n        return result;\n      })();\n    };\n\n    let result;\n\n    if (Globals.skipAnimation) {\n      stopAsync(state);\n      return getFinishedResult(target, false);\n    }\n\n    try {\n      let animating;\n\n      if (is.arr(to)) {\n        animating = (async queue => {\n          for (const props of queue) {\n            await animate(props);\n          }\n        })(to);\n      } else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)));\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise]);\n      result = getFinishedResult(target.get(), true, false);\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result;\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result;\n      } else {\n        throw err;\n      }\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId;\n        state.asyncTo = parentId ? prevTo : undefined;\n        state.promise = parentId ? prevPromise : undefined;\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item);\n      });\n    }\n\n    return result;\n  })();\n}\nfunction stopAsync(state, cancelId) {\n  flush(state.timeouts, t => t.cancel());\n  state.pauseQueue.clear();\n  state.resumeQueue.clear();\n  state.asyncId = state.asyncTo = state.promise = undefined;\n  if (cancelId) state.cancelId = cancelId;\n}\nclass BailSignal extends Error {\n  constructor() {\n    super('An async animation has been interrupted. You see this error because you ' + 'forgot to use `await` or `.catch(...)` on its returned promise.');\n    this.result = void 0;\n  }\n\n}\nclass SkipAnimationSignal extends Error {\n  constructor() {\n    super('SkipAnimationSignal');\n    this.result = void 0;\n  }\n\n}\n\nconst isFrameValue = value => value instanceof FrameValue;\nlet nextId$1 = 1;\nclass FrameValue extends FluidValue {\n  constructor(...args) {\n    super(...args);\n    this.id = nextId$1++;\n    this.key = void 0;\n    this._priority = 0;\n  }\n\n  get priority() {\n    return this._priority;\n  }\n\n  set priority(priority) {\n    if (this._priority != priority) {\n      this._priority = priority;\n\n      this._onPriorityChange(priority);\n    }\n  }\n\n  get() {\n    const node = getAnimated(this);\n    return node && node.getValue();\n  }\n\n  to(...args) {\n    return Globals.to(this, args);\n  }\n\n  interpolate(...args) {\n    deprecateInterpolate();\n    return Globals.to(this, args);\n  }\n\n  toJSON() {\n    return this.get();\n  }\n\n  observerAdded(count) {\n    if (count == 1) this._attach();\n  }\n\n  observerRemoved(count) {\n    if (count == 0) this._detach();\n  }\n\n  _attach() {}\n\n  _detach() {}\n\n  _onChange(value, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle\n    });\n  }\n\n  _onPriorityChange(priority) {\n    if (!this.idle) {\n      frameLoop.sort(this);\n    }\n\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority\n    });\n  }\n\n}\n\nconst $P = Symbol.for('SpringPhase');\nconst HAS_ANIMATED = 1;\nconst IS_ANIMATING = 2;\nconst IS_PAUSED = 4;\nconst hasAnimated = target => (target[$P] & HAS_ANIMATED) > 0;\nconst isAnimating = target => (target[$P] & IS_ANIMATING) > 0;\nconst isPaused = target => (target[$P] & IS_PAUSED) > 0;\nconst setActiveBit = (target, active) => active ? target[$P] |= IS_ANIMATING | HAS_ANIMATED : target[$P] &= ~IS_ANIMATING;\nconst setPausedBit = (target, paused) => paused ? target[$P] |= IS_PAUSED : target[$P] &= ~IS_PAUSED;\n\nclass SpringValue extends FrameValue {\n  constructor(arg1, arg2) {\n    super();\n    this.key = void 0;\n    this.animation = new Animation();\n    this.queue = void 0;\n    this.defaultProps = {};\n    this._state = {\n      paused: false,\n      delayed: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._pendingCalls = new Set();\n    this._lastCallId = 0;\n    this._lastToId = 0;\n    this._memoizedDuration = 0;\n\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? _extends({}, arg1) : _extends({}, arg2, {\n        from: arg1\n      });\n\n      if (is.und(props.default)) {\n        props.default = true;\n      }\n\n      this.start(props);\n    }\n  }\n\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this);\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to);\n  }\n\n  get velocity() {\n    const node = getAnimated(this);\n    return node instanceof AnimatedValue ? node.lastVelocity || 0 : node.getPayload().map(node => node.lastVelocity || 0);\n  }\n\n  get hasAnimated() {\n    return hasAnimated(this);\n  }\n\n  get isAnimating() {\n    return isAnimating(this);\n  }\n\n  get isPaused() {\n    return isPaused(this);\n  }\n\n  get isDelayed() {\n    return this._state.delayed;\n  }\n\n  advance(dt) {\n    let idle = true;\n    let changed = false;\n    const anim = this.animation;\n    let {\n      config,\n      toValues\n    } = anim;\n    const payload = getPayload(anim.to);\n\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to));\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return;\n      const to = node.constructor == AnimatedString ? 1 : payload ? payload[i].lastPosition : toValues[i];\n      let finished = anim.immediate;\n      let position = to;\n\n      if (!finished) {\n        position = node.lastPosition;\n\n        if (config.tension <= 0) {\n          node.done = true;\n          return;\n        }\n\n        let elapsed = node.elapsedTime += dt;\n        const from = anim.fromValues[i];\n        const v0 = node.v0 != null ? node.v0 : node.v0 = is.arr(config.velocity) ? config.velocity[i] : config.velocity;\n        let velocity;\n        const precision = config.precision || (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001));\n\n        if (!is.und(config.duration)) {\n          let p = 1;\n\n          if (config.duration > 0) {\n            if (this._memoizedDuration !== config.duration) {\n              this._memoizedDuration = config.duration;\n\n              if (node.durationProgress > 0) {\n                node.elapsedTime = config.duration * node.durationProgress;\n                elapsed = node.elapsedTime += dt;\n              }\n            }\n\n            p = (config.progress || 0) + elapsed / this._memoizedDuration;\n            p = p > 1 ? 1 : p < 0 ? 0 : p;\n            node.durationProgress = p;\n          }\n\n          position = from + config.easing(p) * (to - from);\n          velocity = (position - node.lastPosition) / dt;\n          finished = p == 1;\n        } else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay;\n          const e = Math.exp(-(1 - decay) * elapsed);\n          position = from + v0 / (1 - decay) * (1 - e);\n          finished = Math.abs(node.lastPosition - position) <= precision;\n          velocity = v0 * e;\n        } else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity;\n          const restVelocity = config.restVelocity || precision / 10;\n          const bounceFactor = config.clamp ? 0 : config.bounce;\n          const canBounce = !is.und(bounceFactor);\n          const isGrowing = from == to ? node.v0 > 0 : from < to;\n          let isMoving;\n          let isBouncing = false;\n          const step = 1;\n          const numSteps = Math.ceil(dt / step);\n\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity;\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision;\n\n              if (finished) {\n                break;\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing;\n\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor;\n                position = to;\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to);\n            const dampingForce = -config.friction * 0.001 * velocity;\n            const acceleration = (springForce + dampingForce) / config.mass;\n            velocity = velocity + acceleration * step;\n            position = position + velocity * step;\n          }\n        }\n\n        node.lastVelocity = velocity;\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this);\n          finished = true;\n        }\n      }\n\n      if (payload && !payload[i].done) {\n        finished = false;\n      }\n\n      if (finished) {\n        node.done = true;\n      } else {\n        idle = false;\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true;\n      }\n    });\n    const node = getAnimated(this);\n    const currVal = node.getValue();\n\n    if (idle) {\n      const finalVal = getFluidValue(anim.to);\n\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        node.setValue(finalVal);\n\n        this._onChange(finalVal);\n      } else if (changed && config.decay) {\n        this._onChange(currVal);\n      }\n\n      this._stop();\n    } else if (changed) {\n      this._onChange(currVal);\n    }\n  }\n\n  set(value) {\n    raf.batchedUpdates(() => {\n      this._stop();\n\n      this._focus(value);\n\n      this._set(value);\n    });\n    return this;\n  }\n\n  pause() {\n    this._update({\n      pause: true\n    });\n  }\n\n  resume() {\n    this._update({\n      pause: false\n    });\n  }\n\n  finish() {\n    if (isAnimating(this)) {\n      const {\n        to,\n        config\n      } = this.animation;\n      raf.batchedUpdates(() => {\n        this._onStart();\n\n        if (!config.decay) {\n          this._set(to, false);\n        }\n\n        this._stop();\n      });\n    }\n\n    return this;\n  }\n\n  update(props) {\n    const queue = this.queue || (this.queue = []);\n    queue.push(props);\n    return this;\n  }\n\n  start(to, arg2) {\n    let queue;\n\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : _extends({}, arg2, {\n        to\n      })];\n    } else {\n      queue = this.queue || [];\n      this.queue = [];\n    }\n\n    return Promise.all(queue.map(props => {\n      const up = this._update(props);\n\n      return up;\n    })).then(results => getCombinedResult(this, results));\n  }\n\n  stop(cancel) {\n    const {\n      to\n    } = this.animation;\n\n    this._focus(this.get());\n\n    stopAsync(this._state, cancel && this._lastCallId);\n    raf.batchedUpdates(() => this._stop(to, cancel));\n    return this;\n  }\n\n  reset() {\n    this._update({\n      reset: true\n    });\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._start();\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1;\n    }\n  }\n\n  _prepareNode(props) {\n    const key = this.key || '';\n    let {\n      to,\n      from\n    } = props;\n    to = is.obj(to) ? to[key] : to;\n\n    if (to == null || isAsyncTo(to)) {\n      to = undefined;\n    }\n\n    from = is.obj(from) ? from[key] : from;\n\n    if (from == null) {\n      from = undefined;\n    }\n\n    const range = {\n      to,\n      from\n    };\n\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to];\n      from = getFluidValue(from);\n\n      if (!is.und(from)) {\n        this._set(from);\n      } else if (!getAnimated(this)) {\n        this._set(to);\n      }\n    }\n\n    return range;\n  }\n\n  _update(_ref, isLoop) {\n    let props = _extends({}, _ref);\n\n    const {\n      key,\n      defaultProps\n    } = this;\n    if (props.default) Object.assign(defaultProps, getDefaultProps(props, (value, prop) => /^on/.test(prop) ? resolveProp(value, key) : value));\n    mergeActiveFn(this, props, 'onProps');\n    sendEvent(this, 'onProps', props, this);\n\n    const range = this._prepareNode(props);\n\n    if (Object.isFrozen(this)) {\n      throw Error('Cannot animate a `SpringValue` object that is frozen. ' + 'Did you forget to pass your component to `animated(...)` before animating its props?');\n    }\n\n    const state = this._state;\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true);\n            flushCalls(state.pauseQueue);\n            sendEvent(this, 'onPause', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false);\n\n            if (isAnimating(this)) {\n              this._resume();\n            }\n\n            flushCalls(state.resumeQueue);\n            sendEvent(this, 'onResume', getFinishedResult(this, checkFinished(this, this.animation.to)), this);\n          }\n        },\n        start: this._merge.bind(this, range)\n      }\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props);\n\n        if (nextProps) {\n          return this._update(nextProps, true);\n        }\n      }\n\n      return result;\n    });\n  }\n\n  _merge(range, props, resolve) {\n    if (props.cancel) {\n      this.stop(true);\n      return resolve(getCancelledResult(this));\n    }\n\n    const hasToProp = !is.und(range.to);\n    const hasFromProp = !is.und(range.from);\n\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId;\n      } else {\n        return resolve(getCancelledResult(this));\n      }\n    }\n\n    const {\n      key,\n      defaultProps,\n      animation: anim\n    } = this;\n    const {\n      to: prevTo,\n      from: prevFrom\n    } = anim;\n    let {\n      to = prevTo,\n      from = prevFrom\n    } = range;\n\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from;\n    }\n\n    if (props.reverse) [to, from] = [from, to];\n    const hasFromChanged = !isEqual(from, prevFrom);\n\n    if (hasFromChanged) {\n      anim.from = from;\n    }\n\n    from = getFluidValue(from);\n    const hasToChanged = !isEqual(to, prevTo);\n\n    if (hasToChanged) {\n      this._focus(to);\n    }\n\n    const hasAsyncTo = isAsyncTo(props.to);\n    const {\n      config\n    } = anim;\n    const {\n      decay,\n      velocity\n    } = config;\n\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0;\n    }\n\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(config, callProp(props.config, key), props.config !== defaultProps.config ? callProp(defaultProps.config, key) : void 0);\n    }\n\n    let node = getAnimated(this);\n\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true));\n    }\n\n    const reset = is.und(props.reset) ? hasFromProp && !props.default : !is.und(from) && matchProp(props.reset, key);\n    const value = reset ? from : this.get();\n    const goal = computeGoal(to);\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal);\n    const immediate = !hasAsyncTo && (!isAnimatable || matchProp(defaultProps.immediate || props.immediate, key));\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to);\n\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal);\n        } else throw Error(`Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`);\n      }\n    }\n\n    const goalType = node.constructor;\n    let started = hasFluidValue(to);\n    let finished = false;\n\n    if (!started) {\n      const hasValueChanged = reset || !hasAnimated(this) && hasFromChanged;\n\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal);\n        started = !finished;\n      }\n\n      if (!isEqual(anim.immediate, immediate) && !immediate || !isEqual(config.decay, decay) || !isEqual(config.velocity, velocity)) {\n        started = true;\n      }\n    }\n\n    if (finished && isAnimating(this)) {\n      if (anim.changed && !reset) {\n        started = true;\n      } else if (!started) {\n        this._stop(prevTo);\n      }\n    }\n\n    if (!hasAsyncTo) {\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload();\n        anim.toValues = hasFluidValue(to) ? null : goalType == AnimatedString ? [1] : toArray(goal);\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate;\n\n        if (!immediate && !reset) {\n          this._set(prevTo);\n        }\n      }\n\n      if (started) {\n        const {\n          onRest\n        } = anim;\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type));\n        const result = getFinishedResult(this, checkFinished(this, prevTo));\n        flushCalls(this._pendingCalls, result);\n\n        this._pendingCalls.add(resolve);\n\n        if (anim.changed) raf.batchedUpdates(() => {\n          anim.changed = !reset;\n          onRest == null ? void 0 : onRest(result, this);\n\n          if (reset) {\n            callProp(defaultProps.onRest, result);\n          } else {\n            anim.onStart == null ? void 0 : anim.onStart(result, this);\n          }\n        });\n      }\n    }\n\n    if (reset) {\n      this._set(value);\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this));\n    } else if (started) {\n      this._start();\n    } else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve);\n    } else {\n      resolve(getNoopResult(value));\n    }\n  }\n\n  _focus(value) {\n    const anim = this.animation;\n\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach();\n      }\n\n      anim.to = value;\n\n      if (getFluidObservers(this)) {\n        this._attach();\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 0;\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this);\n\n      if (isFrameValue(to)) {\n        priority = to.priority + 1;\n      }\n    }\n\n    this.priority = priority;\n  }\n\n  _detach() {\n    const {\n      to\n    } = this.animation;\n\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this);\n    }\n  }\n\n  _set(arg, idle = true) {\n    const value = getFluidValue(arg);\n\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this);\n\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        const nodeType = getAnimatedType(value);\n\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value));\n        } else {\n          oldNode.setValue(value);\n        }\n\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle);\n          });\n        }\n      }\n    }\n\n    return getAnimated(this);\n  }\n\n  _onStart() {\n    const anim = this.animation;\n\n    if (!anim.changed) {\n      anim.changed = true;\n      sendEvent(this, 'onStart', getFinishedResult(this, checkFinished(this, anim.to)), this);\n    }\n  }\n\n  _onChange(value, idle) {\n    if (!idle) {\n      this._onStart();\n\n      callProp(this.animation.onChange, value, this);\n    }\n\n    callProp(this.defaultProps.onChange, value, this);\n\n    super._onChange(value, idle);\n  }\n\n  _start() {\n    const anim = this.animation;\n    getAnimated(this).reset(getFluidValue(anim.to));\n\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition);\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true);\n\n      if (!isPaused(this)) {\n        this._resume();\n      }\n    }\n  }\n\n  _resume() {\n    if (Globals.skipAnimation) {\n      this.finish();\n    } else {\n      frameLoop.start(this);\n    }\n  }\n\n  _stop(goal, cancel) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false);\n      const anim = this.animation;\n      each(anim.values, node => {\n        node.done = true;\n      });\n\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined;\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this\n      });\n      const result = cancel ? getCancelledResult(this.get()) : getFinishedResult(this.get(), checkFinished(this, goal != null ? goal : anim.to));\n      flushCalls(this._pendingCalls, result);\n\n      if (anim.changed) {\n        anim.changed = false;\n        sendEvent(this, 'onRest', result, this);\n      }\n    }\n  }\n\n}\n\nfunction checkFinished(target, to) {\n  const goal = computeGoal(to);\n  const value = computeGoal(target.get());\n  return isEqual(value, goal);\n}\n\nfunction createLoopUpdate(props, loop = props.loop, to = props.to) {\n  let loopRet = callProp(loop);\n\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet);\n    const reverse = (overrides || props).reverse;\n    const reset = !overrides || overrides.reset;\n    return createUpdate(_extends({}, props, {\n      loop,\n      default: false,\n      pause: undefined,\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n      from: reset ? props.from : undefined,\n      reset\n    }, overrides));\n  }\n}\nfunction createUpdate(props) {\n  const {\n    to,\n    from\n  } = props = inferTo(props);\n  const keys = new Set();\n  if (is.obj(to)) findDefined(to, keys);\n  if (is.obj(from)) findDefined(from, keys);\n  props.keys = keys.size ? Array.from(keys) : null;\n  return props;\n}\nfunction declareUpdate(props) {\n  const update = createUpdate(props);\n\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update);\n  }\n\n  return update;\n}\n\nfunction findDefined(values, keys) {\n  eachProp(values, (value, key) => value != null && keys.add(key));\n}\n\nconst ACTIVE_EVENTS = ['onStart', 'onRest', 'onChange', 'onPause', 'onResume'];\n\nfunction mergeActiveFn(target, props, type) {\n  target.animation[type] = props[type] !== getDefaultProp(props, type) ? resolveProp(props[type], target.key) : undefined;\n}\n\nfunction sendEvent(target, type, ...args) {\n  var _target$animation$typ, _target$animation, _target$defaultProps$, _target$defaultProps;\n\n  (_target$animation$typ = (_target$animation = target.animation)[type]) == null ? void 0 : _target$animation$typ.call(_target$animation, ...args);\n  (_target$defaultProps$ = (_target$defaultProps = target.defaultProps)[type]) == null ? void 0 : _target$defaultProps$.call(_target$defaultProps, ...args);\n}\n\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'];\nlet nextId = 1;\nclass Controller {\n  constructor(props, flush) {\n    this.id = nextId++;\n    this.springs = {};\n    this.queue = [];\n    this.ref = void 0;\n    this._flush = void 0;\n    this._initialProps = void 0;\n    this._lastAsyncId = 0;\n    this._active = new Set();\n    this._changed = new Set();\n    this._started = false;\n    this._item = void 0;\n    this._state = {\n      paused: false,\n      pauseQueue: new Set(),\n      resumeQueue: new Set(),\n      timeouts: new Set()\n    };\n    this._events = {\n      onStart: new Map(),\n      onChange: new Map(),\n      onRest: new Map()\n    };\n    this._onFrame = this._onFrame.bind(this);\n\n    if (flush) {\n      this._flush = flush;\n    }\n\n    if (props) {\n      this.start(_extends({\n        default: true\n      }, props));\n    }\n  }\n\n  get idle() {\n    return !this._state.asyncTo && Object.values(this.springs).every(spring => {\n      return spring.idle && !spring.isDelayed && !spring.isPaused;\n    });\n  }\n\n  get item() {\n    return this._item;\n  }\n\n  set item(item) {\n    this._item = item;\n  }\n\n  get() {\n    const values = {};\n    this.each((spring, key) => values[key] = spring.get());\n    return values;\n  }\n\n  set(values) {\n    for (const key in values) {\n      const value = values[key];\n\n      if (!is.und(value)) {\n        this.springs[key].set(value);\n      }\n    }\n  }\n\n  update(props) {\n    if (props) {\n      this.queue.push(createUpdate(props));\n    }\n\n    return this;\n  }\n\n  start(props) {\n    let {\n      queue\n    } = this;\n\n    if (props) {\n      queue = toArray(props).map(createUpdate);\n    } else {\n      this.queue = [];\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue);\n    }\n\n    prepareKeys(this, queue);\n    return flushUpdateQueue(this, queue);\n  }\n\n  stop(arg, keys) {\n    if (arg !== !!arg) {\n      keys = arg;\n    }\n\n    if (keys) {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].stop(!!arg));\n    } else {\n      stopAsync(this._state, this._lastAsyncId);\n      this.each(spring => spring.stop(!!arg));\n    }\n\n    return this;\n  }\n\n  pause(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: true\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].pause());\n    }\n\n    return this;\n  }\n\n  resume(keys) {\n    if (is.und(keys)) {\n      this.start({\n        pause: false\n      });\n    } else {\n      const springs = this.springs;\n      each(toArray(keys), key => springs[key].resume());\n    }\n\n    return this;\n  }\n\n  each(iterator) {\n    eachProp(this.springs, iterator);\n  }\n\n  _onFrame() {\n    const {\n      onStart,\n      onChange,\n      onRest\n    } = this._events;\n    const active = this._active.size > 0;\n    const changed = this._changed.size > 0;\n\n    if (active && !this._started || changed && !this._started) {\n      this._started = true;\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get();\n        onStart(result, this, this._item);\n      });\n    }\n\n    const idle = !active && this._started;\n    const values = changed || idle && onRest.size ? this.get() : null;\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values;\n        onChange(result, this, this._item);\n      });\n    }\n\n    if (idle) {\n      this._started = false;\n      flush(onRest, ([onRest, result]) => {\n        result.value = values;\n        onRest(result, this, this._item);\n      });\n    }\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent);\n\n      if (!event.idle) {\n        this._active.add(event.parent);\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else return;\n\n    raf.onFrame(this._onFrame);\n  }\n\n}\nfunction flushUpdateQueue(ctrl, queue) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(results => getCombinedResult(ctrl, results));\n}\nasync function flushUpdate(ctrl, props, isLoop) {\n  const {\n    keys,\n    to,\n    from,\n    loop,\n    onRest,\n    onResolve\n  } = props;\n  const defaults = is.obj(props.default) && props.default;\n\n  if (loop) {\n    props.loop = false;\n  }\n\n  if (to === false) props.to = null;\n  if (from === false) props.from = null;\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined;\n\n  if (asyncTo) {\n    props.to = undefined;\n    props.onRest = undefined;\n\n    if (defaults) {\n      defaults.onRest = undefined;\n    }\n  } else {\n    each(BATCHED_EVENTS, key => {\n      const handler = props[key];\n\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key];\n\n        props[key] = ({\n          finished,\n          cancelled\n        }) => {\n          const result = queue.get(handler);\n\n          if (result) {\n            if (!finished) result.finished = false;\n            if (cancelled) result.cancelled = true;\n          } else {\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false\n            });\n          }\n        };\n\n        if (defaults) {\n          defaults[key] = props[key];\n        }\n      }\n    });\n  }\n\n  const state = ctrl['_state'];\n\n  if (props.pause === !state.paused) {\n    state.paused = props.pause;\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue);\n  } else if (state.paused) {\n    props.pause = true;\n  }\n\n  const promises = (keys || Object.keys(ctrl.springs)).map(key => ctrl.springs[key].start(props));\n  const cancel = props.cancel === true || getDefaultProp(props, 'cancel') === true;\n\n  if (asyncTo || cancel && state.asyncId) {\n    promises.push(scheduleProps(++ctrl['_lastAsyncId'], {\n      props,\n      state,\n      actions: {\n        pause: noop,\n        resume: noop,\n\n        start(props, resolve) {\n          if (cancel) {\n            stopAsync(state, ctrl['_lastAsyncId']);\n            resolve(getCancelledResult(ctrl));\n          } else {\n            props.onRest = onRest;\n            resolve(runAsync(asyncTo, props, state, ctrl));\n          }\n        }\n\n      }\n    }));\n  }\n\n  if (state.paused) {\n    await new Promise(resume => {\n      state.resumeQueue.add(resume);\n    });\n  }\n\n  const result = getCombinedResult(ctrl, await Promise.all(promises));\n\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to);\n\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps]);\n      return flushUpdate(ctrl, nextProps, true);\n    }\n  }\n\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item));\n  }\n\n  return result;\n}\nfunction getSprings(ctrl, props) {\n  const springs = _extends({}, ctrl.springs);\n\n  if (props) {\n    each(toArray(props), props => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props);\n      }\n\n      if (!is.obj(props.to)) {\n        props = _extends({}, props, {\n          to: undefined\n        });\n      }\n\n      prepareSprings(springs, props, key => {\n        return createSpring(key);\n      });\n    });\n  }\n\n  setSprings(ctrl, springs);\n  return springs;\n}\nfunction setSprings(ctrl, springs) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring;\n      addFluidObserver(spring, ctrl);\n    }\n  });\n}\n\nfunction createSpring(key, observer) {\n  const spring = new SpringValue();\n  spring.key = key;\n\n  if (observer) {\n    addFluidObserver(spring, observer);\n  }\n\n  return spring;\n}\n\nfunction prepareSprings(springs, props, create) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key));\n      spring['_prepareNode'](props);\n    });\n  }\n}\n\nfunction prepareKeys(ctrl, queue) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl);\n    });\n  });\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst _excluded$6 = [\"children\"];\nconst SpringContext = _ref => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$6);\n\n  const inherited = useContext(ctx);\n  const pause = props.pause || !!inherited.pause,\n        immediate = props.immediate || !!inherited.immediate;\n  props = useMemoOne(() => ({\n    pause,\n    immediate\n  }), [pause, immediate]);\n  const {\n    Provider\n  } = ctx;\n  return React.createElement(Provider, {\n    value: props\n  }, children);\n};\nconst ctx = makeContext(SpringContext, {});\nSpringContext.Provider = ctx.Provider;\nSpringContext.Consumer = ctx.Consumer;\n\nfunction makeContext(target, init) {\n  Object.assign(target, React.createContext(init));\n  target.Provider._context = target;\n  target.Consumer._context = target;\n  return target;\n}\n\nconst SpringRef = () => {\n  const current = [];\n\n  const SpringRef = function SpringRef(props) {\n    deprecateDirectCall();\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = _getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.current = current;\n\n  SpringRef.add = function (ctrl) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl);\n    }\n  };\n\n  SpringRef.delete = function (ctrl) {\n    const i = current.indexOf(ctrl);\n    if (~i) current.splice(i, 1);\n  };\n\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments));\n    return this;\n  };\n\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments));\n    return this;\n  };\n\n  SpringRef.set = function (values) {\n    each(current, ctrl => ctrl.set(values));\n  };\n\n  SpringRef.start = function (props) {\n    const results = [];\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start());\n      } else {\n        const update = this._getProps(props, ctrl, i);\n\n        if (update) {\n          results.push(ctrl.start(update));\n        }\n      }\n    });\n    return results;\n  };\n\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments));\n    return this;\n  };\n\n  SpringRef.update = function (props) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)));\n    return this;\n  };\n\n  const _getProps = function _getProps(arg, ctrl, index) {\n    return is.fun(arg) ? arg(index, ctrl) : arg;\n  };\n\n  SpringRef._getProps = _getProps;\n  return SpringRef;\n};\n\nfunction useSprings(length, props, deps) {\n  const propsFn = is.fun(props) && props;\n  if (propsFn && !deps) deps = [];\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const layoutId = useRef(0);\n  const forceUpdate = useForceUpdate();\n  const state = useMemo(() => ({\n    ctrls: [],\n    queue: [],\n\n    flush(ctrl, updates) {\n      const springs = getSprings(ctrl, updates);\n      const canFlushSync = layoutId.current > 0 && !state.queue.length && !Object.keys(springs).some(key => !ctrl.springs[key]);\n      return canFlushSync ? flushUpdateQueue(ctrl, updates) : new Promise(resolve => {\n        setSprings(ctrl, springs);\n        state.queue.push(() => {\n          resolve(flushUpdateQueue(ctrl, updates));\n        });\n        forceUpdate();\n      });\n    }\n\n  }), []);\n  const ctrls = useRef([...state.ctrls]);\n  const updates = [];\n  const prevLength = usePrev(length) || 0;\n  useMemo(() => {\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref);\n      ctrl.stop(true);\n    });\n    ctrls.current.length = length;\n    declareUpdates(prevLength, length);\n  }, [length]);\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length));\n  }, deps);\n\n  function declareUpdates(startIndex, endIndex) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl = ctrls.current[i] || (ctrls.current[i] = new Controller(null, state.flush));\n      const update = propsFn ? propsFn(i, ctrl) : props[i];\n\n      if (update) {\n        updates[i] = declareUpdate(update);\n      }\n    }\n  }\n\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]));\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++;\n    state.ctrls = ctrls.current;\n    const {\n      queue\n    } = state;\n\n    if (queue.length) {\n      state.queue = [];\n      each(queue, cb => cb());\n    }\n\n    each(ctrls.current, (ctrl, i) => {\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      const update = updates[i];\n\n      if (update) {\n        replaceRef(ctrl, update.ref);\n\n        if (ctrl.ref) {\n          ctrl.queue.push(update);\n        } else {\n          ctrl.start(update);\n        }\n      }\n    });\n  });\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true));\n  });\n  const values = springs.map(x => _extends({}, x));\n  return ref ? [values, ref] : values;\n}\n\nfunction useSpring(props, deps) {\n  const isFn = is.fun(props);\n  const [[values], ref] = useSprings(1, isFn ? props : [props], isFn ? deps || [] : deps);\n  return isFn || arguments.length == 2 ? [values, ref] : values;\n}\n\nconst initSpringRef = () => SpringRef();\n\nconst useSpringRef = () => useState(initSpringRef)[0];\n\nconst useSpringValue = (initial, props) => {\n  const springValue = useConstant(() => new SpringValue(initial, props));\n  useOnce(() => () => {\n    springValue.stop();\n  });\n  return springValue;\n};\n\nfunction useTrail(length, propsArg, deps) {\n  const propsFn = is.fun(propsArg) && propsArg;\n  if (propsFn && !deps) deps = [];\n  let reverse = true;\n  let passedRef = undefined;\n  const result = useSprings(length, (i, ctrl) => {\n    const props = propsFn ? propsFn(i, ctrl) : propsArg;\n    passedRef = props.ref;\n    reverse = reverse && props.reverse;\n    return props;\n  }, deps || [{}]);\n  useIsomorphicLayoutEffect(() => {\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)];\n      replaceRef(ctrl, passedRef);\n\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({\n            to: parent.springs\n          });\n        }\n\n        return;\n      }\n\n      if (parent) {\n        ctrl.start({\n          to: parent.springs\n        });\n      } else {\n        ctrl.start();\n      }\n    });\n  }, deps);\n\n  if (propsFn || arguments.length == 3) {\n    var _passedRef;\n\n    const ref = (_passedRef = passedRef) != null ? _passedRef : result[1];\n\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg;\n\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)];\n        if (parent) props.to = parent.springs;\n        return props;\n      }\n    };\n\n    return result;\n  }\n\n  return result[0];\n}\n\nlet TransitionPhase;\n\n(function (TransitionPhase) {\n  TransitionPhase[\"MOUNT\"] = \"mount\";\n  TransitionPhase[\"ENTER\"] = \"enter\";\n  TransitionPhase[\"UPDATE\"] = \"update\";\n  TransitionPhase[\"LEAVE\"] = \"leave\";\n})(TransitionPhase || (TransitionPhase = {}));\n\nfunction useTransition(data, props, deps) {\n  const propsFn = is.fun(props) && props;\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig\n  } = propsFn ? propsFn() : props;\n  const ref = useMemo(() => propsFn || arguments.length == 3 ? SpringRef() : void 0, []);\n  const items = toArray(data);\n  const transitions = [];\n  const usedTransitions = useRef(null);\n  const prevTransitions = reset ? null : usedTransitions.current;\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions;\n  });\n  useOnce(() => {\n    each(transitions, t => {\n      ref == null ? void 0 : ref.add(t.ctrl);\n      t.ctrl.ref = ref;\n    });\n    return () => {\n      each(usedTransitions.current, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId);\n        }\n\n        detachRefs(t.ctrl, ref);\n        t.ctrl.stop(true);\n      });\n    };\n  });\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions);\n  const expired = reset && usedTransitions.current || [];\n  useIsomorphicLayoutEffect(() => each(expired, ({\n    ctrl,\n    item,\n    key\n  }) => {\n    detachRefs(ctrl, ref);\n    callProp(onDestroyed, item, key);\n  }));\n  const reused = [];\n  if (prevTransitions) each(prevTransitions, (t, i) => {\n    if (t.expired) {\n      clearTimeout(t.expirationId);\n      expired.push(t);\n    } else {\n      i = reused[i] = keys.indexOf(t.key);\n      if (~i) transitions[i] = t;\n    }\n  });\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller()\n      };\n      transitions[i].ctrl.item = item;\n    }\n  });\n\n  if (reused.length) {\n    let i = -1;\n    const {\n      leave\n    } = propsFn ? propsFn() : props;\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions[prevIndex];\n\n      if (~keyIndex) {\n        i = transitions.indexOf(t);\n        transitions[i] = _extends({}, t, {\n          item: items[keyIndex]\n        });\n      } else if (leave) {\n        transitions.splice(++i, 0, t);\n      }\n    });\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item));\n  }\n\n  let delay = -trail;\n  const forceUpdate = useForceUpdate();\n  const defaultProps = getDefaultProps(props);\n  const changes = new Map();\n  const exitingTransitions = useRef(new Map());\n  const forceChange = useRef(false);\n  each(transitions, (t, i) => {\n    const key = t.key;\n    const prevPhase = t.phase;\n    const p = propsFn ? propsFn() : props;\n    let to;\n    let phase;\n    let propsDelay = callProp(p.delay || 0, key);\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter;\n      phase = TransitionPhase.ENTER;\n    } else {\n      const isLeave = keys.indexOf(key) < 0;\n\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave;\n          phase = TransitionPhase.LEAVE;\n        } else if (to = p.update) {\n          phase = TransitionPhase.UPDATE;\n        } else return;\n      } else if (!isLeave) {\n        to = p.enter;\n        phase = TransitionPhase.ENTER;\n      } else return;\n    }\n\n    to = callProp(to, t.item, i);\n    to = is.obj(to) ? inferTo(to) : {\n      to\n    };\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config;\n      to.config = callProp(config, t.item, i, phase);\n    }\n\n    delay += trail;\n\n    const payload = _extends({}, defaultProps, {\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      reset: false\n    }, to);\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const _p = propsFn ? propsFn() : props;\n\n      const from = is.und(_p.initial) || prevTransitions ? _p.from : _p.initial;\n      payload.from = callProp(from, t.item, i);\n    }\n\n    const {\n      onResolve\n    } = payload;\n\n    payload.onResolve = result => {\n      callProp(onResolve, result);\n      const transitions = usedTransitions.current;\n      const t = transitions.find(t => t.key === key);\n      if (!t) return;\n\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        return;\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle);\n\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item);\n\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry;\n            t.expired = true;\n\n            if (!idle && expiryMs > 0) {\n              if (expiryMs <= 0x7fffffff) t.expirationId = setTimeout(forceUpdate, expiryMs);\n              return;\n            }\n          }\n        }\n\n        if (idle && transitions.some(t => t.expired)) {\n          exitingTransitions.current.delete(t);\n\n          if (exitBeforeEnter) {\n            forceChange.current = true;\n          }\n\n          forceUpdate();\n        }\n      }\n    };\n\n    const springs = getSprings(t.ctrl, payload);\n\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    } else {\n      changes.set(t, {\n        phase,\n        springs,\n        payload\n      });\n    }\n  });\n  const context = useContext(SpringContext);\n  const prevContext = usePrev(context);\n  const hasContext = context !== prevContext && hasProps(context);\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({\n          default: context\n        });\n      });\n    }\n  }, [context]);\n  each(changes, (_, t) => {\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key);\n      transitions.splice(ind, 1);\n    }\n  });\n  useIsomorphicLayoutEffect(() => {\n    each(exitingTransitions.current.size ? exitingTransitions.current : changes, ({\n      phase,\n      payload\n    }, t) => {\n      const {\n        ctrl\n      } = t;\n      t.phase = phase;\n      ref == null ? void 0 : ref.add(ctrl);\n\n      if (hasContext && phase == TransitionPhase.ENTER) {\n        ctrl.start({\n          default: context\n        });\n      }\n\n      if (payload) {\n        replaceRef(ctrl, payload.ref);\n\n        if ((ctrl.ref || ref) && !forceChange.current) {\n          ctrl.update(payload);\n        } else {\n          ctrl.start(payload);\n\n          if (forceChange.current) {\n            forceChange.current = false;\n          }\n        }\n      }\n    });\n  }, reset ? void 0 : deps);\n\n  const renderTransitions = render => React.createElement(React.Fragment, null, transitions.map((t, i) => {\n    const {\n      springs\n    } = changes.get(t) || t.ctrl;\n    const elem = render(_extends({}, springs), t.item, t, i);\n    return elem && elem.type ? React.createElement(elem.type, _extends({}, elem.props, {\n      key: is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id,\n      ref: elem.ref\n    })) : elem;\n  }));\n\n  return ref ? [renderTransitions, ref] : renderTransitions;\n}\nlet nextKey = 1;\n\nfunction getKeys(items, {\n  key,\n  keys = key\n}, prevTransitions) {\n  if (keys === null) {\n    const reused = new Set();\n    return items.map(item => {\n      const t = prevTransitions && prevTransitions.find(t => t.item === item && t.phase !== TransitionPhase.LEAVE && !reused.has(t));\n\n      if (t) {\n        reused.add(t);\n        return t.key;\n      }\n\n      return nextKey++;\n    });\n  }\n\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys);\n}\n\nconst _excluded$5 = [\"container\"];\nconst useScroll = (_ref = {}) => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$5);\n\n  const [scrollValues, api] = useSpring(() => _extends({\n    scrollX: 0,\n    scrollY: 0,\n    scrollXProgress: 0,\n    scrollYProgress: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(({\n      x,\n      y\n    }) => {\n      api.start({\n        scrollX: x.current,\n        scrollXProgress: x.progress,\n        scrollY: y.current,\n        scrollYProgress: y.progress\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(scrollValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return scrollValues;\n};\n\nconst _excluded$4 = [\"container\"];\nconst useResize = _ref => {\n  let {\n    container\n  } = _ref,\n      springOptions = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n\n  const [sizeValues, api] = useSpring(() => _extends({\n    width: 0,\n    height: 0\n  }, springOptions), []);\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(({\n      width,\n      height\n    }) => {\n      api.start({\n        width,\n        height,\n        immediate: sizeValues.width.get() === 0 || sizeValues.height.get() === 0\n      });\n    }, {\n      container: (container == null ? void 0 : container.current) || undefined\n    });\n    return () => {\n      each(Object.values(sizeValues), value => value.stop());\n      cleanupScroll();\n    };\n  }, []);\n  return sizeValues;\n};\n\nconst _excluded$3 = [\"to\", \"from\"],\n      _excluded2 = [\"root\", \"once\", \"amount\"];\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1\n};\nfunction useInView(props, args) {\n  const [isInView, setIsInView] = useState(false);\n  const ref = useRef();\n  const propsFn = is.fun(props) && props;\n  const springsProps = propsFn ? propsFn() : {};\n\n  const {\n    to = {},\n    from = {}\n  } = springsProps,\n        restSpringProps = _objectWithoutPropertiesLoose(springsProps, _excluded$3);\n\n  const intersectionArguments = propsFn ? args : props;\n  const [springs, api] = useSpring(() => _extends({\n    from\n  }, restSpringProps), []);\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current;\n\n    const _ref = intersectionArguments != null ? intersectionArguments : {},\n          {\n      root,\n      once,\n      amount = 'any'\n    } = _ref,\n          restArgs = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n    if (!element || once && isInView || typeof IntersectionObserver === 'undefined') return;\n    const activeIntersections = new WeakMap();\n\n    const onEnter = () => {\n      if (to) {\n        api.start(to);\n      }\n\n      setIsInView(true);\n\n      const cleanup = () => {\n        if (from) {\n          api.start(from);\n        }\n\n        setIsInView(false);\n      };\n\n      return once ? undefined : cleanup;\n    };\n\n    const handleIntersection = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target);\n\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return;\n        }\n\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter();\n\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave);\n          } else {\n            observer.unobserve(entry.target);\n          }\n        } else if (onLeave) {\n          onLeave();\n          activeIntersections.delete(entry.target);\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, _extends({\n      root: root && root.current || undefined,\n      threshold: typeof amount === 'number' || Array.isArray(amount) ? amount : defaultThresholdOptions[amount]\n    }, restArgs));\n    observer.observe(element);\n    return () => observer.unobserve(element);\n  }, [intersectionArguments]);\n\n  if (propsFn) {\n    return [ref, springs];\n  }\n\n  return [ref, isInView];\n}\n\nconst _excluded$2 = [\"children\"];\nfunction Spring(_ref) {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n\n  return children(useSpring(props));\n}\n\nconst _excluded$1 = [\"items\", \"children\"];\nfunction Trail(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  const trails = useTrail(items.length, props);\n  return items.map((item, index) => {\n    const result = children(item, index);\n    return is.fun(result) ? result(trails[index]) : result;\n  });\n}\n\nconst _excluded = [\"items\", \"children\"];\nfunction Transition(_ref) {\n  let {\n    items,\n    children\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return useTransition(items, props)(children);\n}\n\nclass Interpolation extends FrameValue {\n  constructor(source, args) {\n    super();\n    this.key = void 0;\n    this.idle = true;\n    this.calc = void 0;\n    this._active = new Set();\n    this.source = source;\n    this.calc = createInterpolator(...args);\n\n    const value = this._get();\n\n    const nodeType = getAnimatedType(value);\n    setAnimated(this, nodeType.create(value));\n  }\n\n  advance(_dt) {\n    const value = this._get();\n\n    const oldValue = this.get();\n\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this).setValue(value);\n\n      this._onChange(value, this.idle);\n    }\n\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this);\n    }\n  }\n\n  _get() {\n    const inputs = is.arr(this.source) ? this.source.map(getFluidValue) : toArray(getFluidValue(this.source));\n    return this.calc(...inputs);\n  }\n\n  _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false;\n      each(getPayload(this), node => {\n        node.done = false;\n      });\n\n      if (Globals.skipAnimation) {\n        raf.batchedUpdates(() => this.advance());\n        becomeIdle(this);\n      } else {\n        frameLoop.start(this);\n      }\n    }\n  }\n\n  _attach() {\n    let priority = 1;\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this);\n      }\n\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source);\n        }\n\n        priority = Math.max(priority, source.priority + 1);\n      }\n    });\n    this.priority = priority;\n\n    this._start();\n  }\n\n  _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this);\n      }\n    });\n\n    this._active.clear();\n\n    becomeIdle(this);\n  }\n\n  eventObserved(event) {\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance();\n      } else {\n        this._active.add(event.parent);\n\n        this._start();\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent);\n    } else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce((highest, parent) => Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1), 0);\n    }\n  }\n\n}\n\nfunction isIdle(source) {\n  return source.idle !== false;\n}\n\nfunction checkIdle(active) {\n  return !active.size || Array.from(active).every(isIdle);\n}\n\nfunction becomeIdle(self) {\n  if (!self.idle) {\n    self.idle = true;\n    each(getPayload(self), node => {\n      node.done = true;\n    });\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self\n    });\n  }\n}\n\nconst to = (source, ...args) => new Interpolation(source, args);\nconst interpolate = (source, ...args) => (deprecateInterpolate(), new Interpolation(source, args));\n\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args)\n});\nconst update = frameLoop.advance;\n\nexport { BailSignal, Controller, FrameValue, Interpolation, Spring, SpringContext, SpringRef, SpringValue, Trail, Transition, config, inferTo, interpolate, to, update, useChain, useInView, useResize, useScroll, useSpring, useSpringRef, useSpringValue, useSprings, useTrail, useTransition };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}