/// <reference types="react" />
import { ListProps } from '@mui/material/List';
interface PickersShortcutsItemGetValueParams<TValue> {
    isValid: (value: TValue) => boolean;
}
export interface PickersShortcutsItem<TValue> {
    label: string;
    getValue: (params: PickersShortcutsItemGetValueParams<TValue>) => TValue;
}
export interface PickersShortcutsProps<TValue> extends Omit<ListProps, 'onChange'> {
    /**
     * Ordered array of shortcuts to display.
     * If empty, does not display the shortcuts.
     * @default `[]`
     */
    items?: PickersShortcutsItem<TValue>[];
    isLandscape: boolean;
    onChange: (newValue: TValue) => void;
    isValid: (value: TValue) => boolean;
}
declare function PickersShortcuts<TValue>(props: PickersShortcutsProps<TValue>): JSX.Element | null;
declare namespace PickersShortcuts {
    var propTypes: any;
}
export { PickersShortcuts };
