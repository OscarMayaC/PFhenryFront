{"ast":null,"code":"import { Color } from 'three';\nvar Lut = function (colormap, numberofcolors) {\n  this.lut = [];\n  this.setColorMap(colormap, numberofcolors);\n  return this;\n};\nLut.prototype = {\n  constructor: Lut,\n  lut: [],\n  map: [],\n  n: 256,\n  minV: 0,\n  maxV: 1,\n  set: function (value) {\n    if (value instanceof Lut) {\n      this.copy(value);\n    }\n    return this;\n  },\n  setMin: function (min) {\n    this.minV = min;\n    return this;\n  },\n  setMax: function (max) {\n    this.maxV = max;\n    return this;\n  },\n  setColorMap: function (colormap, numberofcolors) {\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\n    this.n = numberofcolors || 32;\n    var step = 1.0 / this.n;\n    this.lut.length = 0;\n    for (let i = 0; i <= 1; i += step) {\n      for (let j = 0; j < this.map.length - 1; j++) {\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\n          var min = this.map[j][0];\n          var max = this.map[j + 1][0];\n          var minColor = new Color(this.map[j][1]);\n          var maxColor = new Color(this.map[j + 1][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          this.lut.push(color);\n        }\n      }\n    }\n    return this;\n  },\n  copy: function (lut) {\n    this.lut = lut.lut;\n    this.map = lut.map;\n    this.n = lut.n;\n    this.minV = lut.minV;\n    this.maxV = lut.maxV;\n    return this;\n  },\n  getColor: function (alpha) {\n    if (alpha <= this.minV) {\n      alpha = this.minV;\n    } else if (alpha >= this.maxV) {\n      alpha = this.maxV;\n    }\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\n    var colorPosition = Math.round(alpha * this.n);\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\n    return this.lut[colorPosition];\n  },\n  addColorMap: function (colormapName, arrayOfColors) {\n    ColorMapKeywords[colormapName] = arrayOfColors;\n  },\n  createCanvas: function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = this.n;\n    this.updateCanvas(canvas);\n    return canvas;\n  },\n  updateCanvas: function (canvas) {\n    var ctx = canvas.getContext('2d', {\n      alpha: false\n    });\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\n    var data = imageData.data;\n    var k = 0;\n    var step = 1.0 / this.n;\n    for (let i = 1; i >= 0; i -= step) {\n      for (let j = this.map.length - 1; j >= 0; j--) {\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\n          var min = this.map[j - 1][0];\n          var max = this.map[j][0];\n          var minColor = new Color(this.map[j - 1][1]);\n          var maxColor = new Color(this.map[j][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          data[k * 4] = Math.round(color.r * 255);\n          data[k * 4 + 1] = Math.round(color.g * 255);\n          data[k * 4 + 2] = Math.round(color.b * 255);\n          data[k * 4 + 3] = 255;\n          k += 1;\n        }\n      }\n    }\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n};\nvar ColorMapKeywords = {\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\n};\nexport { ColorMapKeywords, Lut };","map":{"version":3,"names":["Color","Lut","colormap","numberofcolors","lut","setColorMap","prototype","constructor","map","n","minV","maxV","set","value","copy","setMin","min","setMax","max","ColorMapKeywords","rainbow","step","length","i","j","minColor","maxColor","color","lerp","push","getColor","alpha","colorPosition","Math","round","addColorMap","colormapName","arrayOfColors","createCanvas","canvas","document","createElement","width","height","updateCanvas","ctx","getContext","imageData","getImageData","data","k","r","g","b","putImageData","cooltowarm","blackbody","grayscale"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/math/Lut.js"],"sourcesContent":["import { Color } from 'three';\n\nvar Lut = function (colormap, numberofcolors) {\n  this.lut = [];\n  this.setColorMap(colormap, numberofcolors);\n  return this;\n};\n\nLut.prototype = {\n  constructor: Lut,\n  lut: [],\n  map: [],\n  n: 256,\n  minV: 0,\n  maxV: 1,\n  set: function (value) {\n    if (value instanceof Lut) {\n      this.copy(value);\n    }\n\n    return this;\n  },\n  setMin: function (min) {\n    this.minV = min;\n    return this;\n  },\n  setMax: function (max) {\n    this.maxV = max;\n    return this;\n  },\n  setColorMap: function (colormap, numberofcolors) {\n    this.map = ColorMapKeywords[colormap] || ColorMapKeywords.rainbow;\n    this.n = numberofcolors || 32;\n    var step = 1.0 / this.n;\n    this.lut.length = 0;\n\n    for (let i = 0; i <= 1; i += step) {\n      for (let j = 0; j < this.map.length - 1; j++) {\n        if (i >= this.map[j][0] && i < this.map[j + 1][0]) {\n          var min = this.map[j][0];\n          var max = this.map[j + 1][0];\n          var minColor = new Color(this.map[j][1]);\n          var maxColor = new Color(this.map[j + 1][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          this.lut.push(color);\n        }\n      }\n    }\n\n    return this;\n  },\n  copy: function (lut) {\n    this.lut = lut.lut;\n    this.map = lut.map;\n    this.n = lut.n;\n    this.minV = lut.minV;\n    this.maxV = lut.maxV;\n    return this;\n  },\n  getColor: function (alpha) {\n    if (alpha <= this.minV) {\n      alpha = this.minV;\n    } else if (alpha >= this.maxV) {\n      alpha = this.maxV;\n    }\n\n    alpha = (alpha - this.minV) / (this.maxV - this.minV);\n    var colorPosition = Math.round(alpha * this.n);\n    colorPosition == this.n ? colorPosition -= 1 : colorPosition;\n    return this.lut[colorPosition];\n  },\n  addColorMap: function (colormapName, arrayOfColors) {\n    ColorMapKeywords[colormapName] = arrayOfColors;\n  },\n  createCanvas: function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = this.n;\n    this.updateCanvas(canvas);\n    return canvas;\n  },\n  updateCanvas: function (canvas) {\n    var ctx = canvas.getContext('2d', {\n      alpha: false\n    });\n    var imageData = ctx.getImageData(0, 0, 1, this.n);\n    var data = imageData.data;\n    var k = 0;\n    var step = 1.0 / this.n;\n\n    for (let i = 1; i >= 0; i -= step) {\n      for (let j = this.map.length - 1; j >= 0; j--) {\n        if (i < this.map[j][0] && i >= this.map[j - 1][0]) {\n          var min = this.map[j - 1][0];\n          var max = this.map[j][0];\n          var minColor = new Color(this.map[j - 1][1]);\n          var maxColor = new Color(this.map[j][1]);\n          var color = minColor.lerp(maxColor, (i - min) / (max - min));\n          data[k * 4] = Math.round(color.r * 255);\n          data[k * 4 + 1] = Math.round(color.g * 255);\n          data[k * 4 + 2] = Math.round(color.b * 255);\n          data[k * 4 + 3] = 255;\n          k += 1;\n        }\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  }\n};\nvar ColorMapKeywords = {\n  rainbow: [[0.0, 0x0000ff], [0.2, 0x00ffff], [0.5, 0x00ff00], [0.8, 0xffff00], [1.0, 0xff0000]],\n  cooltowarm: [[0.0, 0x3c4ec2], [0.2, 0x9bbcff], [0.5, 0xdcdcdc], [0.8, 0xf6a385], [1.0, 0xb40426]],\n  blackbody: [[0.0, 0x000000], [0.2, 0x780000], [0.5, 0xe63200], [0.8, 0xffff00], [1.0, 0xffffff]],\n  grayscale: [[0.0, 0x000000], [0.2, 0x404040], [0.5, 0x7f7f80], [0.8, 0xbfbfbf], [1.0, 0xffffff]]\n};\n\nexport { ColorMapKeywords, Lut };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}