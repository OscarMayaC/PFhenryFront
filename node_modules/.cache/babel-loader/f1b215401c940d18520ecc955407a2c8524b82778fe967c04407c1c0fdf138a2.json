{"ast":null,"code":"/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n  function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  }\n  ;\n  var debounced = function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n    return result;\n  };\n  debounced.clear = function () {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  debounced.flush = function () {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  return debounced;\n}\n;\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\nmodule.exports = debounce;","map":{"version":3,"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","arguments","callNow","clear","clearTimeout","flush","module","exports"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/debounce/index.js"],"sourcesContent":["/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,IAAI,EAAEC,IAAI,EAAEC,SAAS,EAAC;EACtC,IAAIC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAEC,MAAM;EAC7C,IAAI,IAAI,IAAIN,IAAI,EAAEA,IAAI,GAAG,GAAG;EAE5B,SAASO,KAAKA,CAAA,EAAG;IACf,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAGL,SAAS;IAEjC,IAAIG,IAAI,GAAGR,IAAI,IAAIQ,IAAI,IAAI,CAAC,EAAE;MAC5BN,OAAO,GAAGS,UAAU,CAACJ,KAAK,EAAEP,IAAI,GAAGQ,IAAI,CAAC;IAC1C,CAAC,MAAM;MACLN,OAAO,GAAG,IAAI;MACd,IAAI,CAACD,SAAS,EAAE;QACdK,MAAM,GAAGP,IAAI,CAACa,KAAK,CAACR,OAAO,EAAED,IAAI,CAAC;QAClCC,OAAO,GAAGD,IAAI,GAAG,IAAI;MACvB;IACF;EACF;EAAC;EAED,IAAIU,SAAS,GAAG,SAAAA,CAAA,EAAU;IACxBT,OAAO,GAAG,IAAI;IACdD,IAAI,GAAGW,SAAS;IAChBT,SAAS,GAAGI,IAAI,CAACC,GAAG,EAAE;IACtB,IAAIK,OAAO,GAAGd,SAAS,IAAI,CAACC,OAAO;IACnC,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAGS,UAAU,CAACJ,KAAK,EAAEP,IAAI,CAAC;IAC/C,IAAIe,OAAO,EAAE;MACXT,MAAM,GAAGP,IAAI,CAACa,KAAK,CAACR,OAAO,EAAED,IAAI,CAAC;MAClCC,OAAO,GAAGD,IAAI,GAAG,IAAI;IACvB;IAEA,OAAOG,MAAM;EACf,CAAC;EAEDO,SAAS,CAACG,KAAK,GAAG,YAAW;IAC3B,IAAId,OAAO,EAAE;MACXe,YAAY,CAACf,OAAO,CAAC;MACrBA,OAAO,GAAG,IAAI;IAChB;EACF,CAAC;EAEDW,SAAS,CAACK,KAAK,GAAG,YAAW;IAC3B,IAAIhB,OAAO,EAAE;MACXI,MAAM,GAAGP,IAAI,CAACa,KAAK,CAACR,OAAO,EAAED,IAAI,CAAC;MAClCC,OAAO,GAAGD,IAAI,GAAG,IAAI;MAErBc,YAAY,CAACf,OAAO,CAAC;MACrBA,OAAO,GAAG,IAAI;IAChB;EACF,CAAC;EAED,OAAOW,SAAS;AAClB;AAAC;;AAED;AACAf,QAAQ,CAACA,QAAQ,GAAGA,QAAQ;AAE5BqB,MAAM,CAACC,OAAO,GAAGtB,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}