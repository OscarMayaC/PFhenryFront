{"ast":null,"code":"import * as THREE from 'three';\nfunction createText(message, height) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  let metrics = null;\n  const textHeight = 100;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  metrics = context.measureText(message);\n  const textWidth = metrics.width;\n  canvas.width = textWidth;\n  canvas.height = textHeight;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  context.textAlign = 'center';\n  context.textBaseline = 'middle';\n  context.fillStyle = '#ffffff';\n  context.fillText(message, textWidth / 2, textHeight / 2);\n  const texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true; //var spriteAlignment = new THREE.Vector2(0,0) ;\n\n  const material = new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    side: THREE.DoubleSide,\n    map: texture,\n    transparent: true\n  });\n  const geometry = new THREE.PlaneGeometry(height * textWidth / textHeight, height);\n  const plane = new THREE.Mesh(geometry, material);\n  return plane;\n}\nexport { createText };","map":{"version":3,"names":["THREE","createText","message","height","canvas","document","createElement","context","getContext","metrics","textHeight","font","measureText","textWidth","width","textAlign","textBaseline","fillStyle","fillText","texture","Texture","needsUpdate","material","MeshBasicMaterial","color","side","DoubleSide","map","transparent","geometry","PlaneGeometry","plane","Mesh"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/webxr/Text2D.js"],"sourcesContent":["import * as THREE from 'three';\n\nfunction createText(message, height) {\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  let metrics = null;\n  const textHeight = 100;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  metrics = context.measureText(message);\n  const textWidth = metrics.width;\n  canvas.width = textWidth;\n  canvas.height = textHeight;\n  context.font = 'normal ' + textHeight + 'px Arial';\n  context.textAlign = 'center';\n  context.textBaseline = 'middle';\n  context.fillStyle = '#ffffff';\n  context.fillText(message, textWidth / 2, textHeight / 2);\n  const texture = new THREE.Texture(canvas);\n  texture.needsUpdate = true; //var spriteAlignment = new THREE.Vector2(0,0) ;\n\n  const material = new THREE.MeshBasicMaterial({\n    color: 0xffffff,\n    side: THREE.DoubleSide,\n    map: texture,\n    transparent: true\n  });\n  const geometry = new THREE.PlaneGeometry(height * textWidth / textHeight, height);\n  const plane = new THREE.Mesh(geometry, material);\n  return plane;\n}\n\nexport { createText };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,UAAUA,CAACC,OAAO,EAAEC,MAAM,EAAE;EACnC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,MAAMC,OAAO,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACvC,IAAIC,OAAO,GAAG,IAAI;EAClB,MAAMC,UAAU,GAAG,GAAG;EACtBH,OAAO,CAACI,IAAI,GAAG,SAAS,GAAGD,UAAU,GAAG,UAAU;EAClDD,OAAO,GAAGF,OAAO,CAACK,WAAW,CAACV,OAAO,CAAC;EACtC,MAAMW,SAAS,GAAGJ,OAAO,CAACK,KAAK;EAC/BV,MAAM,CAACU,KAAK,GAAGD,SAAS;EACxBT,MAAM,CAACD,MAAM,GAAGO,UAAU;EAC1BH,OAAO,CAACI,IAAI,GAAG,SAAS,GAAGD,UAAU,GAAG,UAAU;EAClDH,OAAO,CAACQ,SAAS,GAAG,QAAQ;EAC5BR,OAAO,CAACS,YAAY,GAAG,QAAQ;EAC/BT,OAAO,CAACU,SAAS,GAAG,SAAS;EAC7BV,OAAO,CAACW,QAAQ,CAAChB,OAAO,EAAEW,SAAS,GAAG,CAAC,EAAEH,UAAU,GAAG,CAAC,CAAC;EACxD,MAAMS,OAAO,GAAG,IAAInB,KAAK,CAACoB,OAAO,CAAChB,MAAM,CAAC;EACzCe,OAAO,CAACE,WAAW,GAAG,IAAI,CAAC,CAAC;;EAE5B,MAAMC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,iBAAiB,CAAC;IAC3CC,KAAK,EAAE,QAAQ;IACfC,IAAI,EAAEzB,KAAK,CAAC0B,UAAU;IACtBC,GAAG,EAAER,OAAO;IACZS,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAG,IAAI7B,KAAK,CAAC8B,aAAa,CAAC3B,MAAM,GAAGU,SAAS,GAAGH,UAAU,EAAEP,MAAM,CAAC;EACjF,MAAM4B,KAAK,GAAG,IAAI/B,KAAK,CAACgC,IAAI,CAACH,QAAQ,EAAEP,QAAQ,CAAC;EAChD,OAAOS,KAAK;AACd;AAEA,SAAS9B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}