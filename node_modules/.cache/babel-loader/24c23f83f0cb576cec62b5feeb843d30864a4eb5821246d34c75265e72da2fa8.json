{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, dFdx, dFdy, cross, add, mul, max, dot, cond, inversesqrt, equal, normalize, sub, join, positionView, normalView, uv } from '../ShaderNode.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode(inputs => {\n  const {\n    eye_pos,\n    surf_norm,\n    mapN,\n    faceDirection,\n    uv\n  } = inputs;\n  const q0 = dFdx(eye_pos.xyz);\n  const q1 = dFdy(eye_pos.xyz);\n  const st0 = dFdx(uv.st);\n  const st1 = dFdy(uv.st);\n  const N = surf_norm; // normalized\n\n  const q1perp = cross(q1, N);\n  const q0perp = cross(N, q0);\n  const T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  const B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  const det = max(dot(T, T), dot(B, B));\n  const scale = cond(equal(det, 0), 0, mul(faceDirection, inversesqrt(det)));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\nclass NormalMapNode extends TempNode {\n  constructor(node) {\n    let scaleNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super('vec3');\n    this.node = node;\n    this.scaleNode = scaleNode;\n    this.normalMapType = TangentSpaceNormalMap;\n  }\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const {\n      normalMapType,\n      scaleNode\n    } = this;\n    const normalOP = mul(this.node, 2.0);\n    let normalMap = sub(normalOP, 1.0);\n    if (scaleNode !== null) {\n      const normalMapScale = mul(normalMap.xy, scaleNode);\n      normalMap = join(normalMapScale, normalMap.z);\n    }\n    if (normalMapType === ObjectSpaceNormalMap) {\n      const vertexNormalNode = mul(new ModelNode(ModelNode.NORMAL_MATRIX), normalMap);\n      const normal = normalize(vertexNormalNode);\n      return normal.build(builder, type);\n    } else if (normalMapType === TangentSpaceNormalMap) {\n      const perturbNormal2ArbCall = perturbNormal2ArbNode({\n        eye_pos: positionView,\n        surf_norm: normalView,\n        mapN: normalMap,\n        faceDirection: 1.0,\n        uv: uv()\n      });\n      return perturbNormal2ArbCall.build(builder, type);\n    }\n  }\n}\nexport default NormalMapNode;","map":{"version":3,"names":["TempNode","ModelNode","ShaderNode","dFdx","dFdy","cross","add","mul","max","dot","cond","inversesqrt","equal","normalize","sub","join","positionView","normalView","uv","TangentSpaceNormalMap","ObjectSpaceNormalMap","perturbNormal2ArbNode","inputs","eye_pos","surf_norm","mapN","faceDirection","q0","xyz","q1","st0","st","st1","N","q1perp","q0perp","T","x","B","y","det","scale","z","NormalMapNode","constructor","node","scaleNode","arguments","length","undefined","normalMapType","generate","builder","type","getNodeType","normalOP","normalMap","normalMapScale","xy","vertexNormalNode","NORMAL_MATRIX","normal","build","perturbNormal2ArbCall"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/display/NormalMapNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport { ShaderNode, dFdx, dFdy, cross, add, mul, max, dot, cond, inversesqrt, equal, normalize, sub, join, positionView, normalView, uv } from '../ShaderNode.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode(inputs => {\n  const {\n    eye_pos,\n    surf_norm,\n    mapN,\n    faceDirection,\n    uv\n  } = inputs;\n  const q0 = dFdx(eye_pos.xyz);\n  const q1 = dFdy(eye_pos.xyz);\n  const st0 = dFdx(uv.st);\n  const st1 = dFdy(uv.st);\n  const N = surf_norm; // normalized\n\n  const q1perp = cross(q1, N);\n  const q0perp = cross(N, q0);\n  const T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  const B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  const det = max(dot(T, T), dot(B, B));\n  const scale = cond(equal(det, 0), 0, mul(faceDirection, inversesqrt(det)));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\n\nclass NormalMapNode extends TempNode {\n  constructor(node, scaleNode = null) {\n    super('vec3');\n    this.node = node;\n    this.scaleNode = scaleNode;\n    this.normalMapType = TangentSpaceNormalMap;\n  }\n\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const {\n      normalMapType,\n      scaleNode\n    } = this;\n    const normalOP = mul(this.node, 2.0);\n    let normalMap = sub(normalOP, 1.0);\n\n    if (scaleNode !== null) {\n      const normalMapScale = mul(normalMap.xy, scaleNode);\n      normalMap = join(normalMapScale, normalMap.z);\n    }\n\n    if (normalMapType === ObjectSpaceNormalMap) {\n      const vertexNormalNode = mul(new ModelNode(ModelNode.NORMAL_MATRIX), normalMap);\n      const normal = normalize(vertexNormalNode);\n      return normal.build(builder, type);\n    } else if (normalMapType === TangentSpaceNormalMap) {\n      const perturbNormal2ArbCall = perturbNormal2ArbNode({\n        eye_pos: positionView,\n        surf_norm: normalView,\n        mapN: normalMap,\n        faceDirection: 1.0,\n        uv: uv()\n      });\n      return perturbNormal2ArbCall.build(builder, type);\n    }\n  }\n\n}\n\nexport default NormalMapNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}