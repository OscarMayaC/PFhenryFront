{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\nclass HalftonePass extends Pass {\n  constructor(width, height, params) {\n    super();\n    _defineProperty(this, \"material\", void 0);\n    _defineProperty(this, \"fsQuad\", void 0);\n    _defineProperty(this, \"uniforms\", void 0);\n    if (HalftoneShader === undefined) {\n      console.error('THREE.HalftonePass requires HalftoneShader');\n    }\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    }); // set params\n\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key];\n      }\n    }\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n}\nexport { HalftonePass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","HalftoneShader","HalftonePass","constructor","width","height","params","undefined","console","error","uniforms","clone","material","fragmentShader","vertexShader","value","key","hasOwnProperty","fsQuad","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/postprocessing/HalftonePass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\nclass HalftonePass extends Pass {\n  constructor(width, height, params) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (HalftoneShader === undefined) {\n      console.error('THREE.HalftonePass requires HalftoneShader');\n    }\n\n    this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      fragmentShader: HalftoneShader.fragmentShader,\n      vertexShader: HalftoneShader.vertexShader\n    }); // set params\n\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n\n    for (const key in params) {\n      if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n        this.uniforms[key].value = params[key];\n      }\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n  setSize(width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n\n}\n\nexport { HalftonePass };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,aAAa,EAAEC,cAAc,QAAQ,OAAO;AACrD,SAASC,cAAc,QAAQ,8BAA8B;;AAE7D;AACA;AACA;AACA,MAAMC,YAAY,SAASL,IAAI,CAAC;EAC9BM,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;IACjC,KAAK,EAAE;IAEPV,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzC,IAAIK,cAAc,KAAKM,SAAS,EAAE;MAChCC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;IAC7D;IAEA,IAAI,CAACC,QAAQ,GAAGX,aAAa,CAACY,KAAK,CAACV,cAAc,CAACS,QAAQ,CAAC;IAC5D,IAAI,CAACE,QAAQ,GAAG,IAAIZ,cAAc,CAAC;MACjCU,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBG,cAAc,EAAEZ,cAAc,CAACY,cAAc;MAC7CC,YAAY,EAAEb,cAAc,CAACa;IAC/B,CAAC,CAAC,CAAC,CAAC;;IAEJ,IAAI,CAACJ,QAAQ,CAACN,KAAK,CAACW,KAAK,GAAGX,KAAK;IACjC,IAAI,CAACM,QAAQ,CAACL,MAAM,CAACU,KAAK,GAAGV,MAAM;IAEnC,KAAK,MAAMW,GAAG,IAAIV,MAAM,EAAE;MACxB,IAAIA,MAAM,CAACW,cAAc,CAACD,GAAG,CAAC,IAAI,IAAI,CAACN,QAAQ,CAACO,cAAc,CAACD,GAAG,CAAC,EAAE;QACnE,IAAI,CAACN,QAAQ,CAACM,GAAG,CAAC,CAACD,KAAK,GAAGT,MAAM,CAACU,GAAG,CAAC;MACxC;IACF;IAEA,IAAI,CAACE,MAAM,GAAG,IAAIpB,cAAc,CAAC,IAAI,CAACc,QAAQ,CAAC;EACjD;EAEAO,MAAMA,CAACC,QAAQ,EAAEC,WAAW,EAAEC;EAC9B,8BACE;IACA,IAAI,CAACV,QAAQ,CAACF,QAAQ,CAAC,UAAU,CAAC,CAACK,KAAK,GAAGO,UAAU,CAACC,OAAO;IAE7D,IAAI,IAAI,CAACC,cAAc,EAAE;MACvBJ,QAAQ,CAACK,eAAe,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACP,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLA,QAAQ,CAACK,eAAe,CAACJ,WAAW,CAAC;MACrC,IAAI,IAAI,CAACK,KAAK,EAAEN,QAAQ,CAACM,KAAK,EAAE;MAChC,IAAI,CAACR,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B;EACF;EAEAO,OAAOA,CAACvB,KAAK,EAAEC,MAAM,EAAE;IACrB,IAAI,CAACK,QAAQ,CAACN,KAAK,CAACW,KAAK,GAAGX,KAAK;IACjC,IAAI,CAACM,QAAQ,CAACL,MAAM,CAACU,KAAK,GAAGV,MAAM;EACrC;AAEF;AAEA,SAASH,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}