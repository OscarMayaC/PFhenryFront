{"ast":null,"code":"import { Vector2, Group, Raycaster, Matrix4 } from 'three';\nconst _pointer = new Vector2();\nconst _event = {\n  type: '',\n  data: _pointer\n};\nclass InteractiveGroup extends Group {\n  constructor(renderer, camera) {\n    super();\n    const scope = this;\n    const raycaster = new Raycaster();\n    const tempMatrix = new Matrix4(); // Pointer Events\n\n    const element = renderer.domElement;\n    function onPointerEvent(event) {\n      event.stopPropagation();\n      _pointer.x = event.clientX / element.clientWidth * 2 - 1;\n      _pointer.y = -(event.clientY / element.clientHeight) * 2 + 1;\n      raycaster.setFromCamera(_pointer, camera);\n      const intersects = raycaster.intersectObjects(scope.children, false);\n      if (intersects.length > 0) {\n        const intersection = intersects[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = event.type;\n        _event.data.set(uv.x, 1 - uv.y);\n        object.dispatchEvent(_event);\n      }\n    }\n    element.addEventListener('pointerdown', onPointerEvent);\n    element.addEventListener('pointerup', onPointerEvent);\n    element.addEventListener('pointermove', onPointerEvent);\n    element.addEventListener('mousedown', onPointerEvent);\n    element.addEventListener('mouseup', onPointerEvent);\n    element.addEventListener('mousemove', onPointerEvent);\n    element.addEventListener('click', onPointerEvent); // WebXR Controller Events\n    // TODO: Dispatch pointerevents too\n\n    const events = {\n      move: 'mousemove',\n      select: 'click',\n      selectstart: 'mousedown',\n      selectend: 'mouseup'\n    };\n    function onXRControllerEvent(event) {\n      const controller = event.target;\n      tempMatrix.identity().extractRotation(controller.matrixWorld);\n      raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n      raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n      const intersections = raycaster.intersectObjects(scope.children, false);\n      if (intersections.length > 0) {\n        const intersection = intersections[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = events[event.type];\n        _event.data.set(uv.x, 1 - uv.y);\n        object.dispatchEvent(_event);\n      }\n    }\n    const controller1 = renderer.xr.getController(0);\n    controller1.addEventListener('move', onXRControllerEvent);\n    controller1.addEventListener('select', onXRControllerEvent);\n    controller1.addEventListener('selectstart', onXRControllerEvent);\n    controller1.addEventListener('selectend', onXRControllerEvent);\n    const controller2 = renderer.xr.getController(1);\n    controller2.addEventListener('move', onXRControllerEvent);\n    controller2.addEventListener('select', onXRControllerEvent);\n    controller2.addEventListener('selectstart', onXRControllerEvent);\n    controller2.addEventListener('selectend', onXRControllerEvent);\n  }\n}\nexport { InteractiveGroup };","map":{"version":3,"names":["Vector2","Group","Raycaster","Matrix4","_pointer","_event","type","data","InteractiveGroup","constructor","renderer","camera","scope","raycaster","tempMatrix","element","domElement","onPointerEvent","event","stopPropagation","x","clientX","clientWidth","y","clientY","clientHeight","setFromCamera","intersects","intersectObjects","children","length","intersection","object","uv","set","dispatchEvent","addEventListener","events","move","select","selectstart","selectend","onXRControllerEvent","controller","target","identity","extractRotation","matrixWorld","ray","origin","setFromMatrixPosition","direction","applyMatrix4","intersections","controller1","xr","getController","controller2"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/interactive/InteractiveGroup.js"],"sourcesContent":["import { Vector2, Group, Raycaster, Matrix4 } from 'three';\n\nconst _pointer = new Vector2();\n\nconst _event = {\n  type: '',\n  data: _pointer\n};\n\nclass InteractiveGroup extends Group {\n  constructor(renderer, camera) {\n    super();\n    const scope = this;\n    const raycaster = new Raycaster();\n    const tempMatrix = new Matrix4(); // Pointer Events\n\n    const element = renderer.domElement;\n\n    function onPointerEvent(event) {\n      event.stopPropagation();\n      _pointer.x = event.clientX / element.clientWidth * 2 - 1;\n      _pointer.y = -(event.clientY / element.clientHeight) * 2 + 1;\n      raycaster.setFromCamera(_pointer, camera);\n      const intersects = raycaster.intersectObjects(scope.children, false);\n\n      if (intersects.length > 0) {\n        const intersection = intersects[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = event.type;\n\n        _event.data.set(uv.x, 1 - uv.y);\n\n        object.dispatchEvent(_event);\n      }\n    }\n\n    element.addEventListener('pointerdown', onPointerEvent);\n    element.addEventListener('pointerup', onPointerEvent);\n    element.addEventListener('pointermove', onPointerEvent);\n    element.addEventListener('mousedown', onPointerEvent);\n    element.addEventListener('mouseup', onPointerEvent);\n    element.addEventListener('mousemove', onPointerEvent);\n    element.addEventListener('click', onPointerEvent); // WebXR Controller Events\n    // TODO: Dispatch pointerevents too\n\n    const events = {\n      move: 'mousemove',\n      select: 'click',\n      selectstart: 'mousedown',\n      selectend: 'mouseup'\n    };\n\n    function onXRControllerEvent(event) {\n      const controller = event.target;\n      tempMatrix.identity().extractRotation(controller.matrixWorld);\n      raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n      raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n      const intersections = raycaster.intersectObjects(scope.children, false);\n\n      if (intersections.length > 0) {\n        const intersection = intersections[0];\n        const object = intersection.object;\n        const uv = intersection.uv;\n        _event.type = events[event.type];\n\n        _event.data.set(uv.x, 1 - uv.y);\n\n        object.dispatchEvent(_event);\n      }\n    }\n\n    const controller1 = renderer.xr.getController(0);\n    controller1.addEventListener('move', onXRControllerEvent);\n    controller1.addEventListener('select', onXRControllerEvent);\n    controller1.addEventListener('selectstart', onXRControllerEvent);\n    controller1.addEventListener('selectend', onXRControllerEvent);\n    const controller2 = renderer.xr.getController(1);\n    controller2.addEventListener('move', onXRControllerEvent);\n    controller2.addEventListener('select', onXRControllerEvent);\n    controller2.addEventListener('selectstart', onXRControllerEvent);\n    controller2.addEventListener('selectend', onXRControllerEvent);\n  }\n\n}\n\nexport { InteractiveGroup };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}