{"ast":null,"code":"class NodeKeywords {\n  constructor() {\n    this.keywords = [];\n    this.nodes = [];\n    this.keywordsCallback = {};\n  }\n  getNode(name) {\n    let node = this.nodes[name];\n    if (node === undefined && this.keywordsCallback[name] !== undefined) {\n      node = this.keywordsCallback[name](name);\n      this.nodes[name] = node;\n    }\n    return node;\n  }\n  addKeyword(name, callback) {\n    this.keywords.push(name);\n    this.keywordsCallback[name] = callback;\n    return this;\n  }\n  parse(code) {\n    const keywordNames = this.keywords;\n    const regExp = new RegExp(`\\\\b${keywordNames.join('\\\\b|\\\\b')}\\\\b`, 'g');\n    const codeKeywords = code.match(regExp);\n    const keywordNodes = [];\n    if (codeKeywords !== null) {\n      for (const keyword of codeKeywords) {\n        const node = this.getNode(keyword);\n        if (node !== undefined && keywordNodes.indexOf(node) === -1) {\n          keywordNodes.push(node);\n        }\n      }\n    }\n    return keywordNodes;\n  }\n  include(builder, code) {\n    const keywordNodes = this.parse(code);\n    for (const keywordNode of keywordNodes) {\n      keywordNode.build(builder);\n    }\n  }\n}\nexport default NodeKeywords;","map":{"version":3,"names":["NodeKeywords","constructor","keywords","nodes","keywordsCallback","getNode","name","node","undefined","addKeyword","callback","push","parse","code","keywordNames","regExp","RegExp","join","codeKeywords","match","keywordNodes","keyword","indexOf","include","builder","keywordNode","build"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/core/NodeKeywords.js"],"sourcesContent":["class NodeKeywords {\n  constructor() {\n    this.keywords = [];\n    this.nodes = [];\n    this.keywordsCallback = {};\n  }\n\n  getNode(name) {\n    let node = this.nodes[name];\n\n    if (node === undefined && this.keywordsCallback[name] !== undefined) {\n      node = this.keywordsCallback[name](name);\n      this.nodes[name] = node;\n    }\n\n    return node;\n  }\n\n  addKeyword(name, callback) {\n    this.keywords.push(name);\n    this.keywordsCallback[name] = callback;\n    return this;\n  }\n\n  parse(code) {\n    const keywordNames = this.keywords;\n    const regExp = new RegExp(`\\\\b${keywordNames.join('\\\\b|\\\\b')}\\\\b`, 'g');\n    const codeKeywords = code.match(regExp);\n    const keywordNodes = [];\n\n    if (codeKeywords !== null) {\n      for (const keyword of codeKeywords) {\n        const node = this.getNode(keyword);\n\n        if (node !== undefined && keywordNodes.indexOf(node) === -1) {\n          keywordNodes.push(node);\n        }\n      }\n    }\n\n    return keywordNodes;\n  }\n\n  include(builder, code) {\n    const keywordNodes = this.parse(code);\n\n    for (const keywordNode of keywordNodes) {\n      keywordNode.build(builder);\n    }\n  }\n\n}\n\nexport default NodeKeywords;\n"],"mappings":"AAAA,MAAMA,YAAY,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,gBAAgB,GAAG,CAAC,CAAC;EAC5B;EAEAC,OAAOA,CAACC,IAAI,EAAE;IACZ,IAAIC,IAAI,GAAG,IAAI,CAACJ,KAAK,CAACG,IAAI,CAAC;IAE3B,IAAIC,IAAI,KAAKC,SAAS,IAAI,IAAI,CAACJ,gBAAgB,CAACE,IAAI,CAAC,KAAKE,SAAS,EAAE;MACnED,IAAI,GAAG,IAAI,CAACH,gBAAgB,CAACE,IAAI,CAAC,CAACA,IAAI,CAAC;MACxC,IAAI,CAACH,KAAK,CAACG,IAAI,CAAC,GAAGC,IAAI;IACzB;IAEA,OAAOA,IAAI;EACb;EAEAE,UAAUA,CAACH,IAAI,EAAEI,QAAQ,EAAE;IACzB,IAAI,CAACR,QAAQ,CAACS,IAAI,CAACL,IAAI,CAAC;IACxB,IAAI,CAACF,gBAAgB,CAACE,IAAI,CAAC,GAAGI,QAAQ;IACtC,OAAO,IAAI;EACb;EAEAE,KAAKA,CAACC,IAAI,EAAE;IACV,MAAMC,YAAY,GAAG,IAAI,CAACZ,QAAQ;IAClC,MAAMa,MAAM,GAAG,IAAIC,MAAM,CAAE,MAAKF,YAAY,CAACG,IAAI,CAAC,SAAS,CAAE,KAAI,EAAE,GAAG,CAAC;IACvE,MAAMC,YAAY,GAAGL,IAAI,CAACM,KAAK,CAACJ,MAAM,CAAC;IACvC,MAAMK,YAAY,GAAG,EAAE;IAEvB,IAAIF,YAAY,KAAK,IAAI,EAAE;MACzB,KAAK,MAAMG,OAAO,IAAIH,YAAY,EAAE;QAClC,MAAMX,IAAI,GAAG,IAAI,CAACF,OAAO,CAACgB,OAAO,CAAC;QAElC,IAAId,IAAI,KAAKC,SAAS,IAAIY,YAAY,CAACE,OAAO,CAACf,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;UAC3Da,YAAY,CAACT,IAAI,CAACJ,IAAI,CAAC;QACzB;MACF;IACF;IAEA,OAAOa,YAAY;EACrB;EAEAG,OAAOA,CAACC,OAAO,EAAEX,IAAI,EAAE;IACrB,MAAMO,YAAY,GAAG,IAAI,CAACR,KAAK,CAACC,IAAI,CAAC;IAErC,KAAK,MAAMY,WAAW,IAAIL,YAAY,EAAE;MACtCK,WAAW,CAACC,KAAK,CAACF,OAAO,CAAC;IAC5B;EACF;AAEF;AAEA,eAAexB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}