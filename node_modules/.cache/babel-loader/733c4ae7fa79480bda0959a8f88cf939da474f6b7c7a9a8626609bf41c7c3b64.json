{"ast":null,"code":"import { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from 'three';\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({\n      fog: false\n    });\n    super(geometry, material);\n    this.type = 'RectAreaLightHelper';\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n    //\n\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n  }\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity); // prevent hue shift\n\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n    this.matrixWorld.copy(this.light.matrixWorld).scale(this.scale);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n}\nexport { RectAreaLightHelper };","map":{"version":3,"names":["Line","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","Mesh","MeshBasicMaterial","BackSide","RectAreaLightHelper","constructor","light","color","positions","geometry","setAttribute","computeBoundingSphere","material","fog","type","positions2","geometry2","add","side","updateMatrixWorld","scale","set","width","height","undefined","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","dispose"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/helpers/RectAreaLightHelper.js"],"sourcesContent":["import { Line, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Mesh, MeshBasicMaterial, BackSide } from 'three';\n\n/**\n *  This helper must be added as a child of the light\n */\n\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({\n      fog: false\n    });\n    super(geometry, material);\n    this.type = 'RectAreaLightHelper';\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n    //\n\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n  }\n\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity); // prevent hue shift\n\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    }\n\n    this.matrixWorld.copy(this.light.matrixWorld).scale(this.scale);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n\n}\n\nexport { RectAreaLightHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}