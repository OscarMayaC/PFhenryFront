{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\nclass MaterialNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : MaterialNode.COLOR;\n    super();\n    this.scope = scope;\n  }\n  getNodeType(builder) {\n    const scope = this.scope;\n    const material = builder.context.material;\n    if (scope === MaterialNode.COLOR) {\n      return material.map !== null ? 'vec4' : 'vec3';\n    } else if (scope === MaterialNode.OPACITY) {\n      return 'float';\n    } else if (scope === MaterialNode.SPECULAR) {\n      return 'vec3';\n    } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n      return 'float';\n    }\n  }\n  generate(builder, output) {\n    const material = builder.context.material;\n    const scope = this.scope;\n    let node = null;\n    if (scope === MaterialNode.ALPHA_TEST) {\n      node = new MaterialReferenceNode('alphaTest', 'float');\n    } else if (scope === MaterialNode.COLOR) {\n      const colorNode = new MaterialReferenceNode('color', 'color');\n      if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n        node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n      } else {\n        node = colorNode;\n      }\n    } else if (scope === MaterialNode.OPACITY) {\n      const opacityNode = new MaterialReferenceNode('opacity', 'float');\n      if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n        node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n      } else {\n        node = opacityNode;\n      }\n    } else if (scope === MaterialNode.SPECULAR) {\n      const specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n      if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n        node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n      } else {\n        node = specularColorNode;\n      }\n    } else {\n      const outputType = this.getNodeType(builder);\n      node = new MaterialReferenceNode(scope, outputType);\n    }\n    return node.build(builder, output);\n  }\n}\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\nexport default MaterialNode;","map":{"version":3,"names":["_defineProperty","Node","OperatorNode","MaterialReferenceNode","MaterialNode","constructor","scope","arguments","length","undefined","COLOR","getNodeType","builder","material","context","map","OPACITY","SPECULAR","ROUGHNESS","METALNESS","generate","output","node","ALPHA_TEST","colorNode","isTexture","opacityNode","alphaMap","specularColorNode","specularColorMap","outputType","build"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/accessors/MaterialNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MaterialReferenceNode from './MaterialReferenceNode.js';\n\nclass MaterialNode extends Node {\n  constructor(scope = MaterialNode.COLOR) {\n    super();\n    this.scope = scope;\n  }\n\n  getNodeType(builder) {\n    const scope = this.scope;\n    const material = builder.context.material;\n\n    if (scope === MaterialNode.COLOR) {\n      return material.map !== null ? 'vec4' : 'vec3';\n    } else if (scope === MaterialNode.OPACITY) {\n      return 'float';\n    } else if (scope === MaterialNode.SPECULAR) {\n      return 'vec3';\n    } else if (scope === MaterialNode.ROUGHNESS || scope === MaterialNode.METALNESS) {\n      return 'float';\n    }\n  }\n\n  generate(builder, output) {\n    const material = builder.context.material;\n    const scope = this.scope;\n    let node = null;\n\n    if (scope === MaterialNode.ALPHA_TEST) {\n      node = new MaterialReferenceNode('alphaTest', 'float');\n    } else if (scope === MaterialNode.COLOR) {\n      const colorNode = new MaterialReferenceNode('color', 'color');\n\n      if (material.map !== null && material.map !== undefined && material.map.isTexture === true) {\n        node = new OperatorNode('*', colorNode, new MaterialReferenceNode('map', 'texture'));\n      } else {\n        node = colorNode;\n      }\n    } else if (scope === MaterialNode.OPACITY) {\n      const opacityNode = new MaterialReferenceNode('opacity', 'float');\n\n      if (material.alphaMap !== null && material.alphaMap !== undefined && material.alphaMap.isTexture === true) {\n        node = new OperatorNode('*', opacityNode, new MaterialReferenceNode('alphaMap', 'texture'));\n      } else {\n        node = opacityNode;\n      }\n    } else if (scope === MaterialNode.SPECULAR) {\n      const specularColorNode = new MaterialReferenceNode('specularColor', 'color');\n\n      if (material.specularColorMap !== null && material.specularColorMap !== undefined && material.specularColorMap.isTexture === true) {\n        node = new OperatorNode('*', specularColorNode, new MaterialReferenceNode('specularColorMap', 'texture'));\n      } else {\n        node = specularColorNode;\n      }\n    } else {\n      const outputType = this.getNodeType(builder);\n      node = new MaterialReferenceNode(scope, outputType);\n    }\n\n    return node.build(builder, output);\n  }\n\n}\n\n_defineProperty(MaterialNode, \"ALPHA_TEST\", 'alphaTest');\n\n_defineProperty(MaterialNode, \"COLOR\", 'color');\n\n_defineProperty(MaterialNode, \"OPACITY\", 'opacity');\n\n_defineProperty(MaterialNode, \"SPECULAR\", 'specular');\n\n_defineProperty(MaterialNode, \"ROUGHNESS\", 'roughness');\n\n_defineProperty(MaterialNode, \"METALNESS\", 'metalness');\n\nexport default MaterialNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}