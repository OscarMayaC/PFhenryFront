{"ast":null,"code":"// http://mrl.nyu.edu/~perlin/noise/\nvar ImprovedNoise = function () {\n  var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n  for (let i = 0; i < 256; i++) {\n    p[256 + i] = p[i];\n  }\n  function fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n  }\n  function lerp(t, a, b) {\n    return a + t * (b - a);\n  }\n  function grad(hash, x, y, z) {\n    var h = hash & 15;\n    var u = h < 8 ? x : y,\n      v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n    return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n  }\n  return {\n    noise: function (x, y, z) {\n      var floorX = Math.floor(x),\n        floorY = Math.floor(y),\n        floorZ = Math.floor(z);\n      var X = floorX & 255,\n        Y = floorY & 255,\n        Z = floorZ & 255;\n      x -= floorX;\n      y -= floorY;\n      z -= floorZ;\n      var xMinus1 = x - 1,\n        yMinus1 = y - 1,\n        zMinus1 = z - 1;\n      var u = fade(x),\n        v = fade(y),\n        w = fade(z);\n      var A = p[X] + Y,\n        AA = p[A] + Z,\n        AB = p[A + 1] + Z,\n        B = p[X + 1] + Y,\n        BA = p[B] + Z,\n        BB = p[B + 1] + Z;\n      return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z), grad(p[BA], xMinus1, y, z)), lerp(u, grad(p[AB], x, yMinus1, z), grad(p[BB], xMinus1, yMinus1, z))), lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1), grad(p[BA + 1], xMinus1, y, zMinus1)), lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1), grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n    }\n  };\n};\nexport { ImprovedNoise };","map":{"version":3,"names":["ImprovedNoise","p","i","fade","t","lerp","a","b","grad","hash","x","y","z","h","u","v","noise","floorX","Math","floor","floorY","floorZ","X","Y","Z","xMinus1","yMinus1","zMinus1","w","A","AA","AB","B","BA","BB"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/math/ImprovedNoise.js"],"sourcesContent":["// http://mrl.nyu.edu/~perlin/noise/\nvar ImprovedNoise = function () {\n  var p = [151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180];\n\n  for (let i = 0; i < 256; i++) {\n    p[256 + i] = p[i];\n  }\n\n  function fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n  }\n\n  function lerp(t, a, b) {\n    return a + t * (b - a);\n  }\n\n  function grad(hash, x, y, z) {\n    var h = hash & 15;\n    var u = h < 8 ? x : y,\n        v = h < 4 ? y : h == 12 || h == 14 ? x : z;\n    return ((h & 1) == 0 ? u : -u) + ((h & 2) == 0 ? v : -v);\n  }\n\n  return {\n    noise: function (x, y, z) {\n      var floorX = Math.floor(x),\n          floorY = Math.floor(y),\n          floorZ = Math.floor(z);\n      var X = floorX & 255,\n          Y = floorY & 255,\n          Z = floorZ & 255;\n      x -= floorX;\n      y -= floorY;\n      z -= floorZ;\n      var xMinus1 = x - 1,\n          yMinus1 = y - 1,\n          zMinus1 = z - 1;\n      var u = fade(x),\n          v = fade(y),\n          w = fade(z);\n      var A = p[X] + Y,\n          AA = p[A] + Z,\n          AB = p[A + 1] + Z,\n          B = p[X + 1] + Y,\n          BA = p[B] + Z,\n          BB = p[B + 1] + Z;\n      return lerp(w, lerp(v, lerp(u, grad(p[AA], x, y, z), grad(p[BA], xMinus1, y, z)), lerp(u, grad(p[AB], x, yMinus1, z), grad(p[BB], xMinus1, yMinus1, z))), lerp(v, lerp(u, grad(p[AA + 1], x, y, zMinus1), grad(p[BA + 1], xMinus1, y, zMinus1)), lerp(u, grad(p[AB + 1], x, yMinus1, zMinus1), grad(p[BB + 1], xMinus1, yMinus1, zMinus1))));\n    }\n  };\n};\n\nexport { ImprovedNoise };\n"],"mappings":"AAAA;AACA,IAAIA,aAAa,GAAG,SAAAA,CAAA,EAAY;EAC9B,IAAIC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,C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"},"metadata":{},"sourceType":"module","externalDependencies":[]}