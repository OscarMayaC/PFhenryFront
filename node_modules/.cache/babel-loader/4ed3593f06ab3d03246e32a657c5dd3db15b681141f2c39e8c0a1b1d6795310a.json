{"ast":null,"code":"import NodeMaterial from './NodeMaterial.js';\nimport { MeshBasicMaterial } from 'three';\nconst defaultValues = new MeshBasicMaterial();\nclass MeshBasicNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.lights = true;\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.positionNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n}\nMeshBasicNodeMaterial.prototype.isMeshBasicNodeMaterial = true;\nexport default MeshBasicNodeMaterial;","map":{"version":3,"names":["NodeMaterial","MeshBasicMaterial","defaultValues","MeshBasicNodeMaterial","constructor","parameters","lights","colorNode","opacityNode","alphaTestNode","lightNode","positionNode","setDefaultValues","setValues","copy","source","prototype","isMeshBasicNodeMaterial"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/materials/MeshBasicNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport { MeshBasicMaterial } from 'three';\n\nconst defaultValues = new MeshBasicMaterial();\n\nclass MeshBasicNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.lights = true;\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.positionNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.positionNode = source.positionNode;\n    return super.copy(source);\n  }\n\n}\n\nMeshBasicNodeMaterial.prototype.isMeshBasicNodeMaterial = true;\n\nexport default MeshBasicNodeMaterial;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,SAASC,iBAAiB,QAAQ,OAAO;AAEzC,MAAMC,aAAa,GAAG,IAAID,iBAAiB,EAAE;AAE7C,MAAME,qBAAqB,SAASH,YAAY,CAAC;EAC/CI,WAAWA,CAACC,UAAU,EAAE;IACtB,KAAK,EAAE;IACP,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,gBAAgB,CAACV,aAAa,CAAC;IACpC,IAAI,CAACW,SAAS,CAACR,UAAU,CAAC;EAC5B;EAEAS,IAAIA,CAACC,MAAM,EAAE;IACX,IAAI,CAACR,SAAS,GAAGQ,MAAM,CAACR,SAAS;IACjC,IAAI,CAACC,WAAW,GAAGO,MAAM,CAACP,WAAW;IACrC,IAAI,CAACC,aAAa,GAAGM,MAAM,CAACN,aAAa;IACzC,IAAI,CAACC,SAAS,GAAGK,MAAM,CAACL,SAAS;IACjC,IAAI,CAACC,YAAY,GAAGI,MAAM,CAACJ,YAAY;IACvC,OAAO,KAAK,CAACG,IAAI,CAACC,MAAM,CAAC;EAC3B;AAEF;AAEAZ,qBAAqB,CAACa,SAAS,CAACC,uBAAuB,GAAG,IAAI;AAE9D,eAAed,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}