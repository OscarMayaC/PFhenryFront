/// <reference types="node" />
/**
 * # BufferUtils
 *
 * *Common utilities for working with ArrayBuffer and Buffer objects.*
 *
 * @category Utilities
 */
export declare class BufferUtils {
    /** Creates an ArrayBuffer from a Data URI. */
    static createBufferFromDataURI(dataURI: string): ArrayBuffer;
    /** Encodes text to an ArrayBuffer. */
    static encodeText(text: string): ArrayBuffer;
    /** Decodes an ArrayBuffer to text. */
    static decodeText(buffer: ArrayBuffer): string;
    /** Copies an ArrayBuffer from a Buffer's content. */
    static trim(buffer: Buffer): ArrayBuffer;
    /**
    * Concatenates N ArrayBuffers.
    */
    static concat(buffers: ArrayBuffer[]): ArrayBuffer;
    /**
    * Pads an ArrayBuffer to the next 4-byte boundary.
    *
    * Reference: [glTF â†’ Data Alignment](https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#data-alignment)
    */
    static pad(arrayBuffer: ArrayBuffer, paddingByte?: number): ArrayBuffer;
    /** Pads a number to 4-byte boundaries. */
    static padNumber(v: number): number;
    /** Returns true if given ArrayBuffer instances are equal. */
    static equals(a: ArrayBuffer, b: ArrayBuffer): boolean;
}
