import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _extends from "@babel/runtime/helpers/esm/extends";
var _excluded = ["value", "defaultValue", "format", "onChange", "readOnly", "onError", "disableFuture", "disablePast", "minTime", "maxTime", "minutesStep", "shouldDisableClock", "shouldDisableTime", "disableIgnoringDatePartForTimeValidation", "selectedSections", "onSelectedSectionsChange", "ampm", "unstableFieldRef"];
import { singleItemFieldValueManager, singleItemValueManager } from '../internals/utils/valueManagers';
import { useField } from '../internals/hooks/useField';
import { validateTime } from '../internals/hooks/validation/useTimeValidation';
import { useUtils } from '../internals/hooks/useUtils';
var useDefaultizedTimeField = function useDefaultizedTimeField(props) {
  var _props$ampm, _props$disablePast, _props$disableFuture, _props$format;
  var utils = useUtils();
  var ampm = (_props$ampm = props.ampm) != null ? _props$ampm : utils.is12HourCycleInCurrentLocale();
  var defaultFormat = ampm ? utils.formats.fullTime12h : utils.formats.fullTime24h;
  return _extends({}, props, {
    disablePast: (_props$disablePast = props.disablePast) != null ? _props$disablePast : false,
    disableFuture: (_props$disableFuture = props.disableFuture) != null ? _props$disableFuture : false,
    format: (_props$format = props.format) != null ? _props$format : defaultFormat
  });
};
export var useTimeField = function useTimeField(_ref) {
  var props = _ref.props,
    inputRef = _ref.inputRef;
  var _useDefaultizedTimeFi = useDefaultizedTimeField(props),
    value = _useDefaultizedTimeFi.value,
    defaultValue = _useDefaultizedTimeFi.defaultValue,
    format = _useDefaultizedTimeFi.format,
    onChange = _useDefaultizedTimeFi.onChange,
    readOnly = _useDefaultizedTimeFi.readOnly,
    onError = _useDefaultizedTimeFi.onError,
    disableFuture = _useDefaultizedTimeFi.disableFuture,
    disablePast = _useDefaultizedTimeFi.disablePast,
    minTime = _useDefaultizedTimeFi.minTime,
    maxTime = _useDefaultizedTimeFi.maxTime,
    minutesStep = _useDefaultizedTimeFi.minutesStep,
    shouldDisableClock = _useDefaultizedTimeFi.shouldDisableClock,
    shouldDisableTime = _useDefaultizedTimeFi.shouldDisableTime,
    disableIgnoringDatePartForTimeValidation = _useDefaultizedTimeFi.disableIgnoringDatePartForTimeValidation,
    selectedSections = _useDefaultizedTimeFi.selectedSections,
    onSelectedSectionsChange = _useDefaultizedTimeFi.onSelectedSectionsChange,
    ampm = _useDefaultizedTimeFi.ampm,
    unstableFieldRef = _useDefaultizedTimeFi.unstableFieldRef,
    other = _objectWithoutProperties(_useDefaultizedTimeFi, _excluded);
  return useField({
    inputRef: inputRef,
    forwardedProps: other,
    internalProps: {
      value: value,
      defaultValue: defaultValue,
      format: format,
      onChange: onChange,
      readOnly: readOnly,
      onError: onError,
      disableFuture: disableFuture,
      disablePast: disablePast,
      minTime: minTime,
      maxTime: maxTime,
      minutesStep: minutesStep,
      shouldDisableClock: shouldDisableClock,
      shouldDisableTime: shouldDisableTime,
      disableIgnoringDatePartForTimeValidation: disableIgnoringDatePartForTimeValidation,
      selectedSections: selectedSections,
      onSelectedSectionsChange: onSelectedSectionsChange,
      ampm: ampm,
      unstableFieldRef: unstableFieldRef
    },
    valueManager: singleItemValueManager,
    fieldValueManager: singleItemFieldValueManager,
    validator: validateTime,
    valueType: 'time'
  });
};