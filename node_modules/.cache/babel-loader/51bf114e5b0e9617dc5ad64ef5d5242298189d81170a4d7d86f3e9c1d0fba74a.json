{"ast":null,"code":"class ARButton {\n  static createButton(renderer) {\n    let sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const button = document.createElement('button');\n    function /*device*/\n    showStartAR() {\n      if (sessionInit.domOverlay === undefined) {\n        const overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '38px');\n        svg.setAttribute('height', '38px');\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          var _currentSession;\n          (_currentSession = currentSession) === null || _currentSession === void 0 ? void 0 : _currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', '2px');\n        svg.appendChild(path);\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n      let currentSession = null;\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n      function /*event*/\n      onSessionEnded() {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n      button.onmouseenter = () => {\n        button.style.opacity = '1.0';\n      };\n      button.onmouseleave = () => {\n        button.style.opacity = '0.5';\n      };\n      button.onclick = () => {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button) // Query for session mode\n      ;\n\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n}\nexport { ARButton };","map":{"version":3,"names":["ARButton","createButton","renderer","sessionInit","arguments","length","undefined","button","document","createElement","showStartAR","domOverlay","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","_currentSession","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/webxr/ARButton.js"],"sourcesContent":["class ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function\n      /*device*/\n    showStartAR() {\n      if (sessionInit.domOverlay === undefined) {\n        const overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '38px');\n        svg.setAttribute('height', '38px');\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          var _currentSession;\n\n          (_currentSession = currentSession) === null || _currentSession === void 0 ? void 0 : _currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', '2px');\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function\n        /*event*/\n      onSessionEnded() {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = () => {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = () => {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = () => {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button) // Query for session mode\n      ;\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nexport { ARButton };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}