{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n    _defineProperty(this, \"material\", void 0);\n    _defineProperty(this, \"fsQuad\", void 0);\n    _defineProperty(this, \"uniforms\", void 0);\n    if (DotScreenShader === undefined) console.error('THREE.DotScreenPass relies on THREE.DotScreenShader');\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== undefined) this.uniforms['center'].value.copy(center);\n    if (angle !== undefined) this.uniforms['angle'].value = angle;\n    if (scale !== undefined) this.uniforms['scale'].value = scale;\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height);\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport { DotScreenPass };","map":{"version":3,"names":["_defineProperty","Pass","FullScreenQuad","UniformsUtils","ShaderMaterial","DotScreenShader","DotScreenPass","constructor","center","angle","scale","undefined","console","error","shader","uniforms","clone","value","copy","material","vertexShader","fragmentShader","fsQuad","render","renderer","writeBuffer","readBuffer","texture","set","width","height","renderToScreen","setRenderTarget","clear"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/postprocessing/DotScreenPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { UniformsUtils, ShaderMaterial } from 'three';\nimport { DotScreenShader } from '../shaders/DotScreenShader.js';\n\nclass DotScreenPass extends Pass {\n  constructor(center, angle, scale) {\n    super();\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    if (DotScreenShader === undefined) console.error('THREE.DotScreenPass relies on THREE.DotScreenShader');\n    const shader = DotScreenShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    if (center !== undefined) this.uniforms['center'].value.copy(center);\n    if (angle !== undefined) this.uniforms['angle'].value = angle;\n    if (scale !== undefined) this.uniforms['scale'].value = scale;\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive */\n  ) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['tSize'].value.set(readBuffer.width, readBuffer.height);\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { DotScreenPass };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,aAAa,EAAEC,cAAc,QAAQ,OAAO;AACrD,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,aAAa,SAASL,IAAI,CAAC;EAC/BM,WAAWA,CAACC,MAAM,EAAEC,KAAK,EAAEC,KAAK,EAAE;IAChC,KAAK,EAAE;IAEPV,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzC,IAAIK,eAAe,KAAKM,SAAS,EAAEC,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC;IACvG,MAAMC,MAAM,GAAGT,eAAe;IAC9B,IAAI,CAACU,QAAQ,GAAGZ,aAAa,CAACa,KAAK,CAACF,MAAM,CAACC,QAAQ,CAAC;IACpD,IAAIP,MAAM,KAAKG,SAAS,EAAE,IAAI,CAACI,QAAQ,CAAC,QAAQ,CAAC,CAACE,KAAK,CAACC,IAAI,CAACV,MAAM,CAAC;IACpE,IAAIC,KAAK,KAAKE,SAAS,EAAE,IAAI,CAACI,QAAQ,CAAC,OAAO,CAAC,CAACE,KAAK,GAAGR,KAAK;IAC7D,IAAIC,KAAK,KAAKC,SAAS,EAAE,IAAI,CAACI,QAAQ,CAAC,OAAO,CAAC,CAACE,KAAK,GAAGP,KAAK;IAC7D,IAAI,CAACS,QAAQ,GAAG,IAAIf,cAAc,CAAC;MACjCW,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBK,YAAY,EAAEN,MAAM,CAACM,YAAY;MACjCC,cAAc,EAAEP,MAAM,CAACO;IACzB,CAAC,CAAC;IACF,IAAI,CAACC,MAAM,GAAG,IAAIpB,cAAc,CAAC,IAAI,CAACiB,QAAQ,CAAC;EACjD;EAEAI,MAAMA,CAACC,QAAQ,EAAEC,WAAW,EAAEC;EAC9B,8BACE;IACA,IAAI,CAACX,QAAQ,CAAC,UAAU,CAAC,CAACE,KAAK,GAAGS,UAAU,CAACC,OAAO;IACpD,IAAI,CAACZ,QAAQ,CAAC,OAAO,CAAC,CAACE,KAAK,CAACW,GAAG,CAACF,UAAU,CAACG,KAAK,EAAEH,UAAU,CAACI,MAAM,CAAC;IAErE,IAAI,IAAI,CAACC,cAAc,EAAE;MACvBP,QAAQ,CAACQ,eAAe,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACV,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLA,QAAQ,CAACQ,eAAe,CAACP,WAAW,CAAC;MACrC,IAAI,IAAI,CAACQ,KAAK,EAAET,QAAQ,CAACS,KAAK,EAAE;MAChC,IAAI,CAACX,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B;EACF;AAEF;AAEA,SAASlB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}