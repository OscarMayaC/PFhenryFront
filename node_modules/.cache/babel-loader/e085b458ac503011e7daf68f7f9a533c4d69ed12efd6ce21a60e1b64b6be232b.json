{"ast":null,"code":"import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\nconst _matrix = new Matrix4();\nconst _vector = new Vector3();\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n  updateMesh() {\n    const defaultRadius = 0.008;\n    const joints = this.controller.joints;\n    let count = 0;\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n}\nexport { XRHandPrimitiveModel };","map":{"version":3,"names":["Matrix4","Vector3","SphereGeometry","BoxGeometry","MeshStandardMaterial","InstancedMesh","DynamicDrawUsage","_matrix","_vector","XRHandPrimitiveModel","constructor","handModel","controller","path","handedness","options","envMap","geometry","primitive","material","handMesh","instanceMatrix","setUsage","castShadow","receiveShadow","add","joints","updateMesh","defaultRadius","count","i","length","joint","visible","setScalar","jointRadius","compose","position","quaternion","setMatrixAt","needsUpdate"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/webxr/XRHandPrimitiveModel.js"],"sourcesContent":["import { Matrix4, Vector3, SphereGeometry, BoxGeometry, MeshStandardMaterial, InstancedMesh, DynamicDrawUsage } from 'three';\n\nconst _matrix = new Matrix4();\n\nconst _vector = new Vector3();\n\nclass XRHandPrimitiveModel {\n  constructor(handModel, controller, path, handedness, options) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.envMap = null;\n    let geometry;\n\n    if (!options || !options.primitive || options.primitive === 'sphere') {\n      geometry = new SphereGeometry(1, 10, 10);\n    } else if (options.primitive === 'box') {\n      geometry = new BoxGeometry(1, 1, 1);\n    }\n\n    const material = new MeshStandardMaterial();\n    this.handMesh = new InstancedMesh(geometry, material, 30);\n    this.handMesh.instanceMatrix.setUsage(DynamicDrawUsage); // will be updated every frame\n\n    this.handMesh.castShadow = true;\n    this.handMesh.receiveShadow = true;\n    this.handModel.add(this.handMesh);\n    this.joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n  }\n\n  updateMesh() {\n    const defaultRadius = 0.008;\n    const joints = this.controller.joints;\n    let count = 0;\n\n    for (let i = 0; i < this.joints.length; i++) {\n      const joint = joints[this.joints[i]];\n\n      if (joint.visible) {\n        _vector.setScalar(joint.jointRadius || defaultRadius);\n\n        _matrix.compose(joint.position, joint.quaternion, _vector);\n\n        this.handMesh.setMatrixAt(i, _matrix);\n        count++;\n      }\n    }\n\n    this.handMesh.count = count;\n    this.handMesh.instanceMatrix.needsUpdate = true;\n  }\n\n}\n\nexport { XRHandPrimitiveModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}