{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\nclass AfterimagePass extends Pass {\n  constructor() {\n    let damp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.96;\n    let shader = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : AfterimageShader;\n    super();\n    _defineProperty(this, \"shader\", void 0);\n    _defineProperty(this, \"uniforms\", void 0);\n    _defineProperty(this, \"textureComp\", void 0);\n    _defineProperty(this, \"textureOld\", void 0);\n    _defineProperty(this, \"shaderMaterial\", void 0);\n    _defineProperty(this, \"compFsQuad\", void 0);\n    _defineProperty(this, \"copyFsQuad\", void 0);\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['damp'].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms['tOld'].value = this.textureOld.texture;\n    this.uniforms['tNew'].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.copyFsQuad.render(renderer);\n    } // Swap buffers.\n\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n  }\n\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n}\nexport { AfterimagePass };","map":{"version":3,"names":["_defineProperty","UniformsUtils","WebGLRenderTarget","LinearFilter","NearestFilter","RGBAFormat","ShaderMaterial","MeshBasicMaterial","Pass","FullScreenQuad","AfterimageShader","AfterimagePass","constructor","damp","arguments","length","undefined","shader","uniforms","clone","value","textureComp","window","innerWidth","innerHeight","minFilter","magFilter","format","textureOld","shaderMaterial","vertexShader","fragmentShader","compFsQuad","material","copyFsQuad","render","renderer","writeBuffer","readBuffer","texture","setRenderTarget","map","renderToScreen","clear","temp","setSize","width","height"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/postprocessing/AfterimagePass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { UniformsUtils, WebGLRenderTarget, LinearFilter, NearestFilter, RGBAFormat, ShaderMaterial, MeshBasicMaterial } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { AfterimageShader } from '../shaders/AfterimageShader.js';\n\nclass AfterimagePass extends Pass {\n  constructor(damp = 0.96, shader = AfterimageShader) {\n    super();\n\n    _defineProperty(this, \"shader\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    _defineProperty(this, \"textureComp\", void 0);\n\n    _defineProperty(this, \"textureOld\", void 0);\n\n    _defineProperty(this, \"shaderMaterial\", void 0);\n\n    _defineProperty(this, \"compFsQuad\", void 0);\n\n    _defineProperty(this, \"copyFsQuad\", void 0);\n\n    this.shader = shader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.uniforms['damp'].value = damp;\n    this.textureComp = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.textureOld = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: NearestFilter,\n      format: RGBAFormat\n    });\n    this.shaderMaterial = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: this.shader.vertexShader,\n      fragmentShader: this.shader.fragmentShader\n    });\n    this.compFsQuad = new FullScreenQuad(this.shaderMaterial);\n    let material = new MeshBasicMaterial();\n    this.copyFsQuad = new FullScreenQuad(material);\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    this.uniforms['tOld'].value = this.textureOld.texture;\n    this.uniforms['tNew'].value = readBuffer.texture;\n    renderer.setRenderTarget(this.textureComp);\n    this.compFsQuad.render(renderer);\n    this.copyFsQuad.material.map = this.textureComp.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.copyFsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.copyFsQuad.render(renderer);\n    } // Swap buffers.\n\n\n    let temp = this.textureOld;\n    this.textureOld = this.textureComp;\n    this.textureComp = temp; // Now textureOld contains the latest image, ready for the next frame.\n  }\n\n  setSize(width, height) {\n    this.textureComp.setSize(width, height);\n    this.textureOld.setSize(width, height);\n  }\n\n}\n\nexport { AfterimagePass };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}