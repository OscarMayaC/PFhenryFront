{"ast":null,"code":"import Node from './Node.js';\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n    return this.outputNode.build(builder, output);\n  }\n}\nBypassNode.prototype.isBypassNode = true;\nexport default BypassNode;","map":{"version":3,"names":["Node","BypassNode","constructor","returnNode","callNode","outputNode","getNodeType","builder","generate","output","snippet","build","addFlowCode","prototype","isBypassNode"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/nodes/core/BypassNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n\n    return this.outputNode.build(builder, output);\n  }\n\n}\n\nBypassNode.prototype.isBypassNode = true;\n\nexport default BypassNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAE5B,MAAMC,UAAU,SAASD,IAAI,CAAC;EAC5BE,WAAWA,CAACC,UAAU,EAAEC,QAAQ,EAAE;IAChC,KAAK,EAAE;IACP,IAAI,CAACC,UAAU,GAAGF,UAAU;IAC5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;EAEAE,WAAWA,CAACC,OAAO,EAAE;IACnB,OAAO,IAAI,CAACF,UAAU,CAACC,WAAW,CAACC,OAAO,CAAC;EAC7C;EAEAC,QAAQA,CAACD,OAAO,EAAEE,MAAM,EAAE;IACxB,MAAMC,OAAO,GAAG,IAAI,CAACN,QAAQ,CAACO,KAAK,CAACJ,OAAO,EAAE,MAAM,CAAC;IAEpD,IAAIG,OAAO,KAAK,EAAE,EAAE;MAClBH,OAAO,CAACK,WAAW,CAACF,OAAO,CAAC;IAC9B;IAEA,OAAO,IAAI,CAACL,UAAU,CAACM,KAAK,CAACJ,OAAO,EAAEE,MAAM,CAAC;EAC/C;AAEF;AAEAR,UAAU,CAACY,SAAS,CAACC,YAAY,GAAG,IAAI;AAExC,eAAeb,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}