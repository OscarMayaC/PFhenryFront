{"ast":null,"code":"import { Loader } from 'three';\nimport { GLTFLoader } from './GLTFLoader.js';\n\n//\n// VRM is based on glTF 2.0 and VRM extension is defined\n// in top-level json.extensions.VRM\n\nclass VRMLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.gltfLoader = new GLTFLoader(manager);\n  }\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    this.gltfLoader.load(url, function (gltf) {\n      try {\n        scope.parse(gltf, onLoad);\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n  setDRACOLoader(dracoLoader) {\n    this.gltfLoader.setDRACOLoader(dracoLoader);\n    return this;\n  }\n  parse(gltf, onLoad) {\n    // const gltfParser = gltf.parser;\n    // const gltfExtensions = gltf.userData.gltfExtensions || {};\n    // const vrmExtension = gltfExtensions.VRM || {};\n    // handle VRM Extension here\n    onLoad(gltf);\n  }\n}\nexport { VRMLoader };","map":{"version":3,"names":["Loader","GLTFLoader","VRMLoader","constructor","manager","gltfLoader","load","url","onLoad","onProgress","onError","scope","gltf","parse","e","console","error","itemError","setDRACOLoader","dracoLoader"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/loaders/VRMLoader.js"],"sourcesContent":["import { Loader } from 'three';\nimport { GLTFLoader } from './GLTFLoader.js';\n\n//\n// VRM is based on glTF 2.0 and VRM extension is defined\n// in top-level json.extensions.VRM\n\nclass VRMLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.gltfLoader = new GLTFLoader(manager);\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    this.gltfLoader.load(url, function (gltf) {\n      try {\n        scope.parse(gltf, onLoad);\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  setDRACOLoader(dracoLoader) {\n    this.gltfLoader.setDRACOLoader(dracoLoader);\n    return this;\n  }\n\n  parse(gltf, onLoad) {\n    // const gltfParser = gltf.parser;\n    // const gltfExtensions = gltf.userData.gltfExtensions || {};\n    // const vrmExtension = gltfExtensions.VRM || {};\n    // handle VRM Extension here\n    onLoad(gltf);\n  }\n\n}\n\nexport { VRMLoader };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,UAAU,QAAQ,iBAAiB;;AAE5C;AACA;AACA;;AAEA,MAAMC,SAAS,SAASF,MAAM,CAAC;EAC7BG,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,IAAIJ,UAAU,CAACG,OAAO,CAAC;EAC3C;EAEAE,IAAIA,CAACC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;IACrC,MAAMC,KAAK,GAAG,IAAI;IAClB,IAAI,CAACN,UAAU,CAACC,IAAI,CAACC,GAAG,EAAE,UAAUK,IAAI,EAAE;MACxC,IAAI;QACFD,KAAK,CAACE,KAAK,CAACD,IAAI,EAAEJ,MAAM,CAAC;MAC3B,CAAC,CAAC,OAAOM,CAAC,EAAE;QACV,IAAIJ,OAAO,EAAE;UACXA,OAAO,CAACI,CAAC,CAAC;QACZ,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAClB;QAEAH,KAAK,CAACP,OAAO,CAACa,SAAS,CAACV,GAAG,CAAC;MAC9B;IACF,CAAC,EAAEE,UAAU,EAAEC,OAAO,CAAC;EACzB;EAEAQ,cAAcA,CAACC,WAAW,EAAE;IAC1B,IAAI,CAACd,UAAU,CAACa,cAAc,CAACC,WAAW,CAAC;IAC3C,OAAO,IAAI;EACb;EAEAN,KAAKA,CAACD,IAAI,EAAEJ,MAAM,EAAE;IAClB;IACA;IACA;IACA;IACAA,MAAM,CAACI,IAAI,CAAC;EACd;AAEF;AAEA,SAASV,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}