{"ast":null,"code":"import { ShaderLib, Mesh, BoxGeometry, ShaderMaterial, UniformsUtils, BackSide, Scene, PerspectiveCamera } from 'three';\nimport { Pass } from './Pass.js';\nvar CubeTexturePass = function (camera, envMap, opacity) {\n  this.camera = camera;\n  this.needsSwap = false;\n  this.cubeShader = ShaderLib['cube'];\n  this.cubeMesh = new Mesh(new BoxGeometry(10, 10, 10), new ShaderMaterial({\n    uniforms: UniformsUtils.clone(this.cubeShader.uniforms),\n    vertexShader: this.cubeShader.vertexShader,\n    fragmentShader: this.cubeShader.fragmentShader,\n    depthTest: false,\n    depthWrite: false,\n    side: BackSide\n  }));\n  Object.defineProperty(this.cubeMesh.material, 'envMap', {\n    get: function () {\n      return this.uniforms.envMap.value;\n    }\n  });\n  this.envMap = envMap;\n  this.opacity = opacity !== undefined ? opacity : 1.0;\n  this.cubeScene = new Scene();\n  this.cubeCamera = new PerspectiveCamera();\n  this.cubeScene.add(this.cubeMesh);\n};\nCubeTexturePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: CubeTexturePass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);\n    this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);\n    this.cubeMesh.material.uniforms.envMap.value = this.envMap;\n    this.cubeMesh.material.uniforms.flipEnvMap.value = this.envMap.isCubeTexture && this.envMap._needsFlipEnvMap ? -1 : 1;\n    this.cubeMesh.material.uniforms.opacity.value = this.opacity;\n    this.cubeMesh.material.transparent = this.opacity < 1.0;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.cubeScene, this.cubeCamera);\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { CubeTexturePass };","map":{"version":3,"names":["ShaderLib","Mesh","BoxGeometry","ShaderMaterial","UniformsUtils","BackSide","Scene","PerspectiveCamera","Pass","CubeTexturePass","camera","envMap","opacity","needsSwap","cubeShader","cubeMesh","uniforms","clone","vertexShader","fragmentShader","depthTest","depthWrite","side","Object","defineProperty","material","get","value","undefined","cubeScene","cubeCamera","add","prototype","assign","create","constructor","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","projectionMatrix","copy","quaternion","setFromRotationMatrix","matrixWorld","flipEnvMap","isCubeTexture","_needsFlipEnvMap","transparent","setRenderTarget","renderToScreen","clear"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/postprocessing/CubeTexturePass.js"],"sourcesContent":["import { ShaderLib, Mesh, BoxGeometry, ShaderMaterial, UniformsUtils, BackSide, Scene, PerspectiveCamera } from 'three';\nimport { Pass } from './Pass.js';\n\nvar CubeTexturePass = function (camera, envMap, opacity) {\n  this.camera = camera;\n  this.needsSwap = false;\n  this.cubeShader = ShaderLib['cube'];\n  this.cubeMesh = new Mesh(new BoxGeometry(10, 10, 10), new ShaderMaterial({\n    uniforms: UniformsUtils.clone(this.cubeShader.uniforms),\n    vertexShader: this.cubeShader.vertexShader,\n    fragmentShader: this.cubeShader.fragmentShader,\n    depthTest: false,\n    depthWrite: false,\n    side: BackSide\n  }));\n  Object.defineProperty(this.cubeMesh.material, 'envMap', {\n    get: function () {\n      return this.uniforms.envMap.value;\n    }\n  });\n  this.envMap = envMap;\n  this.opacity = opacity !== undefined ? opacity : 1.0;\n  this.cubeScene = new Scene();\n  this.cubeCamera = new PerspectiveCamera();\n  this.cubeScene.add(this.cubeMesh);\n};\n\nCubeTexturePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: CubeTexturePass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);\n    this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);\n    this.cubeMesh.material.uniforms.envMap.value = this.envMap;\n    this.cubeMesh.material.uniforms.flipEnvMap.value = this.envMap.isCubeTexture && this.envMap._needsFlipEnvMap ? -1 : 1;\n    this.cubeMesh.material.uniforms.opacity.value = this.opacity;\n    this.cubeMesh.material.transparent = this.opacity < 1.0;\n    renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.cubeScene, this.cubeCamera);\n    renderer.autoClear = oldAutoClear;\n  }\n});\n\nexport { CubeTexturePass };\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,WAAW,EAAEC,cAAc,EAAEC,aAAa,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,iBAAiB,QAAQ,OAAO;AACvH,SAASC,IAAI,QAAQ,WAAW;AAEhC,IAAIC,eAAe,GAAG,SAAAA,CAAUC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACvD,IAAI,CAACF,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACG,SAAS,GAAG,KAAK;EACtB,IAAI,CAACC,UAAU,GAAGd,SAAS,CAAC,MAAM,CAAC;EACnC,IAAI,CAACe,QAAQ,GAAG,IAAId,IAAI,CAAC,IAAIC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAIC,cAAc,CAAC;IACvEa,QAAQ,EAAEZ,aAAa,CAACa,KAAK,CAAC,IAAI,CAACH,UAAU,CAACE,QAAQ,CAAC;IACvDE,YAAY,EAAE,IAAI,CAACJ,UAAU,CAACI,YAAY;IAC1CC,cAAc,EAAE,IAAI,CAACL,UAAU,CAACK,cAAc;IAC9CC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE,KAAK;IACjBC,IAAI,EAAEjB;EACR,CAAC,CAAC,CAAC;EACHkB,MAAM,CAACC,cAAc,CAAC,IAAI,CAACT,QAAQ,CAACU,QAAQ,EAAE,QAAQ,EAAE;IACtDC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,OAAO,IAAI,CAACV,QAAQ,CAACL,MAAM,CAACgB,KAAK;IACnC;EACF,CAAC,CAAC;EACF,IAAI,CAAChB,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,OAAO,GAAGA,OAAO,KAAKgB,SAAS,GAAGhB,OAAO,GAAG,GAAG;EACpD,IAAI,CAACiB,SAAS,GAAG,IAAIvB,KAAK,EAAE;EAC5B,IAAI,CAACwB,UAAU,GAAG,IAAIvB,iBAAiB,EAAE;EACzC,IAAI,CAACsB,SAAS,CAACE,GAAG,CAAC,IAAI,CAAChB,QAAQ,CAAC;AACnC,CAAC;AAEDN,eAAe,CAACuB,SAAS,GAAGT,MAAM,CAACU,MAAM,CAACV,MAAM,CAACW,MAAM,CAAC1B,IAAI,CAACwB,SAAS,CAAC,EAAE;EACvEG,WAAW,EAAE1B,eAAe;EAC5B2B,MAAM,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,WAAW,EAAEC;EACzC,6BACE;IACA,IAAIC,YAAY,GAAGH,QAAQ,CAACI,SAAS;IACrCJ,QAAQ,CAACI,SAAS,GAAG,KAAK;IAC1B,IAAI,CAACX,UAAU,CAACY,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAACjC,MAAM,CAACgC,gBAAgB,CAAC;IACnE,IAAI,CAACZ,UAAU,CAACc,UAAU,CAACC,qBAAqB,CAAC,IAAI,CAACnC,MAAM,CAACoC,WAAW,CAAC;IACzE,IAAI,CAAC/B,QAAQ,CAACU,QAAQ,CAACT,QAAQ,CAACL,MAAM,CAACgB,KAAK,GAAG,IAAI,CAAChB,MAAM;IAC1D,IAAI,CAACI,QAAQ,CAACU,QAAQ,CAACT,QAAQ,CAAC+B,UAAU,CAACpB,KAAK,GAAG,IAAI,CAAChB,MAAM,CAACqC,aAAa,IAAI,IAAI,CAACrC,MAAM,CAACsC,gBAAgB,GAAG,CAAC,CAAC,GAAG,CAAC;IACrH,IAAI,CAAClC,QAAQ,CAACU,QAAQ,CAACT,QAAQ,CAACJ,OAAO,CAACe,KAAK,GAAG,IAAI,CAACf,OAAO;IAC5D,IAAI,CAACG,QAAQ,CAACU,QAAQ,CAACyB,WAAW,GAAG,IAAI,CAACtC,OAAO,GAAG,GAAG;IACvDyB,QAAQ,CAACc,eAAe,CAAC,IAAI,CAACC,cAAc,GAAG,IAAI,GAAGb,UAAU,CAAC;IACjE,IAAI,IAAI,CAACc,KAAK,EAAEhB,QAAQ,CAACgB,KAAK,EAAE;IAChChB,QAAQ,CAACD,MAAM,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACC,UAAU,CAAC;IAChDO,QAAQ,CAACI,SAAS,GAAGD,YAAY;EACnC;AACF,CAAC,CAAC;AAEF,SAAS/B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}