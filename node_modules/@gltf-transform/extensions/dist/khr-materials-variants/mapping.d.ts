import { ExtensionProperty, Material } from '@gltf-transform/core';
import { Variant } from './variant';
/**
 * # Mapping
 *
 * Maps {@link Variant}s to {@link Material}s. See {@link MaterialsVariants}.
 */
export declare class Mapping extends ExtensionProperty {
    readonly propertyType = "Mapping";
    readonly parentTypes: string[];
    readonly extensionName = "KHR_materials_variants";
    static EXTENSION_NAME: string;
    private material;
    private variants;
    copy(other: this, resolve?: <T extends import("@gltf-transform/core").Property>(t: T) => T): this;
    /** The {@link Material} designated for this {@link Primitive}, under the given variants. */
    getMaterial(): Material | null;
    /** The {@link Material} designated for this {@link Primitive}, under the given variants. */
    setMaterial(material: Material | null): this;
    /** Adds a {@link Variant} to this mapping. */
    addVariant(variant: Variant): this;
    /** Removes a {@link Variant} from this mapping. */
    removeVariant(variant: Variant): this;
    /** Lists {@link Variant}s in this mapping. */
    listVariants(): Variant[];
}
