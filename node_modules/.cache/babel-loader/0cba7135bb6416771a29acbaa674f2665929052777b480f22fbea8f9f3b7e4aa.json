{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nclass ShaderPass extends Pass {\n  constructor(shader) {\n    let textureID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'tDiffuse';\n    super();\n    _defineProperty(this, \"textureID\", void 0);\n    _defineProperty(this, \"uniforms\", void 0);\n    _defineProperty(this, \"material\", void 0);\n    _defineProperty(this, \"fsQuad\", void 0);\n    this.textureID = textureID;\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms;\n      this.material = shader;\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms);\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    this.fsQuad.material = this.material;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n}\nexport { ShaderPass };","map":{"version":3,"names":["_defineProperty","ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","ShaderPass","constructor","shader","textureID","arguments","length","undefined","uniforms","material","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","render","renderer","writeBuffer","readBuffer","value","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/postprocessing/ShaderPass.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n  constructor(shader, textureID = 'tDiffuse') {\n    super();\n\n    _defineProperty(this, \"textureID\", void 0);\n\n    _defineProperty(this, \"uniforms\", void 0);\n\n    _defineProperty(this, \"material\", void 0);\n\n    _defineProperty(this, \"fsQuad\", void 0);\n\n    this.textureID = textureID;\n\n    if (shader instanceof ShaderMaterial) {\n      this.uniforms = shader.uniforms;\n      this.material = shader;\n    } else {\n      this.uniforms = UniformsUtils.clone(shader.uniforms);\n      this.material = new ShaderMaterial({\n        defines: Object.assign({}, shader.defines),\n        uniforms: this.uniforms,\n        vertexShader: shader.vertexShader,\n        fragmentShader: shader.fragmentShader\n      });\n    }\n\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n\n  render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n\n    this.fsQuad.material = this.material;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      this.fsQuad.render(renderer);\n    }\n  }\n\n}\n\nexport { ShaderPass };\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,SAASC,cAAc,EAAEC,aAAa,QAAQ,OAAO;AACrD,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAEhD,MAAMC,UAAU,SAASF,IAAI,CAAC;EAC5BG,WAAWA,CAACC,MAAM,EAA0B;IAAA,IAAxBC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,UAAU;IACxC,KAAK,EAAE;IAEPT,eAAe,CAAC,IAAI,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAE1CA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAEzCA,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAEvC,IAAI,CAACQ,SAAS,GAAGA,SAAS;IAE1B,IAAID,MAAM,YAAYN,cAAc,EAAE;MACpC,IAAI,CAACW,QAAQ,GAAGL,MAAM,CAACK,QAAQ;MAC/B,IAAI,CAACC,QAAQ,GAAGN,MAAM;IACxB,CAAC,MAAM;MACL,IAAI,CAACK,QAAQ,GAAGV,aAAa,CAACY,KAAK,CAACP,MAAM,CAACK,QAAQ,CAAC;MACpD,IAAI,CAACC,QAAQ,GAAG,IAAIZ,cAAc,CAAC;QACjCc,OAAO,EAAEC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEV,MAAM,CAACQ,OAAO,CAAC;QAC1CH,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBM,YAAY,EAAEX,MAAM,CAACW,YAAY;QACjCC,cAAc,EAAEZ,MAAM,CAACY;MACzB,CAAC,CAAC;IACJ;IAEA,IAAI,CAACC,MAAM,GAAG,IAAIhB,cAAc,CAAC,IAAI,CAACS,QAAQ,CAAC;EACjD;EAEAQ,MAAMA,CAACC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAE;IACxC,IAAI,IAAI,CAACZ,QAAQ,CAAC,IAAI,CAACJ,SAAS,CAAC,EAAE;MACjC,IAAI,CAACI,QAAQ,CAAC,IAAI,CAACJ,SAAS,CAAC,CAACiB,KAAK,GAAGD,UAAU,CAACE,OAAO;IAC1D;IAEA,IAAI,CAACN,MAAM,CAACP,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAEpC,IAAI,IAAI,CAACc,cAAc,EAAE;MACvBL,QAAQ,CAACM,eAAe,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACR,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLA,QAAQ,CAACM,eAAe,CAACL,WAAW,CAAC,CAAC,CAAC;;MAEvC,IAAI,IAAI,CAACM,KAAK,EAAEP,QAAQ,CAACO,KAAK,CAACP,QAAQ,CAACQ,cAAc,EAAER,QAAQ,CAACS,cAAc,EAAET,QAAQ,CAACU,gBAAgB,CAAC;MAC3G,IAAI,CAACZ,MAAM,CAACC,MAAM,CAACC,QAAQ,CAAC;IAC9B;EACF;AAEF;AAEA,SAASjB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}