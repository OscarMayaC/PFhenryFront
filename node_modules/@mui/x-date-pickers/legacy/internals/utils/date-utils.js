export var findClosestEnabledDate = function findClosestEnabledDate(_ref) {
  var date = _ref.date,
    disableFuture = _ref.disableFuture,
    disablePast = _ref.disablePast,
    maxDate = _ref.maxDate,
    minDate = _ref.minDate,
    isDateDisabled = _ref.isDateDisabled,
    utils = _ref.utils;
  var today = utils.startOfDay(utils.date());
  if (disablePast && utils.isBefore(minDate, today)) {
    minDate = today;
  }
  if (disableFuture && utils.isAfter(maxDate, today)) {
    maxDate = today;
  }
  var forward = date;
  var backward = date;
  if (utils.isBefore(date, minDate)) {
    forward = minDate;
    backward = null;
  }
  if (utils.isAfter(date, maxDate)) {
    if (backward) {
      backward = maxDate;
    }
    forward = null;
  }
  while (forward || backward) {
    if (forward && utils.isAfter(forward, maxDate)) {
      forward = null;
    }
    if (backward && utils.isBefore(backward, minDate)) {
      backward = null;
    }
    if (forward) {
      if (!isDateDisabled(forward)) {
        return forward;
      }
      forward = utils.addDays(forward, 1);
    }
    if (backward) {
      if (!isDateDisabled(backward)) {
        return backward;
      }
      backward = utils.addDays(backward, -1);
    }
  }
  return null;
};
export var clamp = function clamp(utils, value, minDate, maxDate) {
  if (utils.isBefore(value, minDate)) {
    return minDate;
  }
  if (utils.isAfter(value, maxDate)) {
    return maxDate;
  }
  return value;
};
export var replaceInvalidDateByNull = function replaceInvalidDateByNull(utils, value) {
  return value == null || !utils.isValid(value) ? null : value;
};
export var applyDefaultDate = function applyDefaultDate(utils, value, defaultValue) {
  if (value == null || !utils.isValid(value)) {
    return defaultValue;
  }
  return value;
};
export var areDatesEqual = function areDatesEqual(utils, a, b) {
  if (!utils.isValid(a) && a != null && !utils.isValid(b) && b != null) {
    return true;
  }
  return utils.isEqual(a, b);
};