{"ast":null,"code":"import * as React from 'react';\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\nfunction Backdrop(_ref) {\n  let {\n    children,\n    floor = 0.25,\n    segments = 20,\n    receiveShadow,\n    ...props\n  } = _ref;\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\nexport { Backdrop };","map":{"version":3,"names":["React","easeInExpo","x","Math","pow","Backdrop","_ref","children","floor","segments","receiveShadow","props","ref","useRef","useLayoutEffect","i","offset","position","current","attributes","y","setXYZ","needsUpdate","computeVertexNormals","createElement","rotation","PI","args"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/@react-three/drei/core/Backdrop.js"],"sourcesContent":["import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\n\nfunction Backdrop({\n  children,\n  floor = 0.25,\n  segments = 20,\n  receiveShadow,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,MAAMC,UAAU,GAAGC,CAAC,IAAIA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAGF,CAAC,GAAG,EAAE,CAAC;AAE9D,SAASG,QAAQA,CAAAC,IAAA,EAMd;EAAA,IANe;IAChBC,QAAQ;IACRC,KAAK,GAAG,IAAI;IACZC,QAAQ,GAAG,EAAE;IACbC,aAAa;IACb,GAAGC;EACL,CAAC,GAAAL,IAAA;EACC,MAAMM,GAAG,GAAGZ,KAAK,CAACa,MAAM,CAAC,IAAI,CAAC;EAC9Bb,KAAK,CAACc,eAAe,CAAC,MAAM;IAC1B,IAAIC,CAAC,GAAG,CAAC;IACT,MAAMC,MAAM,GAAGP,QAAQ,GAAGA,QAAQ,GAAG,CAAC;IACtC,MAAMQ,QAAQ,GAAGL,GAAG,CAACM,OAAO,CAACC,UAAU,CAACF,QAAQ;IAEhD,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,QAAQ,GAAG,CAAC,EAAEP,CAAC,EAAE,EAAE;MACrC,KAAK,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,QAAQ,GAAG,CAAC,EAAEW,CAAC,EAAE,EAAE;QACrCH,QAAQ,CAACI,MAAM,CAACN,CAAC,EAAE,EAAEb,CAAC,GAAGO,QAAQ,GAAGO,MAAM,IAAId,CAAC,KAAK,CAAC,GAAG,CAACM,KAAK,GAAG,CAAC,CAAC,EAAEY,CAAC,GAAGX,QAAQ,GAAGO,MAAM,EAAEf,UAAU,CAACC,CAAC,GAAGO,QAAQ,CAAC,CAAC;MACvH;IACF;IAEAQ,QAAQ,CAACK,WAAW,GAAG,IAAI;IAC3BV,GAAG,CAACM,OAAO,CAACK,oBAAoB,EAAE;EACpC,CAAC,EAAE,CAACd,QAAQ,EAAED,KAAK,CAAC,CAAC;EACrB,OAAO,aAAaR,KAAK,CAACwB,aAAa,CAAC,OAAO,EAAEb,KAAK,EAAE,aAAaX,KAAK,CAACwB,aAAa,CAAC,MAAM,EAAE;IAC/Fd,aAAa,EAAEA,aAAa;IAC5Be,QAAQ,EAAE,CAAC,CAACtB,IAAI,CAACuB,EAAE,GAAG,CAAC,EAAE,CAAC,EAAEvB,IAAI,CAACuB,EAAE,GAAG,CAAC;EACzC,CAAC,EAAE,aAAa1B,KAAK,CAACwB,aAAa,CAAC,eAAe,EAAE;IACnDZ,GAAG,EAAEA,GAAG;IACRe,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAElB,QAAQ,EAAEA,QAAQ;EACjC,CAAC,CAAC,EAAEF,QAAQ,CAAC,CAAC;AAChB;AAEA,SAASF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}