{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nclass NormalNode extends Node {\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NormalNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n    return outputNode.build(builder);\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n_defineProperty(NormalNode, \"WORLD\", 'world');\n_defineProperty(NormalNode, \"VIEW\", 'view');\nexport default NormalNode;","map":{"version":3,"names":["_defineProperty","Node","AttributeNode","VaryNode","ModelNode","CameraNode","OperatorNode","MathNode","NormalNode","constructor","scope","arguments","length","undefined","LOCAL","getHash","generate","builder","outputNode","GEOMETRY","VIEW","vertexNormalNode","NORMAL_MATRIX","NORMALIZE","WORLD","TRANSFORM_DIRECTION","VIEW_MATRIX","build","serialize","data","deserialize"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/nodes/accessors/NormalNode.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryNode from '../core/VaryNode.js';\nimport ModelNode from './ModelNode.js';\nimport CameraNode from './CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\n\nclass NormalNode extends Node {\n  constructor(scope = NormalNode.LOCAL) {\n    super('vec3');\n    this.scope = scope;\n  }\n\n  getHash() {\n    return `normal-${this.scope}`;\n  }\n\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n\n    if (scope === NormalNode.GEOMETRY) {\n      outputNode = new AttributeNode('normal', 'vec3');\n    } else if (scope === NormalNode.LOCAL) {\n      outputNode = new VaryNode(new NormalNode(NormalNode.GEOMETRY));\n    } else if (scope === NormalNode.VIEW) {\n      const vertexNormalNode = new OperatorNode('*', new ModelNode(ModelNode.NORMAL_MATRIX), new NormalNode(NormalNode.LOCAL));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    } else if (scope === NormalNode.WORLD) {\n      // To use INVERSE_TRANSFORM_DIRECTION only inverse the param order like this: MathNode( ..., Vector, Matrix );\n      const vertexNormalNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new NormalNode(NormalNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryNode(vertexNormalNode));\n    }\n\n    return outputNode.build(builder);\n  }\n\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n\n}\n\n_defineProperty(NormalNode, \"GEOMETRY\", 'geometry');\n\n_defineProperty(NormalNode, \"LOCAL\", 'local');\n\n_defineProperty(NormalNode, \"WORLD\", 'world');\n\n_defineProperty(NormalNode, \"VIEW\", 'view');\n\nexport default NormalNode;\n"],"mappings":"AAAA,OAAOA,eAAe,MAAM,2CAA2C;AACvE,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAE1C,MAAMC,UAAU,SAASP,IAAI,CAAC;EAC5BQ,WAAWA,CAAA,EAA2B;IAAA,IAA1BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGH,UAAU,CAACM,KAAK;IAClC,KAAK,CAAC,MAAM,CAAC;IACb,IAAI,CAACJ,KAAK,GAAGA,KAAK;EACpB;EAEAK,OAAOA,CAAA,EAAG;IACR,OAAQ,UAAS,IAAI,CAACL,KAAM,EAAC;EAC/B;EAEAM,QAAQA,CAACC,OAAO,EAAE;IAChB,MAAMP,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,IAAIQ,UAAU,GAAG,IAAI;IAErB,IAAIR,KAAK,KAAKF,UAAU,CAACW,QAAQ,EAAE;MACjCD,UAAU,GAAG,IAAIhB,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC;IAClD,CAAC,MAAM,IAAIQ,KAAK,KAAKF,UAAU,CAACM,KAAK,EAAE;MACrCI,UAAU,GAAG,IAAIf,QAAQ,CAAC,IAAIK,UAAU,CAACA,UAAU,CAACW,QAAQ,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIT,KAAK,KAAKF,UAAU,CAACY,IAAI,EAAE;MACpC,MAAMC,gBAAgB,GAAG,IAAIf,YAAY,CAAC,GAAG,EAAE,IAAIF,SAAS,CAACA,SAAS,CAACkB,aAAa,CAAC,EAAE,IAAId,UAAU,CAACA,UAAU,CAACM,KAAK,CAAC,CAAC;MACxHI,UAAU,GAAG,IAAIX,QAAQ,CAACA,QAAQ,CAACgB,SAAS,EAAE,IAAIpB,QAAQ,CAACkB,gBAAgB,CAAC,CAAC;IAC/E,CAAC,MAAM,IAAIX,KAAK,KAAKF,UAAU,CAACgB,KAAK,EAAE;MACrC;MACA,MAAMH,gBAAgB,GAAG,IAAId,QAAQ,CAACA,QAAQ,CAACkB,mBAAmB,EAAE,IAAIjB,UAAU,CAACA,UAAU,CAACY,IAAI,CAAC,EAAE,IAAIf,UAAU,CAACA,UAAU,CAACqB,WAAW,CAAC,CAAC;MAC5IR,UAAU,GAAG,IAAIX,QAAQ,CAACA,QAAQ,CAACgB,SAAS,EAAE,IAAIpB,QAAQ,CAACkB,gBAAgB,CAAC,CAAC;IAC/E;IAEA,OAAOH,UAAU,CAACS,KAAK,CAACV,OAAO,CAAC;EAClC;EAEAW,SAASA,CAACC,IAAI,EAAE;IACd,KAAK,CAACD,SAAS,CAACC,IAAI,CAAC;IACrBA,IAAI,CAACnB,KAAK,GAAG,IAAI,CAACA,KAAK;EACzB;EAEAoB,WAAWA,CAACD,IAAI,EAAE;IAChB,KAAK,CAACC,WAAW,CAACD,IAAI,CAAC;IACvB,IAAI,CAACnB,KAAK,GAAGmB,IAAI,CAACnB,KAAK;EACzB;AAEF;AAEAV,eAAe,CAACQ,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;AAEnDR,eAAe,CAACQ,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;AAE7CR,eAAe,CAACQ,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;AAE7CR,eAAe,CAACQ,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC;AAE3C,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}