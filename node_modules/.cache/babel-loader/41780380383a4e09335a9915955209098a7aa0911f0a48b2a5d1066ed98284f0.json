{"ast":null,"code":"import { PerspectiveCamera, Vector3, Quaternion } from 'three';\n\n/**\n * peppers ghost effect based on http://www.instructables.com/id/Reflective-Prism/?ALLSTEPS\n */\n\nconst PeppersGhostEffect = function (renderer) {\n  const scope = this;\n  scope.cameraDistance = 15;\n  scope.reflectFromAbove = false; // Internals\n\n  let _halfWidth, _width, _height;\n  const _cameraF = new PerspectiveCamera(); //front\n\n  const _cameraB = new PerspectiveCamera(); //back\n\n  const _cameraL = new PerspectiveCamera(); //left\n\n  const _cameraR = new PerspectiveCamera(); //right\n\n  const _position = new Vector3();\n  const _quaternion = new Quaternion();\n  const _scale = new Vector3(); // Initialization\n\n  renderer.autoClear = false;\n  this.setSize = (width, height) => {\n    _halfWidth = width / 2;\n    if (width < height) {\n      _width = width / 3;\n      _height = width / 3;\n    } else {\n      _width = height / 3;\n      _height = height / 3;\n    }\n    renderer.setSize(width, height);\n  };\n  this.render = (scene, camera) => {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorld.decompose(_position, _quaternion, _scale); // front\n\n    _cameraF.position.copy(_position);\n    _cameraF.quaternion.copy(_quaternion);\n    _cameraF.translateZ(scope.cameraDistance);\n    _cameraF.lookAt(scene.position); // back\n\n    _cameraB.position.copy(_position);\n    _cameraB.quaternion.copy(_quaternion);\n    _cameraB.translateZ(-scope.cameraDistance);\n    _cameraB.lookAt(scene.position);\n    _cameraB.rotation.z += 180 * (Math.PI / 180); // left\n\n    _cameraL.position.copy(_position);\n    _cameraL.quaternion.copy(_quaternion);\n    _cameraL.translateX(-scope.cameraDistance);\n    _cameraL.lookAt(scene.position);\n    _cameraL.rotation.x += 90 * (Math.PI / 180); // right\n\n    _cameraR.position.copy(_position);\n    _cameraR.quaternion.copy(_quaternion);\n    _cameraR.translateX(scope.cameraDistance);\n    _cameraR.lookAt(scene.position);\n    _cameraR.rotation.x += 90 * (Math.PI / 180);\n    renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraB);\n    } else {\n      renderer.render(scene, _cameraF);\n    }\n    renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraF);\n    } else {\n      renderer.render(scene, _cameraB);\n    }\n    renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraR);\n    } else {\n      renderer.render(scene, _cameraL);\n    }\n    renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n    renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraL);\n    } else {\n      renderer.render(scene, _cameraR);\n    }\n    renderer.setScissorTest(false);\n  };\n};\nexport { PeppersGhostEffect };","map":{"version":3,"names":["PerspectiveCamera","Vector3","Quaternion","PeppersGhostEffect","renderer","scope","cameraDistance","reflectFromAbove","_halfWidth","_width","_height","_cameraF","_cameraB","_cameraL","_cameraR","_position","_quaternion","_scale","autoClear","setSize","width","height","render","scene","camera","updateMatrixWorld","parent","matrixWorld","decompose","position","copy","quaternion","translateZ","lookAt","rotation","z","Math","PI","translateX","x","clear","setScissorTest","setScissor","setViewport"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/node_modules/three-stdlib/effects/PeppersGhostEffect.js"],"sourcesContent":["import { PerspectiveCamera, Vector3, Quaternion } from 'three';\n\n/**\n * peppers ghost effect based on http://www.instructables.com/id/Reflective-Prism/?ALLSTEPS\n */\n\nconst PeppersGhostEffect = function (renderer) {\n  const scope = this;\n  scope.cameraDistance = 15;\n  scope.reflectFromAbove = false; // Internals\n\n  let _halfWidth, _width, _height;\n\n  const _cameraF = new PerspectiveCamera(); //front\n\n\n  const _cameraB = new PerspectiveCamera(); //back\n\n\n  const _cameraL = new PerspectiveCamera(); //left\n\n\n  const _cameraR = new PerspectiveCamera(); //right\n\n\n  const _position = new Vector3();\n\n  const _quaternion = new Quaternion();\n\n  const _scale = new Vector3(); // Initialization\n\n\n  renderer.autoClear = false;\n\n  this.setSize = (width, height) => {\n    _halfWidth = width / 2;\n\n    if (width < height) {\n      _width = width / 3;\n      _height = width / 3;\n    } else {\n      _width = height / 3;\n      _height = height / 3;\n    }\n\n    renderer.setSize(width, height);\n  };\n\n  this.render = (scene, camera) => {\n    scene.updateMatrixWorld();\n    if (camera.parent === null) camera.updateMatrixWorld();\n    camera.matrixWorld.decompose(_position, _quaternion, _scale); // front\n\n    _cameraF.position.copy(_position);\n\n    _cameraF.quaternion.copy(_quaternion);\n\n    _cameraF.translateZ(scope.cameraDistance);\n\n    _cameraF.lookAt(scene.position); // back\n\n\n    _cameraB.position.copy(_position);\n\n    _cameraB.quaternion.copy(_quaternion);\n\n    _cameraB.translateZ(-scope.cameraDistance);\n\n    _cameraB.lookAt(scene.position);\n\n    _cameraB.rotation.z += 180 * (Math.PI / 180); // left\n\n    _cameraL.position.copy(_position);\n\n    _cameraL.quaternion.copy(_quaternion);\n\n    _cameraL.translateX(-scope.cameraDistance);\n\n    _cameraL.lookAt(scene.position);\n\n    _cameraL.rotation.x += 90 * (Math.PI / 180); // right\n\n    _cameraR.position.copy(_position);\n\n    _cameraR.quaternion.copy(_quaternion);\n\n    _cameraR.translateX(scope.cameraDistance);\n\n    _cameraR.lookAt(scene.position);\n\n    _cameraR.rotation.x += 90 * (Math.PI / 180);\n    renderer.clear();\n    renderer.setScissorTest(true);\n    renderer.setScissor(_halfWidth - _width / 2, _height * 2, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, _height * 2, _width, _height);\n\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraB);\n    } else {\n      renderer.render(scene, _cameraF);\n    }\n\n    renderer.setScissor(_halfWidth - _width / 2, 0, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2, 0, _width, _height);\n\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraF);\n    } else {\n      renderer.render(scene, _cameraB);\n    }\n\n    renderer.setScissor(_halfWidth - _width / 2 - _width, _height, _width, _height);\n    renderer.setViewport(_halfWidth - _width / 2 - _width, _height, _width, _height);\n\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraR);\n    } else {\n      renderer.render(scene, _cameraL);\n    }\n\n    renderer.setScissor(_halfWidth + _width / 2, _height, _width, _height);\n    renderer.setViewport(_halfWidth + _width / 2, _height, _width, _height);\n\n    if (scope.reflectFromAbove) {\n      renderer.render(scene, _cameraL);\n    } else {\n      renderer.render(scene, _cameraR);\n    }\n\n    renderer.setScissorTest(false);\n  };\n};\n\nexport { PeppersGhostEffect };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}