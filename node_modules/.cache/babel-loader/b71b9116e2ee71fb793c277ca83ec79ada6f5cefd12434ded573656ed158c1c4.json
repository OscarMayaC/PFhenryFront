{"ast":null,"code":"import { DataTextureLoader, HalfFloatType, CubeTexture, RGBAFormat, LinearFilter, DataUtils } from 'three';\nclass RGBMLoader extends DataTextureLoader {\n  constructor(manager) {\n    super(manager);\n    this.type = HalfFloatType;\n    this.maxRange = 7; // more information about this property at https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html\n  }\n\n  setDataType(value) {\n    this.type = value;\n    return this;\n  }\n  setMaxRange(value) {\n    this.maxRange = value;\n    return this;\n  }\n  loadCubemap(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    let loaded = 0;\n    const scope = this;\n    function loadTexture(i) {\n      scope.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n    texture.type = this.type;\n    texture.format = RGBAFormat;\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n  parse(buffer) {\n    const img = UPNG.decode(buffer);\n    const rgba = UPNG.toRGBA8(img)[0];\n    const data = new Uint8Array(rgba);\n    const size = img.width * img.height * 4;\n    const output = this.type === HalfFloatType ? new Uint16Array(size) : new Float32Array(size); // decode RGBM\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i + 0] / 255;\n      const g = data[i + 1] / 255;\n      const b = data[i + 2] / 255;\n      const a = data[i + 3] / 255;\n      if (this.type === HalfFloatType) {\n        output[i + 0] = DataUtils.toHalfFloat(Math.min(r * a * this.maxRange, 65504));\n        output[i + 1] = DataUtils.toHalfFloat(Math.min(g * a * this.maxRange, 65504));\n        output[i + 2] = DataUtils.toHalfFloat(Math.min(b * a * this.maxRange, 65504));\n        output[i + 3] = DataUtils.toHalfFloat(1);\n      } else {\n        output[i + 0] = r * a * this.maxRange;\n        output[i + 1] = g * a * this.maxRange;\n        output[i + 2] = b * a * this.maxRange;\n        output[i + 3] = 1;\n      }\n    }\n    return {\n      width: img.width,\n      height: img.height,\n      data: output,\n      format: RGBAFormat,\n      type: this.type,\n      flipY: true\n    };\n  }\n} // from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n    h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n    img = new Uint8Array(len),\n    empty = new Uint8Array(len),\n    prev = new Uint8Array(len);\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n      fy = frm.rect.y,\n      fw = frm.rect.width,\n      fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (var j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) img[j] = prev[j];\n  }\n  return frms;\n};\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n    bpp = UPNG.decode._getBPP(out);\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n    bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n    depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n    if (depth == 8) {\n      for (var i = 0; i < qarea; i += 4) {\n        bf[i] = data[i];\n        bf[i + 1] = data[i + 1];\n        bf[i + 2] = data[i + 2];\n        bf[i + 3] = data[i + 3];\n      }\n    }\n    if (depth == 16) {\n      for (var i = 0; i < qarea; i++) {\n        bf[i] = data[i << 1];\n      }\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs['tRNS'];\n    if (ts == null) {\n      if (depth == 8) {\n        for (var i = 0; i < area; i++) {\n          var ti = i * 3;\n          bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        }\n      }\n      if (depth == 16) {\n        for (var i = 0; i < area; i++) {\n          var ti = i * 6;\n          bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        }\n      }\n    } else {\n      var tr = ts[0],\n        tg = ts[1],\n        tb = ts[2];\n      if (depth == 8) {\n        for (var i = 0; i < area; i++) {\n          var qi = i << 2,\n            ti = i * 3;\n          bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n          if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n        }\n      }\n      if (depth == 16) {\n        for (var i = 0; i < area; i++) {\n          var qi = i << 2,\n            ti = i * 6;\n          bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n          if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n        }\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs['PLTE'],\n      ap = out.tabs['tRNS'],\n      tl = ap ? ap.length : 0; //console.log(p, ap);\n\n    if (depth == 1) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n          t0 = y * w;\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n            j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n            cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n    if (depth == 2) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n          t0 = y * w;\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n            j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n            cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n    if (depth == 4) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n          t0 = y * w;\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n            j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n            cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n    if (depth == 8) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          j = data[i],\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          di = i << 1,\n          gr = data[di];\n        bf[qi] = gr;\n        bf[qi + 1] = gr;\n        bf[qi + 2] = gr;\n        bf[qi + 3] = data[di + 1];\n      }\n    }\n    if (depth == 16) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n          di = i << 2,\n          gr = data[di];\n        bf[qi] = gr;\n        bf[qi + 1] = gr;\n        bf[qi + 2] = gr;\n        bf[qi + 3] = data[di + 2];\n      }\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n    for (var y = 0; y < h; y++) {\n      var off = y * bpl,\n        to = y * w;\n      if (depth == 1) {\n        for (var x = 0; x < w; x++) {\n          var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n            al = gr == tr * 255 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 2) {\n        for (var x = 0; x < w; x++) {\n          var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n            al = gr == tr * 85 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 4) {\n        for (var x = 0; x < w; x++) {\n          var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n            al = gr == tr * 17 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 8) {\n        for (var x = 0; x < w; x++) {\n          var gr = data[off + x],\n            al = gr == tr ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 16) {\n        for (var x = 0; x < w; x++) {\n          var gr = data[off + (x << 1)],\n            al = rs(data, off + (x << 1)) == tr ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      }\n    }\n  } //console.log(Date.now()-time);\n\n  return bf;\n};\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n    offset = 8,\n    bin = UPNG._bin,\n    rUs = bin.readUshort,\n    rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n    doff = 0; // put all IDAT data into it\n\n  var fd,\n    foff = 0; // frames\n\n  var text, keyw, bfr;\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n  for (var i = 0; i < 8; i++) if (data[i] != mgck[i]) throw new Error('The input is not a PNG file!');\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4; //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (var i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      }; //console.log(frm);\n\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (var i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n      for (var i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      keyw = bin.readASCII(data, offset, nz - offset);\n      var tl = offset + len - nz - 1;\n      if (type == 'tEXt') {\n        text = bin.readASCII(data, nz + 1, tl);\n      } else {\n        bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n        off = offset;\n      nz = bin.nextZero(data, off);\n      keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var tl = len - (off - offset);\n      if (cflag == 0) {\n        text = bin.readUTF8(data, off, tl);\n      } else {\n        bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n      for (var i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') {\n      out.tabs[type] = bin.readUint(data, offset) / 100000;\n    } else if (type == 'sRGB') {\n      out.tabs[type] = data[offset];\n    } else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) {\n        out.tabs[type] = [rUs(data, offset)];\n      } else if (out.ctype == 2 || out.ctype == 6) {\n        out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];\n      } else if (out.ctype == 3) {\n        out.tabs[type] = data[offset];\n      }\n    } else if (type == 'IEND') {\n      break;\n    } //else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n  }\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n      i = 0,\n      m = 0,\n      J = 0,\n      h = 0,\n      Q = 0,\n      X = 0,\n      u = 0,\n      w = 0,\n      d = 0,\n      v,\n      C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n      n = V.b,\n      A = V.e,\n      l = V.R,\n      M = V.n,\n      I = V.A,\n      e = V.Z,\n      b = V.m,\n      Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n          q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n      if (Z) W = H.H.W(W, w + (1 << 17));\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n        for (var c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n        for (var c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n            Y = b.c[s],\n            a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n          w = z;\n        }\n      }\n    }\n    return W.length == w ? W : W.slice(0, w);\n  };\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n      M = H.H.Z,\n      I = 0;\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n          m = 0;\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n        var J = I + m;\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n    return n;\n  };\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n      A = 0,\n      l = V.length >>> 1;\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n    return n;\n  };\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n      V = N.length,\n      n,\n      A,\n      l,\n      M,\n      I,\n      e = R.j;\n    for (var M = 0; M <= W; M++) e[M] = 0;\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n      n = H.H.m,\n      A = n.r;\n    for (var l = 0; l < V; l += 2) {\n      if (N[l + 1] != 0) {\n        var M = l >> 1,\n          I = N[l + 1],\n          e = M << 4 | I,\n          b = W - I,\n          Z = N[l] << b,\n          m = Z + (1 << b);\n        while (Z != m) {\n          var J = A[Z] >>> 15 - W;\n          R[J] = e;\n          Z++;\n        }\n      }\n    }\n  };\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n      V = 15 - W;\n    for (var n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n  H.H.m = function () {\n    var N = Uint16Array,\n      W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n  (function () {\n    var N = H.H.m,\n      W = 1 << 15;\n    for (var R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n    for (var R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n  return H.H.N;\n}();\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n    h = out.height;\n  var bpp = UPNG.decode._getBPP(out),\n    cbpp = bpp >> 3,\n    bpl = Math.ceil(w * bpp / 8);\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n  while (pass < 7) {\n    var ri = row_increment[pass],\n      ci = col_increment[pass];\n    var sw = 0,\n      sh = 0;\n    var cr = starting_row[pass];\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n    var cc = starting_col[pass];\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n    var bpll = Math.ceil(sw * bpp / 8);\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n    var y = 0,\n      row = starting_row[pass];\n    var val;\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n      while (col < w) {\n        if (bpp == 1) {\n          val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n        if (bpp == 2) {\n          val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n        if (bpp == 4) {\n          val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n          for (var j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n        cdi += bpp;\n        col += ci;\n      }\n      y++;\n      row += ri;\n    }\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n  return img;\n};\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    paeth = UPNG.decode._paeth;\n  bpp = Math.ceil(bpp / 8);\n  var i,\n    di,\n    type = data[off],\n    x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n  for (var y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) {\n      for (; x < bpl; x++) data[i + x] = data[di + x];\n    } else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n      }\n    }\n  }\n  return data;\n};\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n    pa = p - a,\n    pb = p - b,\n    pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = '',\n      ns;\n    for (var i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n    return ns;\n  }\n};\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n    h = Math.min(sh, th);\n  var si = 0,\n    ti = 0;\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      if (xoff >= 0 && yoff >= 0) {\n        si = y * sw + x << 2;\n        ti = (yoff + y) * tw + xoff + x << 2;\n      } else {\n        si = (-yoff + y) * sw - xoff + x << 2;\n        ti = y * tw + x << 2;\n      }\n      if (mode == 0) {\n        tb[ti] = sb[si];\n        tb[ti + 1] = sb[si + 1];\n        tb[ti + 2] = sb[si + 2];\n        tb[ti + 3] = sb[si + 3];\n      } else if (mode == 1) {\n        var fa = sb[si + 3] * (1 / 255),\n          fr = sb[si] * fa,\n          fg = sb[si + 1] * fa,\n          fb = sb[si + 2] * fa;\n        var ba = tb[ti + 3] * (1 / 255),\n          br = tb[ti] * ba,\n          bg = tb[ti + 1] * ba,\n          bb = tb[ti + 2] * ba;\n        var ifa = 1 - fa,\n          oa = fa + ba * ifa,\n          ioa = oa == 0 ? 0 : 1 / oa;\n        tb[ti + 3] = 255 * oa;\n        tb[ti + 0] = (fr + br * ifa) * ioa;\n        tb[ti + 1] = (fg + bg * ifa) * ioa;\n        tb[ti + 2] = (fb + bb * ifa) * ioa;\n      } else if (mode == 2) {\n        // copy only differences, otherwise zero\n        var fa = sb[si + 3],\n          fr = sb[si],\n          fg = sb[si + 1],\n          fb = sb[si + 2];\n        var ba = tb[ti + 3],\n          br = tb[ti],\n          bg = tb[ti + 1],\n          bb = tb[ti + 2];\n        if (fa == ba && fr == br && fg == bg && fb == bb) {\n          tb[ti] = 0;\n          tb[ti + 1] = 0;\n          tb[ti + 2] = 0;\n          tb[ti + 3] = 0;\n        } else {\n          tb[ti] = fr;\n          tb[ti + 1] = fg;\n          tb[ti + 2] = fb;\n          tb[ti + 3] = fa;\n        }\n      } else if (mode == 3) {\n        // check if can be blended\n        var fa = sb[si + 3],\n          fr = sb[si],\n          fg = sb[si + 1],\n          fb = sb[si + 2];\n        var ba = tb[ti + 3],\n          br = tb[ti],\n          bg = tb[ti + 1],\n          bb = tb[ti + 2];\n        if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\n\n        if (fa < 220 && ba > 20) return false;\n      }\n    }\n  }\n  return true;\n};\nexport { RGBMLoader };","map":{"version":3,"names":["DataTextureLoader","HalfFloatType","CubeTexture","RGBAFormat","LinearFilter","DataUtils","RGBMLoader","constructor","manager","type","maxRange","setDataType","value","setMaxRange","loadCubemap","urls","onLoad","onProgress","onError","texture","loaded","scope","loadTexture","i","load","image","images","needsUpdate","undefined","length","format","minFilter","generateMipmaps","parse","buffer","img","UPNG","decode","rgba","toRGBA8","data","Uint8Array","size","width","height","output","Uint16Array","Float32Array","r","g","b","a","toHalfFloat","Math","min","flipY","out","w","h","tabs","acTL","decodeImage","frms","frames","len","empty","prev","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","_getBPP","bpl","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","di","gr","off","to","al","buff","offset","bin","rUs","rUi","readUint","dd","doff","fd","foff","text","keyw","bfr","mgck","Error","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","_inflate","readUTF8","cflag","readBytes","pl","compress","interlace","filter","inflateRaw","_filterZero","_readInterlace","H","N","W","R","m","J","Q","X","u","d","v","C","V","n","A","e","l","M","I","Z","D","q","set","byteOffset","c","K","S","T","z","_","$","s","Y","t","k","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","row","val","col","cdi","ii","noc","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/node_modules/three-stdlib/loaders/RGBMLoader.js"],"sourcesContent":["import { DataTextureLoader, HalfFloatType, CubeTexture, RGBAFormat, LinearFilter, DataUtils } from 'three';\n\nclass RGBMLoader extends DataTextureLoader {\n  constructor(manager) {\n    super(manager);\n    this.type = HalfFloatType;\n    this.maxRange = 7; // more information about this property at https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html\n  }\n\n  setDataType(value) {\n    this.type = value;\n    return this;\n  }\n\n  setMaxRange(value) {\n    this.maxRange = value;\n    return this;\n  }\n\n  loadCubemap(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    let loaded = 0;\n    const scope = this;\n\n    function loadTexture(i) {\n      scope.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    texture.type = this.type;\n    texture.format = RGBAFormat;\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n\n  parse(buffer) {\n    const img = UPNG.decode(buffer);\n    const rgba = UPNG.toRGBA8(img)[0];\n    const data = new Uint8Array(rgba);\n    const size = img.width * img.height * 4;\n    const output = this.type === HalfFloatType ? new Uint16Array(size) : new Float32Array(size); // decode RGBM\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i + 0] / 255;\n      const g = data[i + 1] / 255;\n      const b = data[i + 2] / 255;\n      const a = data[i + 3] / 255;\n\n      if (this.type === HalfFloatType) {\n        output[i + 0] = DataUtils.toHalfFloat(Math.min(r * a * this.maxRange, 65504));\n        output[i + 1] = DataUtils.toHalfFloat(Math.min(g * a * this.maxRange, 65504));\n        output[i + 2] = DataUtils.toHalfFloat(Math.min(b * a * this.maxRange, 65504));\n        output[i + 3] = DataUtils.toHalfFloat(1);\n      } else {\n        output[i + 0] = r * a * this.maxRange;\n        output[i + 1] = g * a * this.maxRange;\n        output[i + 2] = b * a * this.maxRange;\n        output[i + 3] = 1;\n      }\n    }\n\n    return {\n      width: img.width,\n      height: img.height,\n      data: output,\n      format: RGBAFormat,\n      type: this.type,\n      flipY: true\n    };\n  }\n\n} // from https://github.com/photopea/UPNG.js (MIT License)\n\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n      h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n      img = new Uint8Array(len),\n      empty = new Uint8Array(len),\n      prev = new Uint8Array(len);\n\n  for (var i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n        fy = frm.rect.y,\n        fw = frm.rect.width,\n        fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (var j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (var j = 0; j < len; j++) img[j] = prev[j];\n  }\n\n  return frms;\n};\n\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n      bpp = UPNG.decode._getBPP(out);\n\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n      bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n      depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n\n    if (depth == 8) {\n      for (var i = 0; i < qarea; i += 4) {\n        bf[i] = data[i];\n        bf[i + 1] = data[i + 1];\n        bf[i + 2] = data[i + 2];\n        bf[i + 3] = data[i + 3];\n      }\n    }\n\n    if (depth == 16) {\n      for (var i = 0; i < qarea; i++) {\n        bf[i] = data[i << 1];\n      }\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs['tRNS'];\n\n    if (ts == null) {\n      if (depth == 8) {\n        for (var i = 0; i < area; i++) {\n          var ti = i * 3;\n          bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        }\n      }\n\n      if (depth == 16) {\n        for (var i = 0; i < area; i++) {\n          var ti = i * 6;\n          bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        }\n      }\n    } else {\n      var tr = ts[0],\n          tg = ts[1],\n          tb = ts[2];\n\n      if (depth == 8) {\n        for (var i = 0; i < area; i++) {\n          var qi = i << 2,\n              ti = i * 3;\n          bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n          if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n        }\n      }\n\n      if (depth == 16) {\n        for (var i = 0; i < area; i++) {\n          var qi = i << 2,\n              ti = i * 6;\n          bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n          if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n        }\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs['PLTE'],\n        ap = out.tabs['tRNS'],\n        tl = ap ? ap.length : 0; //console.log(p, ap);\n\n    if (depth == 1) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n            t0 = y * w;\n\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n              j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n              cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n\n    if (depth == 2) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n            t0 = y * w;\n\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n              j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n              cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n\n    if (depth == 4) {\n      for (var y = 0; y < h; y++) {\n        var s0 = y * bpl,\n            t0 = y * w;\n\n        for (var i = 0; i < w; i++) {\n          var qi = t0 + i << 2,\n              j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n              cj = 3 * j;\n          bf[qi] = p[cj];\n          bf[qi + 1] = p[cj + 1];\n          bf[qi + 2] = p[cj + 2];\n          bf[qi + 3] = j < tl ? ap[j] : 255;\n        }\n      }\n    }\n\n    if (depth == 8) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n            j = data[i],\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n            di = i << 1,\n            gr = data[di];\n        bf[qi] = gr;\n        bf[qi + 1] = gr;\n        bf[qi + 2] = gr;\n        bf[qi + 3] = data[di + 1];\n      }\n    }\n\n    if (depth == 16) {\n      for (var i = 0; i < area; i++) {\n        var qi = i << 2,\n            di = i << 2,\n            gr = data[di];\n        bf[qi] = gr;\n        bf[qi + 1] = gr;\n        bf[qi + 2] = gr;\n        bf[qi + 3] = data[di + 2];\n      }\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n\n    for (var y = 0; y < h; y++) {\n      var off = y * bpl,\n          to = y * w;\n\n      if (depth == 1) {\n        for (var x = 0; x < w; x++) {\n          var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n              al = gr == tr * 255 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 2) {\n        for (var x = 0; x < w; x++) {\n          var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n              al = gr == tr * 85 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 4) {\n        for (var x = 0; x < w; x++) {\n          var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n              al = gr == tr * 17 ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 8) {\n        for (var x = 0; x < w; x++) {\n          var gr = data[off + x],\n              al = gr == tr ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      } else if (depth == 16) {\n        for (var x = 0; x < w; x++) {\n          var gr = data[off + (x << 1)],\n              al = rs(data, off + (x << 1)) == tr ? 0 : 255;\n          bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n        }\n      }\n    }\n  } //console.log(Date.now()-time);\n\n\n  return bf;\n};\n\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n      offset = 8,\n      bin = UPNG._bin,\n      rUs = bin.readUshort,\n      rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n      doff = 0; // put all IDAT data into it\n\n  var fd,\n      foff = 0; // frames\n\n  var text, keyw, bfr;\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\n  for (var i = 0; i < 8; i++) if (data[i] != mgck[i]) throw new Error('The input is not a PNG file!');\n\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4; //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (var i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      }; //console.log(frm);\n\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (var i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n\n      for (var i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      keyw = bin.readASCII(data, offset, nz - offset);\n      var tl = offset + len - nz - 1;\n\n      if (type == 'tEXt') {\n        text = bin.readASCII(data, nz + 1, tl);\n      } else {\n        bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n          off = offset;\n      nz = bin.nextZero(data, off);\n      keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var tl = len - (off - offset);\n\n      if (cflag == 0) {\n        text = bin.readUTF8(data, off, tl);\n      } else {\n        bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n\n      for (var i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') {\n      out.tabs[type] = bin.readUint(data, offset) / 100000;\n    } else if (type == 'sRGB') {\n      out.tabs[type] = data[offset];\n    } else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) {\n        out.tabs[type] = [rUs(data, offset)];\n      } else if (out.ctype == 2 || out.ctype == 6) {\n        out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];\n      } else if (out.ctype == 3) {\n        out.tabs[type] = data[offset];\n      }\n    } else if (type == 'IEND') {\n      break;\n    } //else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\n\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n  }\n\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\n\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\n\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\n\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n        i = 0,\n        m = 0,\n        J = 0,\n        h = 0,\n        Q = 0,\n        X = 0,\n        u = 0,\n        w = 0,\n        d = 0,\n        v,\n        C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n        n = V.b,\n        A = V.e,\n        l = V.R,\n        M = V.n,\n        I = V.A,\n        e = V.Z,\n        b = V.m,\n        Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n            q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n\n      if (Z) W = H.H.W(W, w + (1 << 17));\n\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n\n        for (var c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n\n        for (var c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n              Y = b.c[s],\n              a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n\n          w = z;\n        }\n      }\n    }\n\n    return W.length == w ? W : W.slice(0, w);\n  };\n\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n        M = H.H.Z,\n        I = 0;\n\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n            m = 0;\n\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n\n        var J = I + m;\n\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n\n    return n;\n  };\n\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n        A = 0,\n        l = V.length >>> 1;\n\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n\n    return n;\n  };\n\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n        V = N.length,\n        n,\n        A,\n        l,\n        M,\n        I,\n        e = R.j;\n\n    for (var M = 0; M <= W; M++) e[M] = 0;\n\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n        n = H.H.m,\n        A = n.r;\n\n    for (var l = 0; l < V; l += 2) {\n      if (N[l + 1] != 0) {\n        var M = l >> 1,\n            I = N[l + 1],\n            e = M << 4 | I,\n            b = W - I,\n            Z = N[l] << b,\n            m = Z + (1 << b);\n\n        while (Z != m) {\n          var J = A[Z] >>> 15 - W;\n          R[J] = e;\n          Z++;\n        }\n      }\n    }\n  };\n\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n        V = 15 - W;\n\n    for (var n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n\n  H.H.m = function () {\n    var N = Uint16Array,\n        W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n\n  (function () {\n    var N = H.H.m,\n        W = 1 << 15;\n\n    for (var R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n\n    for (var R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n\n  return H.H.N;\n}();\n\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n      h = out.height;\n\n  var bpp = UPNG.decode._getBPP(out),\n      cbpp = bpp >> 3,\n      bpl = Math.ceil(w * bpp / 8);\n\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n\n  while (pass < 7) {\n    var ri = row_increment[pass],\n        ci = col_increment[pass];\n    var sw = 0,\n        sh = 0;\n    var cr = starting_row[pass];\n\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n\n    var cc = starting_col[pass];\n\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n\n    var bpll = Math.ceil(sw * bpp / 8);\n\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n\n    var y = 0,\n        row = starting_row[pass];\n    var val;\n\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n\n      while (col < w) {\n        if (bpp == 1) {\n          val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n\n        if (bpp == 2) {\n          val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n\n        if (bpp == 4) {\n          val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n\n          for (var j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n\n        cdi += bpp;\n        col += ci;\n      }\n\n      y++;\n      row += ri;\n    }\n\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n\n  return img;\n};\n\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\n\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      paeth = UPNG.decode._paeth;\n\n  bpp = Math.ceil(bpp / 8);\n  var i,\n      di,\n      type = data[off],\n      x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n\n  for (var y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n\n    if (type == 0) {\n      for (; x < bpl; x++) data[i + x] = data[di + x];\n    } else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n\n      for (; x < bpl; x++) {\n        data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n      }\n    }\n  }\n\n  return data;\n};\n\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n      pa = p - a,\n      pb = p - b,\n      pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\n\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\n\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n\n    for (var i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (var i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n\n    for (var i = 0; i < l; i++) arr.push(buff[p + i]);\n\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = '',\n        ns;\n\n    for (var i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n\n    return ns;\n  }\n};\n\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n      h = Math.min(sh, th);\n  var si = 0,\n      ti = 0;\n\n  for (var y = 0; y < h; y++) {\n    for (var x = 0; x < w; x++) {\n      if (xoff >= 0 && yoff >= 0) {\n        si = y * sw + x << 2;\n        ti = (yoff + y) * tw + xoff + x << 2;\n      } else {\n        si = (-yoff + y) * sw - xoff + x << 2;\n        ti = y * tw + x << 2;\n      }\n\n      if (mode == 0) {\n        tb[ti] = sb[si];\n        tb[ti + 1] = sb[si + 1];\n        tb[ti + 2] = sb[si + 2];\n        tb[ti + 3] = sb[si + 3];\n      } else if (mode == 1) {\n        var fa = sb[si + 3] * (1 / 255),\n            fr = sb[si] * fa,\n            fg = sb[si + 1] * fa,\n            fb = sb[si + 2] * fa;\n        var ba = tb[ti + 3] * (1 / 255),\n            br = tb[ti] * ba,\n            bg = tb[ti + 1] * ba,\n            bb = tb[ti + 2] * ba;\n        var ifa = 1 - fa,\n            oa = fa + ba * ifa,\n            ioa = oa == 0 ? 0 : 1 / oa;\n        tb[ti + 3] = 255 * oa;\n        tb[ti + 0] = (fr + br * ifa) * ioa;\n        tb[ti + 1] = (fg + bg * ifa) * ioa;\n        tb[ti + 2] = (fb + bb * ifa) * ioa;\n      } else if (mode == 2) {\n        // copy only differences, otherwise zero\n        var fa = sb[si + 3],\n            fr = sb[si],\n            fg = sb[si + 1],\n            fb = sb[si + 2];\n        var ba = tb[ti + 3],\n            br = tb[ti],\n            bg = tb[ti + 1],\n            bb = tb[ti + 2];\n\n        if (fa == ba && fr == br && fg == bg && fb == bb) {\n          tb[ti] = 0;\n          tb[ti + 1] = 0;\n          tb[ti + 2] = 0;\n          tb[ti + 3] = 0;\n        } else {\n          tb[ti] = fr;\n          tb[ti + 1] = fg;\n          tb[ti + 2] = fb;\n          tb[ti + 3] = fa;\n        }\n      } else if (mode == 3) {\n        // check if can be blended\n        var fa = sb[si + 3],\n            fr = sb[si],\n            fg = sb[si + 1],\n            fb = sb[si + 2];\n        var ba = tb[ti + 3],\n            br = tb[ti],\n            bg = tb[ti + 1],\n            bb = tb[ti + 2];\n        if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\n\n        if (fa < 220 && ba > 20) return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport { RGBMLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}