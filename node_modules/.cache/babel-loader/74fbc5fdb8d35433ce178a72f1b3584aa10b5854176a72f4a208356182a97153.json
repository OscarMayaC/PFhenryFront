{"ast":null,"code":"export function converter(state) {\n  const newDateFormat = {};\n  if (state) {\n    const dateSelector = state;\n    const newDate = new Date(dateSelector);\n    const dateFormat = newDate.toLocaleDateString('en-CA');\n    newDateFormat.fecha_inicio = dateFormat;\n  }\n  if (state) {\n    const timeSelector = state;\n    const newTime = new Date(timeSelector);\n    const timeFormat = newTime.toLocaleTimeString([], {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n    newDateFormat.hora_inicio = timeFormat;\n  }\n  return newDateFormat;\n}","map":{"version":3,"names":["converter","state","newDateFormat","dateSelector","newDate","Date","dateFormat","toLocaleDateString","fecha_inicio","timeSelector","newTime","timeFormat","toLocaleTimeString","hour","minute","hora_inicio"],"sources":["/Users/rociopichardo/Desktop/PFhenryFront/restaurante-pf-front/src/components/ReservationValidations/FormatConverter.jsx"],"sourcesContent":["export function converter(state){\n    const newDateFormat = {}\n\n    if(state){\n        const dateSelector = state\n        const newDate = new Date(dateSelector);\n        const dateFormat = newDate.toLocaleDateString('en-CA');\n        newDateFormat.fecha_inicio = dateFormat\n    }\n\n    if(state){\n        const timeSelector = state\n        const newTime = new Date(timeSelector);\n        const timeFormat = newTime.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n        newDateFormat.hora_inicio = timeFormat\n    }\n    return newDateFormat\n}"],"mappings":"AAAA,OAAO,SAASA,SAASA,CAACC,KAAK,EAAC;EAC5B,MAAMC,aAAa,GAAG,CAAC,CAAC;EAExB,IAAGD,KAAK,EAAC;IACL,MAAME,YAAY,GAAGF,KAAK;IAC1B,MAAMG,OAAO,GAAG,IAAIC,IAAI,CAACF,YAAY,CAAC;IACtC,MAAMG,UAAU,GAAGF,OAAO,CAACG,kBAAkB,CAAC,OAAO,CAAC;IACtDL,aAAa,CAACM,YAAY,GAAGF,UAAU;EAC3C;EAEA,IAAGL,KAAK,EAAC;IACL,MAAMQ,YAAY,GAAGR,KAAK;IAC1B,MAAMS,OAAO,GAAG,IAAIL,IAAI,CAACI,YAAY,CAAC;IACtC,MAAME,UAAU,GAAGD,OAAO,CAACE,kBAAkB,CAAC,EAAE,EAAE;MAAEC,IAAI,EAAE,SAAS;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAC;IACzFZ,aAAa,CAACa,WAAW,GAAGJ,UAAU;EAC1C;EACA,OAAOT,aAAa;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}